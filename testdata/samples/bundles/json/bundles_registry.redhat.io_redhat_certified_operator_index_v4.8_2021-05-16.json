{
	"Columns": [
		{
			"packageName": "alcide-kaudit-operator",
			"operatorBundleName": "alcide-kaudit-operator.v0.0.3",
			"operatorBundleVersion": "0.0.3",
			"certified": false,
			"bundlePath": "registry.connect.redhat.com/alcide/kaudit-operator-bundle@sha256:8b95b3769017ae44a5ba4bfaac8bccc07d11f2afcff0ce03af46e71cb440f9f2",
			"hasWebhook": false,
			"hasV1beta1CRDs": "YES",
			"buildAt": "2020-09-09T15:40:17.804777864Z",
			"company": "Alcide",
			"bundleChannel": [
				"alpha"
			],
			"defaultChannel": "alpha",
			"maturity": "alpha",
			"emailMaintainers": [
				"support@alcide.io"
			],
			"nameMaintainers": [
				"Alcide"
			],
			"links": [
				"https://www.alcide.io/kaudit-K8s-forensics/"
			],
			"capabilities": "Basic Install",
			"categories": "Security",
			"validatorWarnings": [
				"(alcide-kaudit-operator.v0.0.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"apiextensions.k8s.io/v1beta1, kind=CustomResourceDefinitions was deprecated in Kubernetes v1.16 and will be removed in v1.22 in favor of v1: [\"kaudits.kaudit.alcide.com\"] should be migrated"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"kaudits.kaudit.alcide.com does not have a status descriptor",
				"aks does not have a spec descriptor",
				"alcide does not have a spec descriptor",
				"gke does not have a spec descriptor",
				"ingress does not have a spec descriptor",
				"aws does not have a spec descriptor",
				"image does not have a spec descriptor",
				"k8sAuditEnvironment does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"runOptions does not have a spec descriptor",
				"vault does not have a spec descriptor",
				"clusterName does not have a spec descriptor",
				"k8s does not have a spec descriptor",
				"namespace does not have a spec descriptor",
				"storage does not have a spec descriptor",
				"tls does not have a spec descriptor",
				"kauditPolicyFile does not have a spec descriptor",
				"prometheus does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for aks",
				"Add a spec descriptor for alcide",
				"Add a spec descriptor for gke",
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for aws",
				"Add a spec descriptor for image",
				"Add a spec descriptor for k8sAuditEnvironment",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for runOptions",
				"Add a spec descriptor for vault",
				"Add a spec descriptor for clusterName",
				"Add a spec descriptor for k8s",
				"Add a spec descriptor for namespace",
				"Add a spec descriptor for storage",
				"Add a spec descriptor for tls",
				"Add a spec descriptor for kauditPolicyFile",
				"Add a spec descriptor for prometheus",
				"Add CRD validation for spec field `aws` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `k8s` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `namespace` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `vault` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `aks` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `k8sAuditEnvironment` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `resources` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `runOptions` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `alcide` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `gke` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `ingress` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `storage` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `tls` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `clusterName` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `image` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `kauditPolicyFile` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `prometheus` in Kaudit/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"invalidVersioning": "NO",
			"invalidSkipRange": "NOT USED",
			"supportsAllNamespaces": true,
			"supportSingleNamespaces": true,
			"supportsOwnNamespaces": true,
			"ocpLabel": "v4.5,v4.6"
		},
		{
			"packageName": "anaconda-team-edition",
			"operatorBundleName": "anaconda-team-edition.v6.1.3",
			"operatorBundleVersion": "6.1.3",
			"certified": false,
			"bundlePath": "registry.connect.redhat.com/anaconda/anaconda-team-edition-bundle@sha256:43327356ec622d12126d5d13ae9c968dd7cc9e8555eadbb8e212d0b37cfb25a3",
			"hasWebhook": false,
			"hasV1beta1CRDs": "YES",
			"buildAt": "2020-09-24T13:57:07.140350464Z",
			"company": "Anaconda, Inc.",
			"repository": "github.com/anaconda",
			"bundleChannel": [
				"beta"
			],
			"defaultChannel": "beta",
			"maturity": "beta",
			"emailMaintainers": [
				"",
				"devops@anaconda.com"
			],
			"nameMaintainers": [
				"Anaconda Engineering",
				""
			],
			"links": [
				"http://team-docs.anaconda.com"
			],
			"capabilities": "Basic Install",
			"categories": "AI/Machine Learning, Big Data, Developer Tools",
			"validatorErrors": [
				"(anaconda-team-edition.v6.1.3) csv.Spec.Maintainers elements should contain both name and email",
				"(anaconda-team-edition.v6.1.3) csv.Spec.Maintainers elements should contain both name and email"
			],
			"validatorWarnings": [
				"(anaconda-team-edition.v6.1.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"apiextensions.k8s.io/v1beta1, kind=CustomResourceDefinitions was deprecated in Kubernetes v1.16 and will be removed in v1.22 in favor of v1: [\"anacondateameditions.anaconda.com\"] should be migrated"
			],
			"scorecardErrors": [
				"anacondateameditions.anaconda.com does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"api does not have a spec descriptor",
				"dispatcher does not have a spec descriptor",
				"route does not have a spec descriptor",
				"postgres does not have a spec descriptor",
				"proxy does not have a spec descriptor",
				"redis does not have a spec descriptor",
				"storage does not have a spec descriptor",
				"worker does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `worker` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `api` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `dispatcher` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `route` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `postgres` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `proxy` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `redis` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `storage` in AnacondaTeamEdition/v1beta1",
				"Add a spec descriptor for api",
				"Add a spec descriptor for dispatcher",
				"Add a spec descriptor for route",
				"Add a spec descriptor for postgres",
				"Add a spec descriptor for proxy",
				"Add a spec descriptor for redis",
				"Add a spec descriptor for storage",
				"Add a spec descriptor for worker"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"invalidVersioning": "NO",
			"invalidSkipRange": "NOT USED",
			"supportsAllNamespaces": true,
			"supportSingleNamespaces": true,
			"supportsOwnNamespaces": true,
			"ocpLabel": "v4.5,v4.6"
		}
	],
	"Flags": {
		"image": "registry.redhat.io/redhat/certified-operator-index:v4.8",
		"limit": 2,
		"headOnly": true,
		"disableScorecard": false,
		"disableValidators": false,
		"label": "",
		"labelValue": "",
		"filter": "",
		"outputPath": "/Users/camilamacedo/go/src/github.com/operator-framework/audit-1/testdata/samples/bundles/json",
		"outputFormat": "json"
	},
	"IndexImageInspect": {
		"ID": "sha256:414ec051c4eec31a9f8e0e51eb4e0aa92653ca6b1d1c3da6cef92cb4bd21d0ed",
		"Created": "2021-04-27T21:39:54.614373596Z",
		"Config": {
			"Labels": {
				"License": "GPLv2+",
				"architecture": "x86_64",
				"build-date": "2021-03-27T03:46:48.681338",
				"com.redhat.build-host": "cpt-1004.osbs.prod.upshift.rdu2.redhat.com",
				"com.redhat.component": "operator-registry-container",
				"com.redhat.index.delivery.distribution_scope": "prod",
				"com.redhat.index.delivery.version": "v4.8",
				"com.redhat.license_terms": "https://www.redhat.com/agreements",
				"description": "This is a component of OpenShift Operator Lifecycle Manager and is the base for operator catalog API containers.",
				"distribution-scope": "public",
				"io.buildah.version": "1.16.7",
				"io.k8s.description": "This is a component of OpenShift Operator Lifecycle Manager and is the base for operator catalog API containers.",
				"io.k8s.display-name": "OpenShift Operator Registry",
				"io.openshift.build.commit.id": "bc4c9f8f967736a6ff774c52845e8a3ed28e7072",
				"io.openshift.build.commit.url": "https://github.com/operator-framework/operator-registry/commit/bc4c9f8f967736a6ff774c52845e8a3ed28e7072",
				"io.openshift.build.source-location": "https://github.com/operator-framework/operator-registry",
				"io.openshift.maintainer.component": "OLM",
				"io.openshift.maintainer.product": "OpenShift Container Platform",
				"io.openshift.tags": "openshift,base",
				"maintainer": "Odin Team \u003caos-odin@redhat.com\u003e",
				"name": "openshift/ose-operator-registry",
				"operators.operatorframework.io.index.database.v1": "/database/index.db",
				"release": "202103270246.p0",
				"summary": "Operator Registry runs in a Kubernetes or OpenShift cluster to provide operator catalog data to Operator Lifecycle Manager.",
				"url": "https://access.redhat.com/containers/#/registry.access.redhat.com/openshift/ose-operator-registry/images/v4.5.0-202103270246.p0",
				"vcs-ref": "35e04a390e2ca45f9ef267a5ab9e7bec47cb331a",
				"vcs-type": "git",
				"vendor": "Red Hat, Inc.",
				"version": "v4.5.0"
			}
		}
	}
}