{
	"columns": [
		{
			"packageName": "alcide-kaudit-operator",
			"hasV1beta1CRD": "YES",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(alcide-kaudit-operator.v0.0.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"apiextensions.k8s.io/v1beta1, kind=CustomResourceDefinitions was deprecated in Kubernetes v1.16 and will be removed in v1.22 in favor of v1: [\"kaudits.kaudit.alcide.com\"] should be migrated"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"clusterName does not have a spec descriptor",
				"gke does not have a spec descriptor",
				"image does not have a spec descriptor",
				"ingress does not have a spec descriptor",
				"prometheus does not have a spec descriptor",
				"runOptions does not have a spec descriptor",
				"k8s does not have a spec descriptor",
				"k8sAuditEnvironment does not have a spec descriptor",
				"kauditPolicyFile does not have a spec descriptor",
				"namespace does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"storage does not have a spec descriptor",
				"aks does not have a spec descriptor",
				"tls does not have a spec descriptor",
				"vault does not have a spec descriptor",
				"alcide does not have a spec descriptor",
				"aws does not have a spec descriptor",
				"kaudits.kaudit.alcide.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `kauditPolicyFile` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `clusterName` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `runOptions` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `storage` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `tls` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `vault` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `resources` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `aks` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `alcide` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `gke` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `ingress` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `k8s` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `k8sAuditEnvironment` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `aws` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `image` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `namespace` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `prometheus` in Kaudit/v1alpha1",
				"Add a spec descriptor for clusterName",
				"Add a spec descriptor for gke",
				"Add a spec descriptor for image",
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for prometheus",
				"Add a spec descriptor for runOptions",
				"Add a spec descriptor for k8s",
				"Add a spec descriptor for k8sAuditEnvironment",
				"Add a spec descriptor for kauditPolicyFile",
				"Add a spec descriptor for namespace",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for storage",
				"Add a spec descriptor for aks",
				"Add a spec descriptor for tls",
				"Add a spec descriptor for vault",
				"Add a spec descriptor for alcide",
				"Add a spec descriptor for aws"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasSupportForAllNamespaces": true,
			"errors": null
		},
		{
			"packageName": "anaconda-team-edition",
			"hasV1beta1CRD": "YES",
			"hasValidatorErrors": true,
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorErrors": [
				"(anaconda-team-edition.v6.1.3) csv.Spec.Maintainers elements should contain both name and email",
				"(anaconda-team-edition.v6.1.3) csv.Spec.Maintainers elements should contain both name and email"
			],
			"validatorWarnings": [
				"(anaconda-team-edition.v6.1.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"apiextensions.k8s.io/v1beta1, kind=CustomResourceDefinitions was deprecated in Kubernetes v1.16 and will be removed in v1.22 in favor of v1: [\"anacondateameditions.anaconda.com\"] should be migrated"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"anacondateameditions.anaconda.com does not have a status descriptor",
				"proxy does not have a spec descriptor",
				"redis does not have a spec descriptor",
				"storage does not have a spec descriptor",
				"worker does not have a spec descriptor",
				"api does not have a spec descriptor",
				"dispatcher does not have a spec descriptor",
				"route does not have a spec descriptor",
				"postgres does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `route` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `postgres` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `proxy` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `redis` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `storage` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `worker` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `api` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `dispatcher` in AnacondaTeamEdition/v1beta1",
				"Add a spec descriptor for proxy",
				"Add a spec descriptor for redis",
				"Add a spec descriptor for storage",
				"Add a spec descriptor for worker",
				"Add a spec descriptor for api",
				"Add a spec descriptor for dispatcher",
				"Add a spec descriptor for route",
				"Add a spec descriptor for postgres"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasSupportForAllNamespaces": true,
			"errors": null
		},
		{
			"packageName": "appdynamics-operator",
			"hasV1beta1CRD": "YES",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(appdynamics-operator.v0.6.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"apiextensions.k8s.io/v1beta1, kind=CustomResourceDefinitions was deprecated in Kubernetes v1.16 and will be removed in v1.22 in favor of v1: [\"adams.appdynamics.com\" \"clusteragents.appdynamics.com\" \"infravizs.appdynamics.com\"] should be migrated"
			],
			"scorecardErrors": [
				"adams.appdynamics.com does not have a status descriptor",
				"clusteragents.appdynamics.com does not have a status descriptor",
				"infravizs.appdynamics.com does not have a status descriptor",
				"netVizPort does not have a spec descriptor",
				"stdoutLogging does not have a spec descriptor",
				"enableDockerViz does not have a spec descriptor",
				"enableMasters does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for netVizPort",
				"Add a spec descriptor for stdoutLogging",
				"Add a spec descriptor for enableDockerViz",
				"Add a spec descriptor for enableMasters"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasSupportForAllNamespaces": true,
			"errors": null
		},
		{
			"packageName": "anchore-engine",
			"hasV1beta1CRD": "YES",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(anchore-engine-operator.v0.1.11) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"apiextensions.k8s.io/v1beta1, kind=CustomResourceDefinitions was deprecated in Kubernetes v1.16 and will be removed in v1.22 in favor of v1: [\"anchoreengines.anchore.com\"] should be migrated"
			],
			"scorecardErrors": [
				"ingress does not have a spec descriptor",
				"postgresql does not have a spec descriptor",
				"anchoreAnalyzer does not have a spec descriptor",
				"anchoreApi does not have a spec descriptor",
				"anchoreCatalog does not have a spec descriptor",
				"anchoreGlobal does not have a spec descriptor",
				"anchorePolicyEngine does not have a spec descriptor",
				"anchoreSimpleQueue does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"anchoreengines.anchore.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for AnchoreEngine/v1alpha1",
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for postgresql",
				"Add a spec descriptor for anchoreAnalyzer",
				"Add a spec descriptor for anchoreApi",
				"Add a spec descriptor for anchoreCatalog",
				"Add a spec descriptor for anchoreGlobal",
				"Add a spec descriptor for anchorePolicyEngine",
				"Add a spec descriptor for anchoreSimpleQueue"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasSupportForAllNamespaces": true,
			"errors": null
		},
		{
			"packageName": "anzo-operator",
			"hasV1beta1CRD": "YES",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(anzo-operator.v1.1.103) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"apiextensions.k8s.io/v1beta1, kind=CustomResourceDefinitions was deprecated in Kubernetes v1.16 and will be removed in v1.22 in favor of v1: [\"anzos.anzo.cambridgesemantics.com\"] should be migrated"
			],
			"errors": null
		}
	],
	"flags": {
		"index-image": "registry.redhat.io/redhat/certified-operator-index:v4.8",
		"limit": 5,
		"filter": "",
		"outputPath": "/Users/camilamacedo/go/src/github.com/operator-framework/audit-1/testdata/samples/packages/json",
		"outputFormat": "json",
		"disableScorecard": false,
		"disableValidators": false
	}
}