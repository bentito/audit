{
	"columns": [
		{
			"packageName": "3scale-community-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(3scale-community-operator.v0.5.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"apimanagers.apps.3scale.net\" \"apis.capabilities.3scale.net\" \"bindings.capabilities.3scale.net\" \"limits.capabilities.3scale.net\" \"mappingrules.capabilities.3scale.net\" \"metrics.capabilities.3scale.net\" \"plans.capabilities.3scale.net\" \"tenants.capabilities.3scale.net\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"highAvailability does not have a spec descriptor",
				"system does not have a spec descriptor",
				"description does not have a spec descriptor",
				"integrationMethod does not have a spec descriptor",
				"APISelector does not have a spec descriptor",
				"credentialsRef does not have a spec descriptor",
				"period does not have a spec descriptor",
				"description does not have a spec descriptor",
				"maxValue does not have a spec descriptor",
				"metricRef does not have a spec descriptor",
				"increment does not have a spec descriptor",
				"method does not have a spec descriptor",
				"metricRef does not have a spec descriptor",
				"path does not have a spec descriptor",
				"description does not have a spec descriptor",
				"incrementHits does not have a spec descriptor",
				"unit does not have a spec descriptor",
				"approvalRequired does not have a spec descriptor",
				"costs does not have a spec descriptor",
				"default does not have a spec descriptor",
				"limitSelector does not have a spec descriptor",
				"trialPeriod does not have a spec descriptor",
				"passwordCredentialsRef does not have a spec descriptor",
				"systemMasterUrl does not have a spec descriptor",
				"tenantSecretRef does not have a spec descriptor",
				"username does not have a spec descriptor",
				"email does not have a spec descriptor",
				"masterCredentialsRef does not have a spec descriptor",
				"organizationName does not have a spec descriptor",
				"apis.capabilities.3scale.net does not have a status descriptor",
				"bindings.capabilities.3scale.net does not have a status descriptor",
				"limits.capabilities.3scale.net does not have a status descriptor",
				"mappingrules.capabilities.3scale.net does not have a status descriptor",
				"metrics.capabilities.3scale.net does not have a status descriptor",
				"plans.capabilities.3scale.net does not have a status descriptor",
				"tenants.capabilities.3scale.net does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `APISelector` in Binding/v1alpha1",
				"Add CRD validation for spec field `description` in Limit/v1alpha1",
				"Add a spec descriptor for highAvailability",
				"Add a spec descriptor for system",
				"Add a spec descriptor for description",
				"Add a spec descriptor for integrationMethod",
				"Add a spec descriptor for APISelector",
				"Add a spec descriptor for credentialsRef",
				"Add a spec descriptor for period",
				"Add a spec descriptor for description",
				"Add a spec descriptor for maxValue",
				"Add a spec descriptor for metricRef",
				"Add a spec descriptor for increment",
				"Add a spec descriptor for method",
				"Add a spec descriptor for metricRef",
				"Add a spec descriptor for path",
				"Add a spec descriptor for description",
				"Add a spec descriptor for incrementHits",
				"Add a spec descriptor for unit",
				"Add a spec descriptor for approvalRequired",
				"Add a spec descriptor for costs",
				"Add a spec descriptor for default",
				"Add a spec descriptor for limitSelector",
				"Add a spec descriptor for trialPeriod",
				"Add a spec descriptor for passwordCredentialsRef",
				"Add a spec descriptor for systemMasterUrl",
				"Add a spec descriptor for tenantSecretRef",
				"Add a spec descriptor for username",
				"Add a spec descriptor for email",
				"Add a spec descriptor for masterCredentialsRef",
				"Add a spec descriptor for organizationName"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "akka-cluster-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"akkaclusters.app.lightbend.com\"])"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `replicas` in AkkaCluster/v1alpha1",
				"Add CRD validation for spec field `template` in AkkaCluster/v1alpha1"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "alvearie-imaging-ingestion",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(imaging-ingestion-operator.v0.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "api-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(api-operator.v2.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"apis.wso2.com\" \"integrations.wso2.com\" \"targetendpoints.wso2.com\"])"
			],
			"scorecardErrors": [
				"swaggerConfigMapName does not have a spec descriptor",
				"certsValues does not have a spec descriptor",
				"paramsValues does not have a spec descriptor",
				"autoScale does not have a spec descriptor",
				"deploySpec does not have a spec descriptor",
				"env does not have a spec descriptor",
				"expose does not have a spec descriptor",
				"image does not have a spec descriptor",
				"applicationProtocol does not have a spec descriptor",
				"deploy does not have a spec descriptor",
				"mode does not have a spec descriptor",
				"ports does not have a spec descriptor",
				"apis.wso2.com does not have a status descriptor",
				"integrations.wso2.com does not have a status descriptor",
				"targetendpoints.wso2.com does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for swaggerConfigMapName",
				"Add a spec descriptor for certsValues",
				"Add a spec descriptor for paramsValues",
				"Add a spec descriptor for autoScale",
				"Add a spec descriptor for deploySpec",
				"Add a spec descriptor for env",
				"Add a spec descriptor for expose",
				"Add a spec descriptor for image",
				"Add a spec descriptor for applicationProtocol",
				"Add a spec descriptor for deploy",
				"Add a spec descriptor for mode",
				"Add a spec descriptor for ports"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "apicast-community-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"apicasts.apps.3scale.net\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"apicasts.apps.3scale.net does not have a status descriptor",
				"apicasts.apps.3scale.net does not have a status descriptor",
				"apicasts.apps.3scale.net does not have a status descriptor",
				"adminPortalCredentialsRef does not have a spec descriptor",
				"embeddedConfigurationSecretRef does not have a spec descriptor",
				"adminPortalCredentialsRef does not have a spec descriptor",
				"exposedHost does not have a spec descriptor",
				"logLevel does not have a spec descriptor",
				"replicas does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for adminPortalCredentialsRef",
				"Add a spec descriptor for embeddedConfigurationSecretRef",
				"Add a spec descriptor for adminPortalCredentialsRef",
				"Add a spec descriptor for exposedHost",
				"Add a spec descriptor for logLevel",
				"Add a spec descriptor for replicas"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "apicurio-registry",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(apicurio-registry.v0.0.4-v1.3.2.final) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"apicurioregistries.apicur.io\"])"
			],
			"scorecardErrors": [
				"apicurioregistries.apicur.io does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"error spec does not exist"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"basic-check-spec"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "apicurito",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(apicuritooperator.v0.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"apicuritos.apicur.io\"])"
			],
			"scorecardErrors": [
				"size does not have a spec descriptor",
				"image does not have a spec descriptor",
				"apicuritos.apicur.io does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for size",
				"Add a spec descriptor for image",
				"Add CRD validation for spec field `size` in Apicurito/v1alpha1",
				"Add CRD validation for spec field `image` in Apicurito/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "aqua",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(aqua-operator.v6.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"aquacsps.operator.aquasec.com\" \"aquadatabases.operator.aquasec.com\" \"aquaenforcers.operator.aquasec.com\" \"aquagateways.operator.aquasec.com\" \"aquakubeenforcers.operator.aquasec.com\" \"aquascanners.operator.aquasec.com\" \"aquaservers.operator.aquasec.com\"])"
			],
			"scorecardErrors": [
				"aquacsps.operator.aquasec.com does not have a status descriptor",
				"aquadatabases.operator.aquasec.com does not have a status descriptor",
				"aquaenforcers.operator.aquasec.com does not have a status descriptor",
				"aquakubeenforcers.operator.aquasec.com does not have a status descriptor",
				"aquagateways.operator.aquasec.com does not have a status descriptor",
				"aquascanners.operator.aquasec.com does not have a status descriptor",
				"aquaservers.operator.aquasec.com does not have a status descriptor",
				"infra does not have a spec descriptor",
				"common does not have a spec descriptor",
				"database does not have a spec descriptor",
				"gateway does not have a spec descriptor",
				"server does not have a spec descriptor",
				"route does not have a spec descriptor",
				"deploy does not have a spec descriptor",
				"diskSize does not have a spec descriptor",
				"infra does not have a spec descriptor",
				"common does not have a spec descriptor",
				"infra does not have a spec descriptor",
				"common does not have a spec descriptor",
				"deploy does not have a spec descriptor",
				"gateway does not have a spec descriptor",
				"token does not have a spec descriptor",
				"config does not have a spec descriptor",
				"deploy does not have a spec descriptor",
				"token does not have a spec descriptor",
				"infra does not have a spec descriptor",
				"deploy does not have a spec descriptor",
				"infra does not have a spec descriptor",
				"common does not have a spec descriptor",
				"externalDb does not have a spec descriptor",
				"infra does not have a spec descriptor",
				"common does not have a spec descriptor",
				"deploy does not have a spec descriptor",
				"login does not have a spec descriptor",
				"infra does not have a spec descriptor",
				"common does not have a spec descriptor",
				"externalDb does not have a spec descriptor",
				"deploy does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for infra",
				"Add a spec descriptor for common",
				"Add a spec descriptor for database",
				"Add a spec descriptor for gateway",
				"Add a spec descriptor for server",
				"Add a spec descriptor for route",
				"Add a spec descriptor for deploy",
				"Add a spec descriptor for diskSize",
				"Add a spec descriptor for infra",
				"Add a spec descriptor for common",
				"Add a spec descriptor for infra",
				"Add a spec descriptor for common",
				"Add a spec descriptor for deploy",
				"Add a spec descriptor for gateway",
				"Add a spec descriptor for token",
				"Add a spec descriptor for config",
				"Add a spec descriptor for deploy",
				"Add a spec descriptor for token",
				"Add a spec descriptor for infra",
				"Add a spec descriptor for deploy",
				"Add a spec descriptor for infra",
				"Add a spec descriptor for common",
				"Add a spec descriptor for externalDb",
				"Add a spec descriptor for infra",
				"Add a spec descriptor for common",
				"Add a spec descriptor for deploy",
				"Add a spec descriptor for login",
				"Add a spec descriptor for infra",
				"Add a spec descriptor for common",
				"Add a spec descriptor for externalDb",
				"Add a spec descriptor for deploy",
				"Add CRD validation for spec field `gateway` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `server` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `route` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `infra` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `common` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `database` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `infra` in AquaDatabase/v1alpha1",
				"Add CRD validation for spec field `common` in AquaDatabase/v1alpha1",
				"Add CRD validation for spec field `deploy` in AquaDatabase/v1alpha1",
				"Add CRD validation for spec field `diskSize` in AquaDatabase/v1alpha1",
				"Add CRD validation for spec field `token` in AquaEnforcer/v1alpha1",
				"Add CRD validation for spec field `infra` in AquaEnforcer/v1alpha1",
				"Add CRD validation for spec field `common` in AquaEnforcer/v1alpha1",
				"Add CRD validation for spec field `deploy` in AquaEnforcer/v1alpha1",
				"Add CRD validation for spec field `gateway` in AquaEnforcer/v1alpha1",
				"Add CRD validation for AquaKubeEnforcer/v1alpha1",
				"Add CRD validation for spec field `infra` in AquaGateway/v1alpha1",
				"Add CRD validation for spec field `common` in AquaGateway/v1alpha1",
				"Add CRD validation for spec field `externalDb` in AquaGateway/v1alpha1",
				"Add CRD validation for spec field `deploy` in AquaGateway/v1alpha1",
				"Add CRD validation for spec field `infra` in AquaScanner/v1alpha1",
				"Add CRD validation for spec field `common` in AquaScanner/v1alpha1",
				"Add CRD validation for spec field `deploy` in AquaScanner/v1alpha1",
				"Add CRD validation for spec field `login` in AquaScanner/v1alpha1",
				"Add CRD validation for spec field `infra` in AquaServer/v1alpha1",
				"Add CRD validation for spec field `common` in AquaServer/v1alpha1",
				"Add CRD validation for spec field `externalDb` in AquaServer/v1alpha1",
				"Add CRD validation for spec field `deploy` in AquaServer/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "argocd-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(argocd-operator.v0.0.15) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"argocdexports.argoproj.io\" \"argocds.argoproj.io\"])",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"destination does not have a spec descriptor",
				"project does not have a spec descriptor",
				"source does not have a spec descriptor",
				"sourceRepos does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"applications.argoproj.io does not have a status descriptor",
				"appprojects.argoproj.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for destination",
				"Add a spec descriptor for project",
				"Add a spec descriptor for source",
				"Add a spec descriptor for sourceRepos",
				"Warning: Value argoproj.io/v1alpha1, Kind=ApplicationSet: provided API should have an example annotation"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "argocd-operator-helm",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(argocd-operator-helm.v0.0.7) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"argocds.argoproj.io\"])"
			],
			"scorecardErrors": [
				"redis does not have a spec descriptor",
				"redis-ha does not have a spec descriptor",
				"configs does not have a spec descriptor",
				"nameOverride does not have a spec descriptor",
				"installCRDs does not have a spec descriptor",
				"global does not have a spec descriptor",
				"controller does not have a spec descriptor",
				"dex does not have a spec descriptor",
				"fullnameOverride does not have a spec descriptor",
				"server does not have a spec descriptor",
				"repoServer does not have a spec descriptor",
				"openshift does not have a spec descriptor",
				"argocds.argoproj.io does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for redis",
				"Add a spec descriptor for redis-ha",
				"Add a spec descriptor for configs",
				"Add a spec descriptor for nameOverride",
				"Add a spec descriptor for installCRDs",
				"Add a spec descriptor for global",
				"Add a spec descriptor for controller",
				"Add a spec descriptor for dex",
				"Add a spec descriptor for fullnameOverride",
				"Add a spec descriptor for server",
				"Add a spec descriptor for repoServer",
				"Add a spec descriptor for openshift",
				"Add CRD validation for ArgoCD/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "assisted-service-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(assisted-service-operator.v0.0.5-rc.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"agentserviceconfigs.agent-install.openshift.io does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Warning: Value extensions.hive.openshift.io/v1beta1, Kind=AgentClusterInstall: provided API should have an example annotation",
				"Warning: Value agent-install.openshift.io/v1beta1, Kind=Agent: provided API should have an example annotation",
				"Warning: Value agent-install.openshift.io/v1beta1, Kind=InfraEnv: provided API should have an example annotation",
				"Warning: Value agent-install.openshift.io/v1beta1, Kind=NMStateConfig: provided API should have an example annotation"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "atlasmap-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(atlasmap-operator.v0.3.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"atlasmaps.atlasmap.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "aws-efs-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(aws-efs-operator.v0.0.5) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"sharedvolumes.aws-efs.managed.openshift.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "awss3-operator-registry",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(awss3operator.1.0.1) csv.metadata.Name awss3operator.1.0.1 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "azure-service-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(azure-service-operator.v0.37.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"apimgmtapis.azure.microsoft.com\" \"apimservices.azure.microsoft.com\" \"appinsights.azure.microsoft.com\" \"appinsightsapikeys.azure.microsoft.com\" \"azureloadbalancers.azure.microsoft.com\" \"azurenetworkinterfaces.azure.microsoft.com\" \"azurepublicipaddresses.azure.microsoft.com\" \"azuresqlactions.azure.microsoft.com\" \"azuresqldatabases.azure.microsoft.com\" \"azuresqlfailovergroups.azure.microsoft.com\" \"azuresqlfirewallrules.azure.microsoft.com\" \"azuresqlmanagedusers.azure.microsoft.com\" \"azuresqlservers.azure.microsoft.com\" \"azuresqlusers.azure.microsoft.com\" \"azuresqlvnetrules.azure.microsoft.com\" \"azurevirtualmachineextensions.azure.microsoft.com\" \"azurevirtualmachines.azure.microsoft.com\" \"azurevmscalesets.azure.microsoft.com\" \"blobcontainers.azure.microsoft.com\" \"consumergroups.azure.microsoft.com\" \"cosmosdbs.azure.microsoft.com\" \"eventhubnamespaces.azure.microsoft.com\" \"eventhubs.azure.microsoft.com\" \"keyvaultkeys.azure.microsoft.com\" \"keyvaults.azure.microsoft.com\" \"mysqldatabases.azure.microsoft.com\" \"mysqlfirewallrules.azure.microsoft.com\" \"mysqlservers.azure.microsoft.com\" \"mysqlusers.azure.microsoft.com\" \"mysqlvnetrules.azure.microsoft.com\" \"postgresqldatabases.azure.microsoft.com\" \"postgresqlfirewallrules.azure.microsoft.com\" \"postgresqlservers.azure.microsoft.com\" \"postgresqlusers.azure.microsoft.com\" \"postgresqlvnetrules.azure.microsoft.com\" \"rediscacheactions.azure.microsoft.com\" \"rediscachefirewallrules.azure.microsoft.com\" \"rediscaches.azure.microsoft.com\" \"resourcegroups.azure.microsoft.com\" \"storageaccounts.azure.microsoft.com\" \"virtualnetworks.azure.microsoft.com\"])"
			],
			"scorecardErrors": [
				"apimgmtapis.azure.microsoft.com does not have a status descriptor",
				"apimservices.azure.microsoft.com does not have a status descriptor",
				"appinsights.azure.microsoft.com does not have a status descriptor",
				"appinsightsapikeys.azure.microsoft.com does not have a status descriptor",
				"azureloadbalancers.azure.microsoft.com does not have a status descriptor",
				"azurenetworkinterfaces.azure.microsoft.com does not have a status descriptor",
				"azurepublicipaddresses.azure.microsoft.com does not have a status descriptor",
				"azurepublicipaddresses.azure.microsoft.com does not have a status descriptor",
				"azuresqlmanagedusers.azure.microsoft.com does not have a status descriptor",
				"azuresqlusers.azure.microsoft.com does not have a status descriptor",
				"azuresqlvnetrules.azure.microsoft.com does not have a status descriptor",
				"azuresqlactions.azure.microsoft.com does not have a status descriptor",
				"azuresqldatabases.azure.microsoft.com does not have a status descriptor",
				"azuresqldatabases.azure.microsoft.com does not have a status descriptor",
				"azuresqlfailovergroups.azure.microsoft.com does not have a status descriptor",
				"azuresqlfirewallrules.azure.microsoft.com does not have a status descriptor",
				"azuresqlservers.azure.microsoft.com does not have a status descriptor",
				"azuresqlservers.azure.microsoft.com does not have a status descriptor",
				"azurevmscalesets.azure.microsoft.com does not have a status descriptor",
				"azurevirtualmachines.azure.microsoft.com does not have a status descriptor",
				"azurevirtualmachineextensions.azure.microsoft.com does not have a status descriptor",
				"blobcontainers.azure.microsoft.com does not have a status descriptor",
				"consumergroups.azure.microsoft.com does not have a status descriptor",
				"cosmosdbs.azure.microsoft.com does not have a status descriptor",
				"cosmosdbs.azure.microsoft.com does not have a status descriptor",
				"eventhubs.azure.microsoft.com does not have a status descriptor",
				"eventhubs.azure.microsoft.com does not have a status descriptor",
				"eventhubnamespaces.azure.microsoft.com does not have a status descriptor",
				"keyvaults.azure.microsoft.com does not have a status descriptor",
				"keyvaults.azure.microsoft.com does not have a status descriptor",
				"keyvaultkeys.azure.microsoft.com does not have a status descriptor",
				"mysqldatabases.azure.microsoft.com does not have a status descriptor",
				"mysqldatabases.azure.microsoft.com does not have a status descriptor",
				"mysqlfirewallrules.azure.microsoft.com does not have a status descriptor",
				"mysqlfirewallrules.azure.microsoft.com does not have a status descriptor",
				"mysqlservers.azure.microsoft.com does not have a status descriptor",
				"mysqlservers.azure.microsoft.com does not have a status descriptor",
				"mysqlservers.azure.microsoft.com does not have a status descriptor",
				"mysqlusers.azure.microsoft.com does not have a status descriptor",
				"mysqlvnetrules.azure.microsoft.com does not have a status descriptor",
				"postgresqldatabases.azure.microsoft.com does not have a status descriptor",
				"postgresqldatabases.azure.microsoft.com does not have a status descriptor",
				"postgresqlfirewallrules.azure.microsoft.com does not have a status descriptor",
				"postgresqlfirewallrules.azure.microsoft.com does not have a status descriptor",
				"postgresqlservers.azure.microsoft.com does not have a status descriptor",
				"postgresqlservers.azure.microsoft.com does not have a status descriptor",
				"postgresqlservers.azure.microsoft.com does not have a status descriptor",
				"postgresqlusers.azure.microsoft.com does not have a status descriptor",
				"postgresqlvnetrules.azure.microsoft.com does not have a status descriptor",
				"rediscaches.azure.microsoft.com does not have a status descriptor",
				"rediscacheactions.azure.microsoft.com does not have a status descriptor",
				"rediscachefirewallrules.azure.microsoft.com does not have a status descriptor",
				"resourcegroups.azure.microsoft.com does not have a status descriptor",
				"storageaccounts.azure.microsoft.com does not have a status descriptor",
				"virtualnetworks.azure.microsoft.com does not have a status descriptor",
				"blobcontainers.azure.microsoft.com does not have a status descriptor",
				"mysqlservers.azure.microsoft.com does not have a status descriptor",
				"postgresqlservers.azure.microsoft.com does not have a status descriptor",
				"azuresqldatabases.azure.microsoft.com does not have a status descriptor",
				"azuresqlfailovergroups.azure.microsoft.com does not have a status descriptor",
				"azuresqlfirewallrules.azure.microsoft.com does not have a status descriptor",
				"azuresqlservers.azure.microsoft.com does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"location does not have a spec descriptor",
				"properties does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"apiId does not have a spec descriptor",
				"apiService does not have a spec descriptor",
				"appInsightsResourceGroup does not have a spec descriptor",
				"vnetName does not have a spec descriptor",
				"vnetType does not have a spec descriptor",
				"publisherName does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"tier does not have a spec descriptor",
				"vnetResourceGroup does not have a spec descriptor",
				"vnetSubnetName does not have a spec descriptor",
				"appInsightsName does not have a spec descriptor",
				"location does not have a spec descriptor",
				"publisherEmail does not have a spec descriptor",
				"applicationType does not have a spec descriptor",
				"kind does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"appInsights does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"readTelemetry does not have a spec descriptor",
				"writeAnnotations does not have a spec descriptor",
				"authSDKControlChannel does not have a spec descriptor",
				"frontendPortRangeStart does not have a spec descriptor",
				"inboundNatPoolName does not have a spec descriptor",
				"location does not have a spec descriptor",
				"publicIPAddressName does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"backendAddressPoolName does not have a spec descriptor",
				"backendPort does not have a spec descriptor",
				"frontendPortRangeEnd does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"subnetName does not have a spec descriptor",
				"vnetName does not have a spec descriptor",
				"location does not have a spec descriptor",
				"publicIPAddressName does not have a spec descriptor",
				"idleTimeoutInMinutes does not have a spec descriptor",
				"location does not have a spec descriptor",
				"publicIPAddressVersion does not have a spec descriptor",
				"publicIPAllocationMethod does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"skuName does not have a spec descriptor",
				"idleTimeoutInMinutes does not have a spec descriptor",
				"location does not have a spec descriptor",
				"publicIPAddressVersion does not have a spec descriptor",
				"publicIPAllocationMethod does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"skuName does not have a spec descriptor",
				"dbName does not have a spec descriptor",
				"managedIdentityClientId does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"roles does not have a spec descriptor",
				"server does not have a spec descriptor",
				"dbName does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"roles does not have a spec descriptor",
				"server does not have a spec descriptor",
				"vNetName does not have a spec descriptor",
				"vNetResourceGroup does not have a spec descriptor",
				"ignoreMissingServiceEndpoint does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"subnetName does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"serverName does not have a spec descriptor",
				"edition does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourcegroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"server does not have a spec descriptor",
				"edition does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourcegroup does not have a spec descriptor",
				"failovergraceperiod does not have a spec descriptor",
				"failoverpolicy does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourcegroup does not have a spec descriptor",
				"secondaryserver does not have a spec descriptor",
				"secondaryserverresourcegroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"databaselist does not have a spec descriptor",
				"endipaddress does not have a spec descriptor",
				"resourcegroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"startipaddress does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourcegroup does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourcegroup does not have a spec descriptor",
				"location does not have a spec descriptor",
				"osType does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"sshPublicKeyData does not have a spec descriptor",
				"subnetName does not have a spec descriptor",
				"backendAddressPoolName does not have a spec descriptor",
				"capacity does not have a spec descriptor",
				"inboundNatPoolName does not have a spec descriptor",
				"virtualNetworkName does not have a spec descriptor",
				"vmSize does not have a spec descriptor",
				"adminUserName does not have a spec descriptor",
				"loadBalancerName does not have a spec descriptor",
				"platformImageURN does not have a spec descriptor",
				"networkInterfaceName does not have a spec descriptor",
				"osType does not have a spec descriptor",
				"platformImageURN does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"sshPublicKeyData does not have a spec descriptor",
				"vmSize does not have a spec descriptor",
				"adminUserName does not have a spec descriptor",
				"location does not have a spec descriptor",
				"typeName does not have a spec descriptor",
				"vmName does not have a spec descriptor",
				"forceUpdateTag does not have a spec descriptor",
				"publisher does not have a spec descriptor",
				"settings does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"typeHandlerVersion does not have a spec descriptor",
				"autoUpgradeMinorVersion does not have a spec descriptor",
				"location does not have a spec descriptor",
				"protectedSettings does not have a spec descriptor",
				"resourcegroup does not have a spec descriptor",
				"accesslevel does not have a spec descriptor",
				"accountname does not have a spec descriptor",
				"location does not have a spec descriptor",
				"eventHub does not have a spec descriptor",
				"namespace does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"kind does not have a spec descriptor",
				"location does not have a spec descriptor",
				"properties does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"properties does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"ipRules does not have a spec descriptor",
				"kind does not have a spec descriptor",
				"location does not have a spec descriptor",
				"locations does not have a spec descriptor",
				"authorizationRule does not have a spec descriptor",
				"location does not have a spec descriptor",
				"namespace does not have a spec descriptor",
				"properties does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"authorizationRule does not have a spec descriptor",
				"location does not have a spec descriptor",
				"namespace does not have a spec descriptor",
				"properties does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"sku does not have a spec descriptor",
				"location does not have a spec descriptor",
				"properties does not have a spec descriptor",
				"enableSoftDelete does not have a spec descriptor",
				"location does not have a spec descriptor",
				"networkPolicies does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"sku does not have a spec descriptor",
				"accessPolicies does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"enableSoftDelete does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"type does not have a spec descriptor",
				"keySize does not have a spec descriptor",
				"keyVault does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"startIpAddress does not have a spec descriptor",
				"endIpAddress does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"endIpAddress does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"startIpAddress does not have a spec descriptor",
				"createMode does not have a spec descriptor",
				"location does not have a spec descriptor",
				"replicaProperties does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"serverVersion does not have a spec descriptor",
				"sku does not have a spec descriptor",
				"sslEnforcement does not have a spec descriptor",
				"createMode does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"serverVersion does not have a spec descriptor",
				"sku does not have a spec descriptor",
				"sslEnforcement does not have a spec descriptor",
				"createMode does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"roles does not have a spec descriptor",
				"server does not have a spec descriptor",
				"dbName does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"subnetName does not have a spec descriptor",
				"vNetName does not have a spec descriptor",
				"vNetResourceGroup does not have a spec descriptor",
				"ignoreMissingServiceEndpoint does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"endIpAddress does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"startIpAddress does not have a spec descriptor",
				"server does not have a spec descriptor",
				"startIpAddress does not have a spec descriptor",
				"endIpAddress does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"location does not have a spec descriptor",
				"replicaProperties does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"createMode does not have a spec descriptor",
				"createMode does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"serverVersion does not have a spec descriptor",
				"sku does not have a spec descriptor",
				"sslEnforcement does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"serverVersion does not have a spec descriptor",
				"sku does not have a spec descriptor",
				"sslEnforcement does not have a spec descriptor",
				"dbName does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"roles does not have a spec descriptor",
				"server does not have a spec descriptor",
				"ignoreMissingServiceEndpoint does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"subnetName does not have a spec descriptor",
				"vNetName does not have a spec descriptor",
				"vNetResourceGroup does not have a spec descriptor",
				"location does not have a spec descriptor",
				"properties does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"actionName does not have a spec descriptor",
				"cacheName does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"redisCache does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"properties does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"sku does not have a spec descriptor",
				"supportsHttpsTrafficOnly does not have a spec descriptor",
				"accessTier does not have a spec descriptor",
				"kind does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"subnets does not have a spec descriptor",
				"addressSpace does not have a spec descriptor",
				"location does not have a spec descriptor",
				"accessLevel does not have a spec descriptor",
				"accountName does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"serverVersion does not have a spec descriptor",
				"sku does not have a spec descriptor",
				"sslEnforcement does not have a spec descriptor",
				"createMode does not have a spec descriptor",
				"location does not have a spec descriptor",
				"sku does not have a spec descriptor",
				"sslEnforcement does not have a spec descriptor",
				"createMode does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"serverVersion does not have a spec descriptor",
				"server does not have a spec descriptor",
				"sku does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"failoverPolicy does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"secondaryServer does not have a spec descriptor",
				"secondaryServerResourceGroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"databaseList does not have a spec descriptor",
				"failoverGracePeriod does not have a spec descriptor",
				"startIpAddress does not have a spec descriptor",
				"endIpAddress does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor",
				"server does not have a spec descriptor",
				"location does not have a spec descriptor",
				"resourceGroup does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for location",
				"Add a spec descriptor for properties",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for apiId",
				"Add a spec descriptor for apiService",
				"Add a spec descriptor for appInsightsResourceGroup",
				"Add a spec descriptor for vnetName",
				"Add a spec descriptor for vnetType",
				"Add a spec descriptor for publisherName",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for tier",
				"Add a spec descriptor for vnetResourceGroup",
				"Add a spec descriptor for vnetSubnetName",
				"Add a spec descriptor for appInsightsName",
				"Add a spec descriptor for location",
				"Add a spec descriptor for publisherEmail",
				"Add a spec descriptor for applicationType",
				"Add a spec descriptor for kind",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for appInsights",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for readTelemetry",
				"Add a spec descriptor for writeAnnotations",
				"Add a spec descriptor for authSDKControlChannel",
				"Add a spec descriptor for frontendPortRangeStart",
				"Add a spec descriptor for inboundNatPoolName",
				"Add a spec descriptor for location",
				"Add a spec descriptor for publicIPAddressName",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for backendAddressPoolName",
				"Add a spec descriptor for backendPort",
				"Add a spec descriptor for frontendPortRangeEnd",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for subnetName",
				"Add a spec descriptor for vnetName",
				"Add a spec descriptor for location",
				"Add a spec descriptor for publicIPAddressName",
				"Add a spec descriptor for idleTimeoutInMinutes",
				"Add a spec descriptor for location",
				"Add a spec descriptor for publicIPAddressVersion",
				"Add a spec descriptor for publicIPAllocationMethod",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for skuName",
				"Add a spec descriptor for idleTimeoutInMinutes",
				"Add a spec descriptor for location",
				"Add a spec descriptor for publicIPAddressVersion",
				"Add a spec descriptor for publicIPAllocationMethod",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for skuName",
				"Add a spec descriptor for dbName",
				"Add a spec descriptor for managedIdentityClientId",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for roles",
				"Add a spec descriptor for server",
				"Add a spec descriptor for dbName",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for roles",
				"Add a spec descriptor for server",
				"Add a spec descriptor for vNetName",
				"Add a spec descriptor for vNetResourceGroup",
				"Add a spec descriptor for ignoreMissingServiceEndpoint",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for subnetName",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for serverName",
				"Add a spec descriptor for edition",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourcegroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for server",
				"Add a spec descriptor for edition",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourcegroup",
				"Add a spec descriptor for failovergraceperiod",
				"Add a spec descriptor for failoverpolicy",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourcegroup",
				"Add a spec descriptor for secondaryserver",
				"Add a spec descriptor for secondaryserverresourcegroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for databaselist",
				"Add a spec descriptor for endipaddress",
				"Add a spec descriptor for resourcegroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for startipaddress",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourcegroup",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourcegroup",
				"Add a spec descriptor for location",
				"Add a spec descriptor for osType",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for sshPublicKeyData",
				"Add a spec descriptor for subnetName",
				"Add a spec descriptor for backendAddressPoolName",
				"Add a spec descriptor for capacity",
				"Add a spec descriptor for inboundNatPoolName",
				"Add a spec descriptor for virtualNetworkName",
				"Add a spec descriptor for vmSize",
				"Add a spec descriptor for adminUserName",
				"Add a spec descriptor for loadBalancerName",
				"Add a spec descriptor for platformImageURN",
				"Add a spec descriptor for networkInterfaceName",
				"Add a spec descriptor for osType",
				"Add a spec descriptor for platformImageURN",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for sshPublicKeyData",
				"Add a spec descriptor for vmSize",
				"Add a spec descriptor for adminUserName",
				"Add a spec descriptor for location",
				"Add a spec descriptor for typeName",
				"Add a spec descriptor for vmName",
				"Add a spec descriptor for forceUpdateTag",
				"Add a spec descriptor for publisher",
				"Add a spec descriptor for settings",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for typeHandlerVersion",
				"Add a spec descriptor for autoUpgradeMinorVersion",
				"Add a spec descriptor for location",
				"Add a spec descriptor for protectedSettings",
				"Add a spec descriptor for resourcegroup",
				"Add a spec descriptor for accesslevel",
				"Add a spec descriptor for accountname",
				"Add a spec descriptor for location",
				"Add a spec descriptor for eventHub",
				"Add a spec descriptor for namespace",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for kind",
				"Add a spec descriptor for location",
				"Add a spec descriptor for properties",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for properties",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for ipRules",
				"Add a spec descriptor for kind",
				"Add a spec descriptor for location",
				"Add a spec descriptor for locations",
				"Add a spec descriptor for authorizationRule",
				"Add a spec descriptor for location",
				"Add a spec descriptor for namespace",
				"Add a spec descriptor for properties",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for authorizationRule",
				"Add a spec descriptor for location",
				"Add a spec descriptor for namespace",
				"Add a spec descriptor for properties",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for sku",
				"Add a spec descriptor for location",
				"Add a spec descriptor for properties",
				"Add a spec descriptor for enableSoftDelete",
				"Add a spec descriptor for location",
				"Add a spec descriptor for networkPolicies",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for sku",
				"Add a spec descriptor for accessPolicies",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for enableSoftDelete",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for type",
				"Add a spec descriptor for keySize",
				"Add a spec descriptor for keyVault",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for startIpAddress",
				"Add a spec descriptor for endIpAddress",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for endIpAddress",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for startIpAddress",
				"Add a spec descriptor for createMode",
				"Add a spec descriptor for location",
				"Add a spec descriptor for replicaProperties",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for serverVersion",
				"Add a spec descriptor for sku",
				"Add a spec descriptor for sslEnforcement",
				"Add a spec descriptor for createMode",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for serverVersion",
				"Add a spec descriptor for sku",
				"Add a spec descriptor for sslEnforcement",
				"Add a spec descriptor for createMode",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for roles",
				"Add a spec descriptor for server",
				"Add a spec descriptor for dbName",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for subnetName",
				"Add a spec descriptor for vNetName",
				"Add a spec descriptor for vNetResourceGroup",
				"Add a spec descriptor for ignoreMissingServiceEndpoint",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for endIpAddress",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for startIpAddress",
				"Add a spec descriptor for server",
				"Add a spec descriptor for startIpAddress",
				"Add a spec descriptor for endIpAddress",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for location",
				"Add a spec descriptor for replicaProperties",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for createMode",
				"Add a spec descriptor for createMode",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for serverVersion",
				"Add a spec descriptor for sku",
				"Add a spec descriptor for sslEnforcement",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for serverVersion",
				"Add a spec descriptor for sku",
				"Add a spec descriptor for sslEnforcement",
				"Add a spec descriptor for dbName",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for roles",
				"Add a spec descriptor for server",
				"Add a spec descriptor for ignoreMissingServiceEndpoint",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for subnetName",
				"Add a spec descriptor for vNetName",
				"Add a spec descriptor for vNetResourceGroup",
				"Add a spec descriptor for location",
				"Add a spec descriptor for properties",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for actionName",
				"Add a spec descriptor for cacheName",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for redisCache",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for properties",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for sku",
				"Add a spec descriptor for supportsHttpsTrafficOnly",
				"Add a spec descriptor for accessTier",
				"Add a spec descriptor for kind",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for subnets",
				"Add a spec descriptor for addressSpace",
				"Add a spec descriptor for location",
				"Add a spec descriptor for accessLevel",
				"Add a spec descriptor for accountName",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for serverVersion",
				"Add a spec descriptor for sku",
				"Add a spec descriptor for sslEnforcement",
				"Add a spec descriptor for createMode",
				"Add a spec descriptor for location",
				"Add a spec descriptor for sku",
				"Add a spec descriptor for sslEnforcement",
				"Add a spec descriptor for createMode",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for serverVersion",
				"Add a spec descriptor for server",
				"Add a spec descriptor for sku",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for failoverPolicy",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for secondaryServer",
				"Add a spec descriptor for secondaryServerResourceGroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for databaseList",
				"Add a spec descriptor for failoverGracePeriod",
				"Add a spec descriptor for startIpAddress",
				"Add a spec descriptor for endIpAddress",
				"Add a spec descriptor for resourceGroup",
				"Add a spec descriptor for server",
				"Add a spec descriptor for location",
				"Add a spec descriptor for resourceGroup"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "buildv2-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(buildv2-operator.v0.3.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"buildSteps does not have a spec descriptor",
				"buildSteps does not have a spec descriptor",
				"output does not have a spec descriptor",
				"source does not have a spec descriptor",
				"strategy does not have a spec descriptor",
				"dockerfile does not have a spec descriptor",
				"buildRef does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"buildstrategies.build.dev does not have a status descriptor",
				"clusterbuildstrategies.build.dev does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for buildSteps",
				"Add a spec descriptor for buildSteps",
				"Add a spec descriptor for output",
				"Add a spec descriptor for source",
				"Add a spec descriptor for strategy",
				"Add a spec descriptor for dockerfile",
				"Add a spec descriptor for buildRef",
				"Add a spec descriptor for resources",
				"Add CRD validation for spec field `resources` in BuildRun/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "camel-k",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(camel-k-operator.v0.2.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"integrationcontexts.camel.apache.org\" \"integrationplatforms.camel.apache.org\" \"integrations.camel.apache.org\"])"
			],
			"scorecardErrors": [
				"resources does not have a spec descriptor",
				"source does not have a spec descriptor",
				"integrationplatforms.camel.apache.org does not have a status descriptor",
				"integrations.camel.apache.org does not have a status descriptor",
				"integrationcontexts.camel.apache.org does not have a status descriptor",
				"error spec does not exist",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for resources",
				"Add a spec descriptor for source",
				"Add CRD validation for IntegrationPlatform/v1alpha1",
				"Add CRD validation for Integration/v1alpha1",
				"Add CRD validation for IntegrationContext/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"basic-check-spec",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "cert-utils-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(cert-utils-operator.v1.0.7) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "cluster-manager",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(cluster-manager.v0.3.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"clustermanagers.operator.open-cluster-management.io\"])"
			],
			"scorecardErrors": [
				"clustermanagers.operator.open-cluster-management.io does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"registrationImagePullSpec does not have a spec descriptor",
				"workImagePullSpec does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for registrationImagePullSpec",
				"Add a spec descriptor for workImagePullSpec"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "cockroachdb",
			"hasValidatorWarnings": false,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"scorecardErrors": [
				"cockroachdbs.charts.operatorhub.io does not have a status descriptor",
				"image does not have a spec descriptor",
				"labels does not have a spec descriptor",
				"service does not have a spec descriptor",
				"statefulset does not have a spec descriptor",
				"storage does not have a spec descriptor",
				"tls does not have a spec descriptor",
				"clusterDomain does not have a spec descriptor",
				"conf does not have a spec descriptor",
				"networkPolicy does not have a spec descriptor",
				"serviceMonitor does not have a spec descriptor",
				"ingress does not have a spec descriptor",
				"init does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `clusterDomain` in Cockroachdb/v1alpha1",
				"Add CRD validation for spec field `init` in Cockroachdb/v1alpha1",
				"Add CRD validation for spec field `labels` in Cockroachdb/v1alpha1",
				"Add CRD validation for spec field `serviceMonitor` in Cockroachdb/v1alpha1",
				"Add CRD validation for spec field `statefulset` in Cockroachdb/v1alpha1",
				"Add CRD validation for spec field `storage` in Cockroachdb/v1alpha1",
				"Add CRD validation for spec field `conf` in Cockroachdb/v1alpha1",
				"Add CRD validation for spec field `image` in Cockroachdb/v1alpha1",
				"Add CRD validation for spec field `ingress` in Cockroachdb/v1alpha1",
				"Add CRD validation for spec field `networkPolicy` in Cockroachdb/v1alpha1",
				"Add CRD validation for spec field `service` in Cockroachdb/v1alpha1",
				"Add CRD validation for spec field `tls` in Cockroachdb/v1alpha1",
				"Add a spec descriptor for image",
				"Add a spec descriptor for labels",
				"Add a spec descriptor for service",
				"Add a spec descriptor for statefulset",
				"Add a spec descriptor for storage",
				"Add a spec descriptor for tls",
				"Add a spec descriptor for clusterDomain",
				"Add a spec descriptor for conf",
				"Add a spec descriptor for networkPolicy",
				"Add a spec descriptor for serviceMonitor",
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for init"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "community-kubevirt-hyperconverged",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(kubevirt-hyperconverged-operator.v1.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"networkaddonsconfigs.networkaddonsoperator.network.kubevirt.io\" \"cdis.cdi.kubevirt.io\" \"hyperconvergeds.hco.kubevirt.io\" \"v2vvmwares.v2v.kubevirt.io\" \"ovirtproviders.v2v.kubevirt.io\" \"hostpathprovisioners.hostpathprovisioner.kubevirt.io\" \"kubevirts.kubevirt.io\" \"nodemaintenances.nodemaintenance.kubevirt.io\" \"kubevirtcommontemplatesbundles.ssp.kubevirt.io\" \"kubevirtmetricsaggregations.ssp.kubevirt.io\" \"kubevirtnodelabellerbundles.ssp.kubevirt.io\" \"kubevirttemplatevalidators.ssp.kubevirt.io\" \"vmimportconfigs.v2v.kubevirt.io\"])",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"BareMetalPlatform does not have a spec descriptor",
				"imagePullPolicy does not have a spec descriptor",
				"kubeMacPool does not have a spec descriptor",
				"linuxBridge does not have a spec descriptor",
				"macvtap does not have a spec descriptor",
				"multus does not have a spec descriptor",
				"nmstate does not have a spec descriptor",
				"ovs does not have a spec descriptor",
				"imagePullPolicy does not have a spec descriptor",
				"version does not have a spec descriptor",
				"version does not have a spec descriptor",
				"version does not have a spec descriptor",
				"templateValidatorReplicas does not have a spec descriptor",
				"version does not have a spec descriptor",
				"imagePullPolicy does not have a spec descriptor",
				"nodeName does not have a spec descriptor",
				"reason does not have a spec descriptor",
				"imagePullPolicy does not have a spec descriptor",
				"pathConfig does not have a spec descriptor",
				"imagePullPolicy does not have a spec descriptor",
				"hyperconvergeds.hco.kubevirt.io does not have a status descriptor",
				"networkaddonsconfigs.networkaddonsoperator.network.kubevirt.io does not have a status descriptor",
				"kubevirts.kubevirt.io does not have a status descriptor",
				"kubevirtcommontemplatesbundles.ssp.kubevirt.io does not have a status descriptor",
				"kubevirtmetricsaggregations.ssp.kubevirt.io does not have a status descriptor",
				"kubevirtnodelabellerbundles.ssp.kubevirt.io does not have a status descriptor",
				"kubevirttemplatevalidators.ssp.kubevirt.io does not have a status descriptor",
				"cdis.cdi.kubevirt.io does not have a status descriptor",
				"nodemaintenances.nodemaintenance.kubevirt.io does not have a status descriptor",
				"hostpathprovisioners.hostpathprovisioner.kubevirt.io does not have a status descriptor",
				"vmimportconfigs.v2v.kubevirt.io does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Warning: Value v2v.kubevirt.io/v1alpha1, Kind=V2VVmware: provided API should have an example annotation",
				"Warning: Value v2v.kubevirt.io/v1alpha1, Kind=OVirtProvider: provided API should have an example annotation",
				"Add CRD validation for spec field `BareMetalPlatform` in HyperConverged/v1alpha1",
				"Add CRD validation for spec field `multus` in NetworkAddonsConfig/v1alpha1",
				"Add CRD validation for spec field `nmstate` in NetworkAddonsConfig/v1alpha1",
				"Add CRD validation for spec field `ovs` in NetworkAddonsConfig/v1alpha1",
				"Add CRD validation for spec field `imagePullPolicy` in NetworkAddonsConfig/v1alpha1",
				"Add CRD validation for spec field `kubeMacPool` in NetworkAddonsConfig/v1alpha1",
				"Add CRD validation for spec field `linuxBridge` in NetworkAddonsConfig/v1alpha1",
				"Add CRD validation for spec field `macvtap` in NetworkAddonsConfig/v1alpha1",
				"Add CRD validation for KubeVirt/v1alpha3",
				"Add CRD validation for KubevirtCommonTemplatesBundle/v1",
				"Add CRD validation for KubevirtMetricsAggregation/v1",
				"Add CRD validation for KubevirtNodeLabellerBundle/v1",
				"Add CRD validation for KubevirtTemplateValidator/v1",
				"Add a spec descriptor for BareMetalPlatform",
				"Add a spec descriptor for imagePullPolicy",
				"Add a spec descriptor for kubeMacPool",
				"Add a spec descriptor for linuxBridge",
				"Add a spec descriptor for macvtap",
				"Add a spec descriptor for multus",
				"Add a spec descriptor for nmstate",
				"Add a spec descriptor for ovs",
				"Add a spec descriptor for imagePullPolicy",
				"Add a spec descriptor for version",
				"Add a spec descriptor for version",
				"Add a spec descriptor for version",
				"Add a spec descriptor for templateValidatorReplicas",
				"Add a spec descriptor for version",
				"Add a spec descriptor for imagePullPolicy",
				"Add a spec descriptor for nodeName",
				"Add a spec descriptor for reason",
				"Add a spec descriptor for imagePullPolicy",
				"Add a spec descriptor for pathConfig",
				"Add a spec descriptor for imagePullPolicy"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "community-windows-machine-config-operator",
			"kindsDeprecateAPIs": [
				"UNKNOWN"
			],
			"hasValidatorWarnings": false,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForOwnNamespaces": true,
			"errors": [
				"unable to check the removed API(s) for 1 of 1 head bundles of this package"
			]
		},
		{
			"packageName": "composable-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(composable-operator.v0.1.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"composables.ibmcloud.ibm.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "crane-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(crane-operator.v1.4.4) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"backups.velero.io\" \"backupstoragelocations.velero.io\" \"deletebackuprequests.velero.io\" \"downloadrequests.velero.io\" \"directimagemigrations.migration.openshift.io\" \"directimagestreammigrations.migration.openshift.io\" \"directvolumemigrationprogresses.migration.openshift.io\" \"directvolumemigrations.migration.openshift.io\" \"miganalytics.migration.openshift.io\" \"migclusters.migration.openshift.io\" \"mighooks.migration.openshift.io\" \"migmigrations.migration.openshift.io\" \"migplans.migration.openshift.io\" \"migstorages.migration.openshift.io\" \"migrationcontrollers.migration.openshift.io\" \"podvolumebackups.velero.io\" \"podvolumerestores.velero.io\" \"resticrepositories.velero.io\" \"restores.velero.io\" \"schedules.velero.io\" \"serverstatusrequests.velero.io\" \"volumesnapshotlocations.velero.io\"])",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"migration_controller does not have a spec descriptor",
				"migration_ui does not have a spec descriptor",
				"restic_timeout does not have a spec descriptor",
				"mig_namespace_limit does not have a spec descriptor",
				"azure_resource_group does not have a spec descriptor",
				"cluster_name does not have a spec descriptor",
				"migration_velero does not have a spec descriptor",
				"migration_log_reader does not have a spec descriptor",
				"olm_managed does not have a spec descriptor",
				"mig_pv_limit does not have a spec descriptor",
				"mig_pod_limit does not have a spec descriptor",
				"plan does not have a spec descriptor",
				"analyzeK8SResources does not have a spec descriptor",
				"analyzeImageCount does not have a spec descriptor",
				"analyzePVCapacity does not have a spec descriptor",
				"migrationcontrollers.migration.openshift.io does not have a status descriptor",
				"backups.velero.io does not have a status descriptor",
				"backupstoragelocations.velero.io does not have a status descriptor",
				"deletebackuprequests.velero.io does not have a status descriptor",
				"downloadrequests.velero.io does not have a status descriptor",
				"podvolumebackups.velero.io does not have a status descriptor",
				"podvolumerestores.velero.io does not have a status descriptor",
				"resticrepositories.velero.io does not have a status descriptor",
				"restores.velero.io does not have a status descriptor",
				"schedules.velero.io does not have a status descriptor",
				"serverstatusrequests.velero.io does not have a status descriptor",
				"volumesnapshotlocations.velero.io does not have a status descriptor",
				"directimagemigrations.migration.openshift.io does not have a status descriptor",
				"directimagestreammigrations.migration.openshift.io does not have a status descriptor",
				"miganalytics.migration.openshift.io does not have a status descriptor",
				"migclusters.migration.openshift.io does not have a status descriptor",
				"directvolumemigrations.migration.openshift.io does not have a status descriptor",
				"directvolumemigrationprogresses.migration.openshift.io does not have a status descriptor",
				"migplans.migration.openshift.io does not have a status descriptor",
				"migmigrations.migration.openshift.io does not have a status descriptor",
				"migstorages.migration.openshift.io does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add CRD validation for MigrationController/v1alpha1",
				"Add CRD validation for spec field `plan` in MigAnalytic/v1alpha1",
				"Add a spec descriptor for migration_controller",
				"Add a spec descriptor for migration_ui",
				"Add a spec descriptor for restic_timeout",
				"Add a spec descriptor for mig_namespace_limit",
				"Add a spec descriptor for azure_resource_group",
				"Add a spec descriptor for cluster_name",
				"Add a spec descriptor for migration_velero",
				"Add a spec descriptor for migration_log_reader",
				"Add a spec descriptor for olm_managed",
				"Add a spec descriptor for mig_pv_limit",
				"Add a spec descriptor for mig_pod_limit",
				"Add a spec descriptor for plan",
				"Add a spec descriptor for analyzeK8SResources",
				"Add a spec descriptor for analyzeImageCount",
				"Add a spec descriptor for analyzePVCapacity",
				"Warning: Value migration.openshift.io/v1alpha1, Kind=MigHook: provided API should have an example annotation"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "crossplane",
			"kindsDeprecateAPIs": [
				"UNKNOWN"
			],
			"hasValidatorWarnings": false,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForOwnNamespaces": true,
			"errors": [
				"unable to check the removed API(s) for 1 of 1 head bundles of this package"
			]
		},
		{
			"packageName": "datadog-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(datadog-operator.v0.6.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"datadogagents.datadoghq.com\" \"datadogmetrics.datadoghq.com\" \"datadogmonitors.datadoghq.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"credentials does not have a spec descriptor",
				"agent does not have a spec descriptor",
				"clusterAgent does not have a spec descriptor",
				"clusterChecksRunner does not have a spec descriptor",
				"clusterName does not have a spec descriptor",
				"query does not have a spec descriptor",
				"type does not have a spec descriptor",
				"message does not have a spec descriptor",
				"query does not have a spec descriptor",
				"tags does not have a spec descriptor",
				"title does not have a spec descriptor",
				"datadogagents.datadoghq.com does not have a status descriptor",
				"datadogmetrics.datadoghq.com does not have a status descriptor",
				"datadogmonitors.datadoghq.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for credentials",
				"Add a spec descriptor for agent",
				"Add a spec descriptor for clusterAgent",
				"Add a spec descriptor for clusterChecksRunner",
				"Add a spec descriptor for clusterName",
				"Add a spec descriptor for query",
				"Add a spec descriptor for type",
				"Add a spec descriptor for message",
				"Add a spec descriptor for query",
				"Add a spec descriptor for tags",
				"Add a spec descriptor for title",
				"Add CRD validation for spec field `title` in DatadogMonitor/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "dell-csi-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(dell-csi-operator.v1.3.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"csiisilons.storage.dell.com\" \"csipowermaxes.storage.dell.com\" \"csipowermaxrevproxies.storage.dell.com\" \"csipowerstores.storage.dell.com\" \"csiunities.storage.dell.com\" \"csivxflexoses.storage.dell.com\"])"
			],
			"scorecardErrors": [
				"csipowermaxrevproxies.storage.dell.com does not have a status descriptor",
				"config does not have a spec descriptor",
				"image does not have a spec descriptor",
				"imagePullPolicy does not have a spec descriptor",
				"tlsSecret does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for config",
				"Add a spec descriptor for image",
				"Add a spec descriptor for imagePullPolicy",
				"Add a spec descriptor for tlsSecret"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "devopsinabox",
			"hasValidatorErrors": true,
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorErrors": [
				"(devopsinabox.v0.0.45) csv.Metadata.Annotations[\"categories\"] value Modernization \u0026 Migration is not in the set of default categories"
			],
			"validatorWarnings": [
				"(devopsinabox.v0.0.45) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "ditto-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"dittos.iot.eclipse.org\"])"
			],
			"scorecardErrors": [
				"mongoDb does not have a spec descriptor",
				"dittos.iot.eclipse.org does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for mongoDb",
				"Add CRD validation for spec field `mongoDb` in Ditto/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "eclipse-che",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(eclipse-che.v7.31.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"auth does not have a spec descriptor",
				"database does not have a spec descriptor",
				"devWorkspace does not have a spec descriptor",
				"metrics does not have a spec descriptor",
				"server does not have a spec descriptor",
				"storage does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for auth",
				"Add a spec descriptor for database",
				"Add a spec descriptor for devWorkspace",
				"Add a spec descriptor for metrics",
				"Add a spec descriptor for server",
				"Add a spec descriptor for storage"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "egressip-ipam-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(egressip-ipam-operator.v1.0.8) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"cidrAssignments does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"topologyLabel does not have a spec descriptor",
				"topologyLabel does not have a spec descriptor",
				"cidrAssignments does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"egressipams.redhatcop.redhat.io does not have a status descriptor",
				"egressipams.redhatcop.redhat.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for cidrAssignments",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for topologyLabel",
				"Add a spec descriptor for topologyLabel",
				"Add a spec descriptor for cidrAssignments",
				"Add a spec descriptor for nodeSelector"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "ember-csi-community-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"embercsis.ember-csi.io\"])"
			],
			"scorecardSuggestions": [
				"Add CRD validation for EmberStorageBackend/v1alpha1"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "enc-key-sync",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"enckeysyncs.oci.crypt\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"isOpenShift does not have a spec descriptor",
				"keysDir does not have a spec descriptor",
				"enckeysyncs.oci.crypt does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for isOpenShift",
				"Add a spec descriptor for keysDir",
				"Add CRD validation for spec field `keysDir` in EncKeySync/v1alpha1",
				"Add CRD validation for spec field `isOpenShift` in EncKeySync/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "enmasse",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(enmasse.0.32.2) csv.metadata.Name enmasse.0.32.2 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"addresses.enmasse.io\" \"addressplans.admin.enmasse.io\" \"addressspaceplans.admin.enmasse.io\" \"addressspaces.enmasse.io\" \"addressspaceschemas.enmasse.io\" \"authenticationservices.admin.enmasse.io\" \"brokeredinfraconfigs.admin.enmasse.io\" \"consoleservices.admin.enmasse.io\" \"iotconfigs.iot.enmasse.io\" \"iotprojects.iot.enmasse.io\" \"messagingusers.user.enmasse.io\" \"standardinfraconfigs.admin.enmasse.io\"])",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"standardinfraconfigs.admin.enmasse.io does not have a status descriptor",
				"brokeredinfraconfigs.admin.enmasse.io does not have a status descriptor",
				"addressplans.admin.enmasse.io does not have a status descriptor",
				"addressspaceplans.admin.enmasse.io does not have a status descriptor",
				"authenticationservices.admin.enmasse.io does not have a status descriptor",
				"messagingusers.user.enmasse.io does not have a status descriptor",
				"broker does not have a spec descriptor",
				"router does not have a spec descriptor",
				"broker does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"addressType does not have a spec descriptor",
				"addressSpaceType does not have a spec descriptor",
				"resourceLimits does not have a spec descriptor",
				"addressPlans does not have a spec descriptor",
				"standard does not have a spec descriptor",
				"address does not have a spec descriptor",
				"authentication does not have a spec descriptor",
				"authorization does not have a spec descriptor",
				"adapters does not have a spec descriptor",
				"services does not have a spec descriptor",
				"downstreamStrategy does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Warning: Value admin.enmasse.io/v1beta1, Kind=ConsoleService: provided API should have an example annotation",
				"Warning: Value enmasse.io/v1beta1, Kind=AddressSpaceSchema: provided API should have an example annotation",
				"Add a spec descriptor for broker",
				"Add a spec descriptor for router",
				"Add a spec descriptor for broker",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for addressType",
				"Add a spec descriptor for addressSpaceType",
				"Add a spec descriptor for resourceLimits",
				"Add a spec descriptor for addressPlans",
				"Add a spec descriptor for standard",
				"Add a spec descriptor for address",
				"Add a spec descriptor for authentication",
				"Add a spec descriptor for authorization",
				"Add a spec descriptor for adapters",
				"Add a spec descriptor for services",
				"Add a spec descriptor for downstreamStrategy"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "esindex-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(esindex-operator.v0.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"esindices.ibmcloud.ibm.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "etcd",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(etcdoperator.v0.9.4) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"etcdbackups.etcd.database.coreos.com\" \"etcdclusters.etcd.database.coreos.com\" \"etcdrestores.etcd.database.coreos.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"version does not have a spec descriptor",
				"etcdCluster does not have a spec descriptor",
				"backupStorageType does not have a spec descriptor",
				"s3 does not have a spec descriptor",
				"storageType does not have a spec descriptor",
				"s3 does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for version",
				"Add a spec descriptor for etcdCluster",
				"Add a spec descriptor for backupStorageType",
				"Add a spec descriptor for s3",
				"Add a spec descriptor for storageType",
				"Add a spec descriptor for s3",
				"Add CRD validation for EtcdCluster/v1beta2",
				"Add CRD validation for EtcdRestore/v1beta2",
				"Add CRD validation for EtcdBackup/v1beta2"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "eunomia",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(eunomia.v0.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"gitopsconfigs.eunomia.kohls.io\"])"
			],
			"scorecardErrors": [
				"gitopsconfigs.eunomia.kohls.io does not have a status descriptor",
				"gitopsconfigs.eunomia.kohls.io does not have a status descriptor",
				"size does not have a spec descriptor",
				"size does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `size` in GitOpsConfig/v1alpha1",
				"Add CRD validation for spec field `size` in GitOpsConfig/v1alpha1",
				"Add a spec descriptor for size",
				"Add a spec descriptor for size"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "event-streams-topic",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(event-streams-topic.v0.1.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"topics.ibmcloud.ibm.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "federatorai",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(federatorai.v4.3.958) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"alamedaservices.federatorai.containers.ai\"])"
			],
			"scorecardErrors": [
				"storages does not have a spec descriptor",
				"keycode does not have a spec descriptor",
				"selfDriving does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for storages",
				"Add a spec descriptor for keycode",
				"Add a spec descriptor for selfDriving",
				"Add CRD validation for spec field `selfDriving` in AlamedaService/v1alpha1",
				"Add CRD validation for spec field `enableExecution` in AlamedaService/v1alpha1",
				"Add CRD validation for spec field `version` in AlamedaService/v1alpha1",
				"Add CRD validation for spec field `storages` in AlamedaService/v1alpha1",
				"Add CRD validation for spec field `keycode` in AlamedaService/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "flux",
			"hasValidatorWarnings": false,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"scorecardErrors": [
				"interval does not have a spec descriptor",
				"chart does not have a spec descriptor",
				"values does not have a spec descriptor",
				"ref does not have a spec descriptor",
				"url does not have a spec descriptor",
				"interval does not have a spec descriptor",
				"url does not have a spec descriptor",
				"interval does not have a spec descriptor",
				"chart does not have a spec descriptor",
				"version does not have a spec descriptor",
				"sourceRef does not have a spec descriptor",
				"interval does not have a spec descriptor",
				"secretRef does not have a spec descriptor",
				"interval does not have a spec descriptor",
				"provider does not have a spec descriptor",
				"bucketName does not have a spec descriptor",
				"endpoint does not have a spec descriptor",
				"insecure does not have a spec descriptor",
				"prune does not have a spec descriptor",
				"sourceRef does not have a spec descriptor",
				"timeout does not have a spec descriptor",
				"interval does not have a spec descriptor",
				"path does not have a spec descriptor",
				"type does not have a spec descriptor",
				"address does not have a spec descriptor",
				"secretRef does not have a spec descriptor",
				"providerRef does not have a spec descriptor",
				"eventSeverity does not have a spec descriptor",
				"eventSources does not have a spec descriptor",
				"type does not have a spec descriptor",
				"events does not have a spec descriptor",
				"secretRef does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"interval does not have a spec descriptor",
				"image does not have a spec descriptor",
				"imageRepositoryRef does not have a spec descriptor",
				"policy does not have a spec descriptor",
				"commit does not have a spec descriptor",
				"interval does not have a spec descriptor",
				"update does not have a spec descriptor",
				"checkout does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"helmreleases.helm.toolkit.fluxcd.io does not have a status descriptor",
				"gitrepositories.source.toolkit.fluxcd.io does not have a status descriptor",
				"helmrepositories.source.toolkit.fluxcd.io does not have a status descriptor",
				"helmcharts.source.toolkit.fluxcd.io does not have a status descriptor",
				"buckets.source.toolkit.fluxcd.io does not have a status descriptor",
				"kustomizations.kustomize.toolkit.fluxcd.io does not have a status descriptor",
				"providers.notification.toolkit.fluxcd.io does not have a status descriptor",
				"alerts.notification.toolkit.fluxcd.io does not have a status descriptor",
				"receivers.notification.toolkit.fluxcd.io does not have a status descriptor",
				"imagerepositories.image.toolkit.fluxcd.io does not have a status descriptor",
				"imagepolicies.image.toolkit.fluxcd.io does not have a status descriptor",
				"imageupdateautomations.image.toolkit.fluxcd.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for interval",
				"Add a spec descriptor for chart",
				"Add a spec descriptor for values",
				"Add a spec descriptor for ref",
				"Add a spec descriptor for url",
				"Add a spec descriptor for interval",
				"Add a spec descriptor for url",
				"Add a spec descriptor for interval",
				"Add a spec descriptor for chart",
				"Add a spec descriptor for version",
				"Add a spec descriptor for sourceRef",
				"Add a spec descriptor for interval",
				"Add a spec descriptor for secretRef",
				"Add a spec descriptor for interval",
				"Add a spec descriptor for provider",
				"Add a spec descriptor for bucketName",
				"Add a spec descriptor for endpoint",
				"Add a spec descriptor for insecure",
				"Add a spec descriptor for prune",
				"Add a spec descriptor for sourceRef",
				"Add a spec descriptor for timeout",
				"Add a spec descriptor for interval",
				"Add a spec descriptor for path",
				"Add a spec descriptor for type",
				"Add a spec descriptor for address",
				"Add a spec descriptor for secretRef",
				"Add a spec descriptor for providerRef",
				"Add a spec descriptor for eventSeverity",
				"Add a spec descriptor for eventSources",
				"Add a spec descriptor for type",
				"Add a spec descriptor for events",
				"Add a spec descriptor for secretRef",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for interval",
				"Add a spec descriptor for image",
				"Add a spec descriptor for imageRepositoryRef",
				"Add a spec descriptor for policy",
				"Add a spec descriptor for commit",
				"Add a spec descriptor for interval",
				"Add a spec descriptor for update",
				"Add a spec descriptor for checkout"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "gitlab-runner-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(gitlab-runner-operator.v1.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"runners.apps.gitlab.com\"])"
			],
			"scorecardErrors": [
				"imagePullPolicy does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for imagePullPolicy"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "global-load-balancer-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(global-load-balancer-operator.v1.0.7) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"globaldnsrecords.redhatcop.redhat.io does not have a status descriptor",
				"globaldnsrecords.redhatcop.redhat.io does not have a status descriptor",
				"globaldnszones.redhatcop.redhat.io does not have a status descriptor",
				"globaldnszones.redhatcop.redhat.io does not have a status descriptor",
				"globalroutediscoveries.redhatcop.redhat.io does not have a status descriptor",
				"globalroutediscoveries.redhatcop.redhat.io does not have a status descriptor",
				"endpoints does not have a spec descriptor",
				"globalZoneRef does not have a spec descriptor",
				"loadBalancingPolicy does not have a spec descriptor",
				"name does not have a spec descriptor",
				"ttl does not have a spec descriptor",
				"ttl does not have a spec descriptor",
				"endpoints does not have a spec descriptor",
				"globalZoneRef does not have a spec descriptor",
				"healthCheck does not have a spec descriptor",
				"loadBalancingPolicy does not have a spec descriptor",
				"name does not have a spec descriptor",
				"domain does not have a spec descriptor",
				"provider does not have a spec descriptor",
				"domain does not have a spec descriptor",
				"provider does not have a spec descriptor",
				"clusters does not have a spec descriptor",
				"defaultLoadBalancingPolicy does not have a spec descriptor",
				"defaultTTL does not have a spec descriptor",
				"globalZoneRef does not have a spec descriptor",
				"routeSelector does not have a spec descriptor",
				"clusters does not have a spec descriptor",
				"defaultLoadBalancingPolicy does not have a spec descriptor",
				"defaultTTL does not have a spec descriptor",
				"globalZoneRef does not have a spec descriptor",
				"routeSelector does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Warning: Value externaldns.k8s.io/v1alpha1, Kind=DNSEndpoint: provided API should have an example annotation",
				"Add a spec descriptor for endpoints",
				"Add a spec descriptor for globalZoneRef",
				"Add a spec descriptor for loadBalancingPolicy",
				"Add a spec descriptor for name",
				"Add a spec descriptor for ttl",
				"Add a spec descriptor for ttl",
				"Add a spec descriptor for endpoints",
				"Add a spec descriptor for globalZoneRef",
				"Add a spec descriptor for healthCheck",
				"Add a spec descriptor for loadBalancingPolicy",
				"Add a spec descriptor for name",
				"Add a spec descriptor for domain",
				"Add a spec descriptor for provider",
				"Add a spec descriptor for domain",
				"Add a spec descriptor for provider",
				"Add a spec descriptor for clusters",
				"Add a spec descriptor for defaultLoadBalancingPolicy",
				"Add a spec descriptor for defaultTTL",
				"Add a spec descriptor for globalZoneRef",
				"Add a spec descriptor for routeSelector",
				"Add a spec descriptor for clusters",
				"Add a spec descriptor for defaultLoadBalancingPolicy",
				"Add a spec descriptor for defaultTTL",
				"Add a spec descriptor for globalZoneRef",
				"Add a spec descriptor for routeSelector"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "grafana-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(grafana-operator.v3.10.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"grafanadashboards.integreatly.org\" \"grafanadatasources.integreatly.org\" \"grafanas.integreatly.org\"])"
			],
			"scorecardErrors": [
				"grafanas.integreatly.org does not have a status descriptor",
				"grafanadashboards.integreatly.org does not have a status descriptor",
				"grafanadatasources.integreatly.org does not have a status descriptor",
				"ingress does not have a spec descriptor",
				"config does not have a spec descriptor",
				"dashboardLabelSelector does not have a spec descriptor",
				"json does not have a spec descriptor",
				"name does not have a spec descriptor",
				"datasources does not have a spec descriptor",
				"name does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for config",
				"Add a spec descriptor for dashboardLabelSelector",
				"Add a spec descriptor for json",
				"Add a spec descriptor for name",
				"Add a spec descriptor for datasources",
				"Add a spec descriptor for name",
				"Add CRD validation for spec field `dashboardLabelSelector` in Grafana/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "group-sync-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(group-sync-operator.v0.0.12) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"groupsyncs.redhatcop.redhat.io\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true,
			"hasInfraAnnotation": true
		},
		{
			"packageName": "ham-deploy",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"operators.deploy.hybridapp.io\"])"
			],
			"scorecardErrors": [
				"operators.deploy.hybridapp.io does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"core does not have a spec descriptor",
				"tools does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for core",
				"Add a spec descriptor for tools"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "hawkbit-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"hawkbits.iot.eclipse.org\"])"
			],
			"scorecardErrors": [
				"hawkbits.iot.eclipse.org does not have a status descriptor",
				"database does not have a spec descriptor",
				"rabbit does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for database",
				"Add a spec descriptor for rabbit"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "hawtio-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(hawtio-operator.v0.3.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"hawtios.hawt.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"resources does not have a spec descriptor",
				"type does not have a spec descriptor",
				"hawtios.hawt.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for resources",
				"Add a spec descriptor for type"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "hazelcast-jet-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(hazelcast-jet-operator.v0.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"hazelcastjets.hazelcast.com\"])"
			],
			"scorecardErrors": [
				"cluster does not have a spec descriptor",
				"securityContext does not have a spec descriptor",
				"hazelcastjets.hazelcast.com does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `cluster` in HazelcastJet/v1alpha1",
				"Add CRD validation for spec field `securityContext` in HazelcastJet/v1alpha1",
				"Add a spec descriptor for cluster",
				"Add a spec descriptor for securityContext"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "hazelcast-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(hazelcast-operator.v0.3.6) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"hazelcasts.hazelcast.com\"])"
			],
			"scorecardErrors": [
				"securityContext does not have a spec descriptor",
				"hazelcasts.hazelcast.com does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add CRD validation for Hazelcast/v1alpha1",
				"Add a spec descriptor for securityContext"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "hedvig-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(hedvig-operator.v1.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"hedvigdeploys.hedvig.io\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "hive-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(hive-operator.v1.1.5) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"checkpoints.hive.openshift.io\" \"clusterclaims.hive.openshift.io\" \"clusterdeployments.hive.openshift.io\" \"clusterdeprovisions.hive.openshift.io\" \"clusterimagesets.hive.openshift.io\" \"clusterpools.hive.openshift.io\" \"clusterprovisions.hive.openshift.io\" \"clusterrelocates.hive.openshift.io\" \"clusterstates.hive.openshift.io\" \"dnszones.hive.openshift.io\" \"hiveconfigs.hive.openshift.io\" \"machinepoolnameleases.hive.openshift.io\" \"machinepools.hive.openshift.io\" \"selectorsyncidentityproviders.hive.openshift.io\" \"selectorsyncsets.hive.openshift.io\" \"syncidentityproviders.hive.openshift.io\" \"syncsets.hive.openshift.io\" \"clustersyncleases.hiveinternal.openshift.io\" \"clustersyncs.hiveinternal.openshift.io\" \"fakeclusterinstalls.hiveinternal.openshift.io\"])",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"hiveconfigs.hive.openshift.io does not have a status descriptor",
				"managedDomains does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Warning: Value hive.openshift.io/v1, Kind=ClusterDeprovision: provided API should have an example annotation",
				"Warning: Value hiveinternal.openshift.io/v1alpha1, Kind=ClusterSync: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=SyncIdentityProvider: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=SelectorSyncIdentityProvider: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=ClusterImageSet: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=Checkpoint: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=SelectorSyncSet: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=ClusterState: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=ClusterClaim: provided API should have an example annotation",
				"Warning: Value hiveinternal.openshift.io/v1alpha1, Kind=ClusterSyncLease: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=MachinePool: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=SyncSet: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=ClusterDeployment: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=ClusterRelocate: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=ClusterProvision: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=MachinePoolNameLease: provided API should have an example annotation",
				"Warning: Value hiveinternal.openshift.io/v1alpha1, Kind=FakeClusterInstall: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=DNSZone: provided API should have an example annotation",
				"Warning: Value hive.openshift.io/v1, Kind=ClusterPool: provided API should have an example annotation",
				"Add a spec descriptor for managedDomains"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "horreum-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(horreum-operator.v0.1.0) csv.Spec.Icon not specified",
				"(horreum-operator.v0.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"horreums.hyperfoil.io\"])"
			],
			"scorecardErrors": [
				"keycloak does not have a spec descriptor",
				"postgres does not have a spec descriptor",
				"report does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for keycloak",
				"Add a spec descriptor for postgres",
				"Add a spec descriptor for report"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "hyperfoil-bundle",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(hyperfoil-operator.v0.12.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"hyperfoils.hyperfoil.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"route does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for route"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "ibm-block-csi-operator-community",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"multipleArchitectures": [
				"s390x",
				"amd64",
				"ppc64le"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"ibmblockcsis.csi.ibm.com\"])"
			],
			"scorecardErrors": [
				"node does not have a spec descriptor",
				"sidecars does not have a spec descriptor",
				"controller does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for node",
				"Add a spec descriptor for sidecars",
				"Add a spec descriptor for controller"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "ibm-spectrum-scale-csi-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"multipleArchitectures": [
				"amd64",
				"ppc64le",
				"s390x"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(ibm-spectrum-scale-csi-operator.v2.2.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"csiscaleoperators.csi.ibm.com\"])"
			],
			"scorecardErrors": [
				"snapshotterNodeSelector does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for snapshotterNodeSelector"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "ibmcloud-iam-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(ibmcloud-iam-operator.v0.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"accessgroups.ibmcloud.ibm.com\" \"accesspolicies.ibmcloud.ibm.com\" \"authorizationpolicies.ibmcloud.ibm.com\" \"customroles.ibmcloud.ibm.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "ibmcloud-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(ibmcloud-operator.v0.1.11) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"bindings.ibmcloud.ibm.com\" \"services.ibmcloud.ibm.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "infinispan",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"caches.infinispan.org\" \"infinispans.infinispan.org\"])"
			],
			"scorecardErrors": [
				"name does not have a spec descriptor",
				"adminAuth does not have a spec descriptor",
				"clusterName does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"caches.infinispan.org does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for name",
				"Add a spec descriptor for adminAuth",
				"Add a spec descriptor for clusterName"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "integrity-shield-operator",
			"kindsDeprecateAPIs": [
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(integrity-shield-operator.v0.1.6) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for ClusterRole: ([\"integrity-shield-operator-metrics-reader\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "iot-simulator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(iot-simulator.0.1.0) csv.metadata.Name iot-simulator.0.1.0 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"simulatorconsumers.iot.dentrassi.de\" \"simulatorproducers.iot.dentrassi.de\" \"simulators.iot.dentrassi.de\"])"
			],
			"scorecardErrors": [
				"endpoint does not have a spec descriptor",
				"simulators.iot.dentrassi.de does not have a status descriptor",
				"simulatorconsumers.iot.dentrassi.de does not have a status descriptor",
				"simulatorproducers.iot.dentrassi.de does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for Simulator/v1alpha1",
				"Add CRD validation for SimulatorConsumer/v1alpha1",
				"Add CRD validation for SimulatorProducer/v1alpha1",
				"Add a spec descriptor for endpoint"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "istio-workspace-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(istio-workspace-operator.v0.3.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"ref does not have a spec descriptor",
				"route does not have a spec descriptor",
				"sessions.maistra.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for ref",
				"Add a spec descriptor for route"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "jaeger",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(jaeger-operator.v1.21.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"jaegers.jaegertracing.io\"])"
			],
			"scorecardErrors": [
				"error spec does not exist",
				"jaegers.jaegertracing.io does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardFailingTests": [
				"basic-check-spec",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "jupyterlab-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(jupyterlab-operator.v1.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"jupyterlabs.jupyter.example.com\"])"
			],
			"scorecardErrors": [
				"jupyterlabs.jupyter.example.com does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"size does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for size"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "keda",
			"hasValidatorWarnings": false,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"scorecardErrors": [
				"triggerauthentications.keda.sh does not have a status descriptor",
				"clustertriggerauthentications.keda.sh does not have a status descriptor",
				"triggers does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for triggers"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "keepalived-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(keepalived-operator.v1.3.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"keepalivedgroups.redhatcop.redhat.io does not have a status descriptor",
				"image does not have a spec descriptor",
				"interface does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"blacklistRouterIDs does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for image",
				"Add a spec descriptor for interface",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for blacklistRouterIDs"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "keycloak-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(keycloak-operator.v13.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"keycloakbackups.keycloak.org\" \"keycloakclients.keycloak.org\" \"keycloakrealms.keycloak.org\" \"keycloaks.keycloak.org\" \"keycloakusers.keycloak.org\"])"
			],
			"scorecardErrors": [
				"instances does not have a spec descriptor",
				"extensions does not have a spec descriptor",
				"externalAccess does not have a spec descriptor",
				"realm does not have a spec descriptor",
				"instanceSelector does not have a spec descriptor",
				"instanceSelector does not have a spec descriptor",
				"realmSelector does not have a spec descriptor",
				"client does not have a spec descriptor",
				"user does not have a spec descriptor",
				"realmSelector does not have a spec descriptor",
				"keycloaks.keycloak.org does not have a status descriptor",
				"keycloakrealms.keycloak.org does not have a status descriptor",
				"keycloakbackups.keycloak.org does not have a status descriptor",
				"keycloakclients.keycloak.org does not have a status descriptor",
				"keycloakusers.keycloak.org does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for instances",
				"Add a spec descriptor for extensions",
				"Add a spec descriptor for externalAccess",
				"Add a spec descriptor for realm",
				"Add a spec descriptor for instanceSelector",
				"Add a spec descriptor for instanceSelector",
				"Add a spec descriptor for realmSelector",
				"Add a spec descriptor for client",
				"Add a spec descriptor for user",
				"Add a spec descriptor for realmSelector"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "kiali",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(kiali-operator.v1.36.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"kialis.kiali.io does not have a status descriptor",
				"monitoringdashboards.monitoring.kiali.io does not have a status descriptor",
				"installation_tag does not have a spec descriptor",
				"istio_namespace does not have a spec descriptor",
				"deployment does not have a spec descriptor",
				"external_services does not have a spec descriptor",
				"server does not have a spec descriptor",
				"items does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `installation_tag` in Kiali/v1alpha1",
				"Add CRD validation for spec field `istio_namespace` in Kiali/v1alpha1",
				"Add CRD validation for spec field `deployment` in Kiali/v1alpha1",
				"Add CRD validation for spec field `external_services` in Kiali/v1alpha1",
				"Add CRD validation for spec field `server` in Kiali/v1alpha1",
				"Add CRD validation for spec field `title` in MonitoringDashboard/v1alpha1",
				"Add CRD validation for spec field `items` in MonitoringDashboard/v1alpha1",
				"Add a spec descriptor for installation_tag",
				"Add a spec descriptor for istio_namespace",
				"Add a spec descriptor for deployment",
				"Add a spec descriptor for external_services",
				"Add a spec descriptor for server",
				"Add a spec descriptor for items"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "klusterlet",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(klusterlet.v0.3.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"klusterlets.operator.open-cluster-management.io\"])"
			],
			"scorecardErrors": [
				"externalServerURLs does not have a spec descriptor",
				"namespace does not have a spec descriptor",
				"registrationImagePullSpec does not have a spec descriptor",
				"workImagePullSpec does not have a spec descriptor",
				"clusterName does not have a spec descriptor",
				"klusterlets.operator.open-cluster-management.io does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for externalServerURLs",
				"Add a spec descriptor for namespace",
				"Add a spec descriptor for registrationImagePullSpec",
				"Add a spec descriptor for workImagePullSpec",
				"Add a spec descriptor for clusterName"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "knative-camel-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"camelsources.sources.knative.dev\"])"
			],
			"scorecardErrors": [
				"camelsources.sources.knative.dev does not have a status descriptor",
				"camelsources.sources.knative.dev does not have a status descriptor",
				"camelsources.sources.knative.dev does not have a status descriptor",
				"camelsources.sources.knative.dev does not have a status descriptor",
				"camelsources.sources.knative.dev does not have a status descriptor",
				"camelsources.sources.knative.dev does not have a status descriptor",
				"camelsources.sources.knative.dev does not have a status descriptor",
				"source does not have a spec descriptor",
				"sink does not have a spec descriptor",
				"source does not have a spec descriptor",
				"sink does not have a spec descriptor",
				"source does not have a spec descriptor",
				"sink does not have a spec descriptor",
				"sink does not have a spec descriptor",
				"source does not have a spec descriptor",
				"source does not have a spec descriptor",
				"sink does not have a spec descriptor",
				"source does not have a spec descriptor",
				"sink does not have a spec descriptor",
				"source does not have a spec descriptor",
				"sink does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for source",
				"Add a spec descriptor for sink",
				"Add a spec descriptor for source",
				"Add a spec descriptor for sink",
				"Add a spec descriptor for source",
				"Add a spec descriptor for sink",
				"Add a spec descriptor for sink",
				"Add a spec descriptor for source",
				"Add a spec descriptor for source",
				"Add a spec descriptor for sink",
				"Add a spec descriptor for source",
				"Add a spec descriptor for sink",
				"Add a spec descriptor for source",
				"Add a spec descriptor for sink"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "kogito-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(kogito-operator.v1.6.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"kogitobuilds.app.kiegroup.org does not have a status descriptor",
				"kogitoinfras.app.kiegroup.org does not have a status descriptor",
				"kogitoruntimes.app.kiegroup.org does not have a status descriptor",
				"kogitosupportingservices.app.kiegroup.org does not have a status descriptor",
				"gitSource does not have a spec descriptor",
				"type does not have a spec descriptor",
				"resource does not have a spec descriptor",
				"replicas does not have a spec descriptor",
				"replicas does not have a spec descriptor",
				"serviceType does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for gitSource",
				"Add a spec descriptor for type",
				"Add a spec descriptor for resource",
				"Add a spec descriptor for replicas",
				"Add a spec descriptor for replicas",
				"Add a spec descriptor for serviceType"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "koku-metrics-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(koku-metrics-operator.v0.9.7) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"kokumetricsconfigs.koku-metrics-cfg.openshift.io does not have a status descriptor",
				"authentication does not have a spec descriptor",
				"packaging does not have a spec descriptor",
				"prometheus_config does not have a spec descriptor",
				"source does not have a spec descriptor",
				"upload does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for authentication",
				"Add a spec descriptor for packaging",
				"Add a spec descriptor for prometheus_config",
				"Add a spec descriptor for source",
				"Add a spec descriptor for upload"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true,
			"hasInfraAnnotation": true
		},
		{
			"packageName": "konveyor-forklift-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"forkliftcontrollers.forklift.konveyor.io\" \"hosts.forklift.konveyor.io\" \"migrations.forklift.konveyor.io\" \"networkmaps.forklift.konveyor.io\" \"plans.forklift.konveyor.io\" \"providers.forklift.konveyor.io\" \"provisioners.forklift.konveyor.io\" \"storagemaps.forklift.konveyor.io\"])",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"plan does not have a spec descriptor",
				"type does not have a spec descriptor",
				"secret does not have a spec descriptor",
				"url does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"forkliftcontrollers.forklift.konveyor.io does not have a status descriptor",
				"migrations.forklift.konveyor.io does not have a status descriptor",
				"plans.forklift.konveyor.io does not have a status descriptor",
				"providers.forklift.konveyor.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for plan",
				"Add a spec descriptor for type",
				"Add a spec descriptor for secret",
				"Add a spec descriptor for url",
				"Warning: Value forklift.konveyor.io/v1alpha1, Kind=Host: provided API should have an example annotation",
				"Warning: Value forklift.konveyor.io/v1alpha1, Kind=NetworkMap: provided API should have an example annotation",
				"Warning: Value forklift.konveyor.io/v1alpha1, Kind=StorageMap: provided API should have an example annotation",
				"Warning: Value forklift.konveyor.io/v1alpha1, Kind=Provisioner: provided API should have an example annotation"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "kubefed",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(kubefed-operator.v0.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"clusterpropagatedversions.core.kubefed.io\" \"federatedservicestatuses.core.kubefed.io\" \"propagatedversions.core.kubefed.io\" \"federatedtypeconfigs.core.kubefed.io\" \"kubefedclusters.core.kubefed.io\" \"kubefedconfigs.core.kubefed.io\" \"dnsendpoints.multiclusterdns.kubefed.io\" \"domains.multiclusterdns.kubefed.io\" \"ingressdnsrecords.multiclusterdns.kubefed.io\" \"servicednsrecords.multiclusterdns.kubefed.io\" \"kubefeds.operator.kubefed.io\" \"kubefedwebhooks.operator.kubefed.io\" \"replicaschedulingpreferences.scheduling.kubefed.io\"])",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"scope does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for scope",
				"Warning: Value multiclusterdns.kubefed.io/v1alpha1, Kind=DNSEndpoint: provided API should have an example annotation",
				"Warning: Value core.kubefed.io/v1alpha1, Kind=FederatedServiceStatus: provided API should have an example annotation",
				"Warning: Value core.kubefed.io/v1beta1, Kind=KubeFedConfig: provided API should have an example annotation",
				"Warning: Value multiclusterdns.kubefed.io/v1alpha1, Kind=ServiceDNSRecord: provided API should have an example annotation",
				"Warning: Value core.kubefed.io/v1alpha1, Kind=ClusterPropagatedVersion: provided API should have an example annotation",
				"Warning: Value multiclusterdns.kubefed.io/v1alpha1, Kind=Domain: provided API should have an example annotation",
				"Warning: Value core.kubefed.io/v1beta1, Kind=KubeFedCluster: provided API should have an example annotation",
				"Warning: Value core.kubefed.io/v1beta1, Kind=FederatedTypeConfig: provided API should have an example annotation",
				"Warning: Value multiclusterdns.kubefed.io/v1alpha1, Kind=IngressDNSRecord: provided API should have an example annotation",
				"Warning: Value core.kubefed.io/v1alpha1, Kind=PropagatedVersion: provided API should have an example annotation",
				"Warning: Value scheduling.kubefed.io/v1alpha1, Kind=ReplicaSchedulingPreference: provided API should have an example annotation"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "kubernetes-imagepuller-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(kubernetes-imagepuller-operator.v0.0.7) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"kubernetesimagepullers.che.eclipse.org does not have a status descriptor",
				"images does not have a spec descriptor",
				"daemonsetName does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for images",
				"Add a spec descriptor for daemonsetName"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "kubestone",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"drills.perf.kubestone.xridge.io\" \"fios.perf.kubestone.xridge.io\" \"iopings.perf.kubestone.xridge.io\" \"iperf3s.perf.kubestone.xridge.io\" \"pgbenches.perf.kubestone.xridge.io\" \"qperves.perf.kubestone.xridge.io\" \"sysbenches.perf.kubestone.xridge.io\"])"
			],
			"scorecardErrors": [
				"drills.perf.kubestone.xridge.io does not have a status descriptor",
				"fios.perf.kubestone.xridge.io does not have a status descriptor",
				"iopings.perf.kubestone.xridge.io does not have a status descriptor",
				"iperf3s.perf.kubestone.xridge.io does not have a status descriptor",
				"pgbenches.perf.kubestone.xridge.io does not have a status descriptor",
				"qperves.perf.kubestone.xridge.io does not have a status descriptor",
				"sysbenches.perf.kubestone.xridge.io does not have a status descriptor",
				"benchmarksVolume does not have a spec descriptor",
				"image does not have a spec descriptor",
				"options does not have a spec descriptor",
				"benchmarkFile does not have a spec descriptor",
				"cmdLineArgs does not have a spec descriptor",
				"image does not have a spec descriptor",
				"volume does not have a spec descriptor",
				"image does not have a spec descriptor",
				"volume does not have a spec descriptor",
				"args does not have a spec descriptor",
				"clientConfiguration does not have a spec descriptor",
				"image does not have a spec descriptor",
				"serverConfiguration does not have a spec descriptor",
				"udp does not have a spec descriptor",
				"image does not have a spec descriptor",
				"initArgs does not have a spec descriptor",
				"postgres does not have a spec descriptor",
				"tests does not have a spec descriptor",
				"clientConfiguration does not have a spec descriptor",
				"image does not have a spec descriptor",
				"options does not have a spec descriptor",
				"serverConfiguration does not have a spec descriptor",
				"command does not have a spec descriptor",
				"image does not have a spec descriptor",
				"options does not have a spec descriptor",
				"testName does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for benchmarksVolume",
				"Add a spec descriptor for image",
				"Add a spec descriptor for options",
				"Add a spec descriptor for benchmarkFile",
				"Add a spec descriptor for cmdLineArgs",
				"Add a spec descriptor for image",
				"Add a spec descriptor for volume",
				"Add a spec descriptor for image",
				"Add a spec descriptor for volume",
				"Add a spec descriptor for args",
				"Add a spec descriptor for clientConfiguration",
				"Add a spec descriptor for image",
				"Add a spec descriptor for serverConfiguration",
				"Add a spec descriptor for udp",
				"Add a spec descriptor for image",
				"Add a spec descriptor for initArgs",
				"Add a spec descriptor for postgres",
				"Add a spec descriptor for tests",
				"Add a spec descriptor for clientConfiguration",
				"Add a spec descriptor for image",
				"Add a spec descriptor for options",
				"Add a spec descriptor for serverConfiguration",
				"Add a spec descriptor for command",
				"Add a spec descriptor for image",
				"Add a spec descriptor for options",
				"Add a spec descriptor for testName"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "kubeturbo",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(kubeturbo-operator.v8.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"kubeturbos.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"kubeturbos.charts.helm.k8s.io does not have a status descriptor",
				"serverMeta does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for serverMeta"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "lib-bucket-provisioner",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(lib-bucket-provisioner.v2.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "lightbend-console-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorErrors": true,
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorErrors": [
				"metadata.namespace: Forbidden: not allowed on this type"
			],
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"consoles.app.lightbend.com\"])"
			],
			"scorecardErrors": [
				"consoles.app.lightbend.com does not have a status descriptor",
				"Error: Field metadata.namespace, Value : metadata.namespace: Forbidden: not allowed on this type",
				"defaultCPURequest does not have a spec descriptor",
				"podUID does not have a spec descriptor",
				"busyboxImage does not have a spec descriptor",
				"daemonSetApiVersion does not have a spec descriptor",
				"enableElasticsearch does not have a spec descriptor",
				"esMonitorVersion does not have a spec descriptor",
				"imageCredentials does not have a spec descriptor",
				"alpineImage does not have a spec descriptor",
				"elasticsearchMemoryRequest does not have a spec descriptor",
				"imagePullPolicy does not have a spec descriptor",
				"minikube does not have a spec descriptor",
				"apiGroupVersion does not have a spec descriptor",
				"esGrafanaImage does not have a spec descriptor",
				"esGrafanaEnvVars does not have a spec descriptor",
				"esGrafanaVolumeSize does not have a spec descriptor",
				"esMonitorImage does not have a spec descriptor",
				"exposeServices does not have a spec descriptor",
				"kubeStateMetricsImage does not have a spec descriptor",
				"kubeStateMetricsVersion does not have a spec descriptor",
				"alpineVersion does not have a spec descriptor",
				"defaultMemoryRequest does not have a spec descriptor",
				"prometheusMemoryRequest does not have a spec descriptor",
				"usePersistentVolumes does not have a spec descriptor",
				"elasticsearchImage does not have a spec descriptor",
				"prometheusImage does not have a spec descriptor",
				"prometheusVersion does not have a spec descriptor",
				"rbacApiVersion does not have a spec descriptor",
				"busyboxVersion does not have a spec descriptor",
				"configMapReloadVersion does not have a spec descriptor",
				"prometheusDomain does not have a spec descriptor",
				"configMapReloadImage does not have a spec descriptor",
				"deploymentApiVersion does not have a spec descriptor",
				"consoleAPI does not have a spec descriptor",
				"esGrafanaVersion does not have a spec descriptor",
				"elasticsearchVersion does not have a spec descriptor",
				"esConsoleExposePort does not have a spec descriptor",
				"esConsoleImage does not have a spec descriptor",
				"esConsoleVersion does not have a spec descriptor",
				"goDnsmasqImage does not have a spec descriptor",
				"goDnsmasqVersion does not have a spec descriptor",
				"alertManagers does not have a spec descriptor",
				"consoleUIConfig does not have a spec descriptor",
				"prometheusVolumeSize does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for Console/v1alpha1",
				"Add a spec descriptor for defaultCPURequest",
				"Add a spec descriptor for podUID",
				"Add a spec descriptor for busyboxImage",
				"Add a spec descriptor for daemonSetApiVersion",
				"Add a spec descriptor for enableElasticsearch",
				"Add a spec descriptor for esMonitorVersion",
				"Add a spec descriptor for imageCredentials",
				"Add a spec descriptor for alpineImage",
				"Add a spec descriptor for elasticsearchMemoryRequest",
				"Add a spec descriptor for imagePullPolicy",
				"Add a spec descriptor for minikube",
				"Add a spec descriptor for apiGroupVersion",
				"Add a spec descriptor for esGrafanaImage",
				"Add a spec descriptor for esGrafanaEnvVars",
				"Add a spec descriptor for esGrafanaVolumeSize",
				"Add a spec descriptor for esMonitorImage",
				"Add a spec descriptor for exposeServices",
				"Add a spec descriptor for kubeStateMetricsImage",
				"Add a spec descriptor for kubeStateMetricsVersion",
				"Add a spec descriptor for alpineVersion",
				"Add a spec descriptor for defaultMemoryRequest",
				"Add a spec descriptor for prometheusMemoryRequest",
				"Add a spec descriptor for usePersistentVolumes",
				"Add a spec descriptor for elasticsearchImage",
				"Add a spec descriptor for prometheusImage",
				"Add a spec descriptor for prometheusVersion",
				"Add a spec descriptor for rbacApiVersion",
				"Add a spec descriptor for busyboxVersion",
				"Add a spec descriptor for configMapReloadVersion",
				"Add a spec descriptor for prometheusDomain",
				"Add a spec descriptor for configMapReloadImage",
				"Add a spec descriptor for deploymentApiVersion",
				"Add a spec descriptor for consoleAPI",
				"Add a spec descriptor for esGrafanaVersion",
				"Add a spec descriptor for elasticsearchVersion",
				"Add a spec descriptor for esConsoleExposePort",
				"Add a spec descriptor for esConsoleImage",
				"Add a spec descriptor for esConsoleVersion",
				"Add a spec descriptor for goDnsmasqImage",
				"Add a spec descriptor for goDnsmasqVersion",
				"Add a spec descriptor for alertManagers",
				"Add a spec descriptor for consoleUIConfig",
				"Add a spec descriptor for prometheusVolumeSize"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-bundle-validation",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "maistraoperator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"multipleArchitectures": [
				"amd64"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(maistraoperator.v2.0.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"servicemeshcontrolplanes.maistra.io\" \"servicemeshmemberrolls.maistra.io\" \"servicemeshmembers.maistra.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"servicemeshmemberrolls.maistra.io does not have a status descriptor",
				"servicemeshmembers.maistra.io does not have a status descriptor",
				"addons does not have a spec descriptor",
				"tracing does not have a spec descriptor",
				"policy does not have a spec descriptor",
				"telemetry does not have a spec descriptor",
				"members does not have a spec descriptor",
				"controlPlaneRef does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for addons",
				"Add a spec descriptor for tracing",
				"Add a spec descriptor for policy",
				"Add a spec descriptor for telemetry",
				"Add a spec descriptor for members",
				"Add a spec descriptor for controlPlaneRef"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasInfraAnnotation": true,
			"hasPossiblePerformIssues": true
		},
		{
			"packageName": "mattermost-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(mattermost-operator.v0.5.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"clusterinstallations.mattermost.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"ingressName does not have a spec descriptor",
				"clusterinstallations.mattermost.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for ingressName"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "mcad-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"mcadhelmconfigs.mcad.ibm.com\"])"
			],
			"scorecardErrors": [
				"configMap does not have a spec descriptor",
				"deploymentName does not have a spec descriptor",
				"image does not have a spec descriptor",
				"loglevel does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"imagePullSecret does not have a spec descriptor",
				"namespace does not have a spec descriptor",
				"replicaCount does not have a spec descriptor",
				"serviceAccount does not have a spec descriptor",
				"volumes does not have a spec descriptor",
				"mcadhelmconfigs.mcad.ibm.com does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for configMap",
				"Add a spec descriptor for deploymentName",
				"Add a spec descriptor for image",
				"Add a spec descriptor for loglevel",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for imagePullSecret",
				"Add a spec descriptor for namespace",
				"Add a spec descriptor for replicaCount",
				"Add a spec descriptor for serviceAccount",
				"Add a spec descriptor for volumes",
				"Add CRD validation for spec field `configMap` in MCADHelmConfig/v1beta1",
				"Add CRD validation for spec field `deploymentName` in MCADHelmConfig/v1beta1",
				"Add CRD validation for spec field `namespace` in MCADHelmConfig/v1beta1",
				"Add CRD validation for spec field `nodeSelector` in MCADHelmConfig/v1beta1",
				"Add CRD validation for spec field `serviceAccount` in MCADHelmConfig/v1beta1",
				"Add CRD validation for spec field `volumes` in MCADHelmConfig/v1beta1",
				"Add CRD validation for spec field `image` in MCADHelmConfig/v1beta1",
				"Add CRD validation for spec field `imagePullSecret` in MCADHelmConfig/v1beta1",
				"Add CRD validation for spec field `loglevel` in MCADHelmConfig/v1beta1",
				"Add CRD validation for spec field `replicaCount` in MCADHelmConfig/v1beta1",
				"Add CRD validation for spec field `resources` in MCADHelmConfig/v1beta1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "microcks",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(microcks-operator.v1.2.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"microcksinstalls.microcks.github.io\"])"
			],
			"scorecardErrors": [
				"microcksinstalls.microcks.github.io does not have a status descriptor",
				"microcksinstalls.microcks.github.io does not have a status descriptor",
				"microcks does not have a spec descriptor",
				"postman does not have a spec descriptor",
				"keycloak does not have a spec descriptor",
				"mongodb does not have a spec descriptor",
				"postman does not have a spec descriptor",
				"keycloak does not have a spec descriptor",
				"mongodb does not have a spec descriptor",
				"microcks does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for MicrocksInstall/v1alpha1",
				"Add CRD validation for MicrocksInstall/v1alpha1",
				"Add a spec descriptor for microcks",
				"Add a spec descriptor for postman",
				"Add a spec descriptor for keycloak",
				"Add a spec descriptor for mongodb",
				"Add a spec descriptor for postman",
				"Add a spec descriptor for keycloak",
				"Add a spec descriptor for mongodb",
				"Add a spec descriptor for microcks"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "mongodb-atlas-kubernetes",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(mongodb-atlas-kubernetes.v0.4.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "mta-operator",
			"hasValidatorErrors": true,
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorErrors": [
				"(windup-operator.0.0.5) csv.Metadata.Annotations[\"categories\"] value Modernization \u0026 Migration is not in the set of default categories"
			],
			"validatorWarnings": [
				"(windup-operator.0.0.5) csv.Metadata.Annotations[\"categories\"] value Modernization \u0026 Migration is not in the set of default categories",
				"(windup-operator.0.0.5) csv.metadata.Name windup-operator.0.0.5 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"windups.windup.jboss.org does not have a status descriptor",
				"postgresql_cpu_limit does not have a spec descriptor",
				"sso_saml_keystore_password does not have a spec descriptor",
				"docker_image_executor does not have a spec descriptor",
				"messaging_serializer does not have a spec descriptor",
				"db_min_pool_size does not have a spec descriptor",
				"sso_truststore_secret does not have a spec descriptor",
				"db_database does not have a spec descriptor",
				"executor_mem_limit does not have a spec descriptor",
				"web_liveness_probe does not have a spec descriptor",
				"volumeCapacity does not have a spec descriptor",
				"db_tx_isolation does not have a spec descriptor",
				"jgroups_encrypt_keystore does not have a spec descriptor",
				"sso_url does not have a spec descriptor",
				"sso_bearer_only does not have a spec descriptor",
				"sso_saml_keystore does not have a spec descriptor",
				"webLivenessInitialDelaySeconds does not have a spec descriptor",
				"hostname_http does not have a spec descriptor",
				"db_username does not have a spec descriptor",
				"jgroups_encrypt_name does not have a spec descriptor",
				"jgroups_encrypt_password does not have a spec descriptor",
				"jgroups_cluster_password does not have a spec descriptor",
				"executor_cpu_request does not have a spec descriptor",
				"executor_liveness_probe does not have a spec descriptor",
				"jgroups_encrypt_secret does not have a spec descriptor",
				"sso_secret does not have a spec descriptor",
				"sso_enable_cors does not have a spec descriptor",
				"webLivenessTimeoutSeconds does not have a spec descriptor",
				"sso_disable_ssl_certificate_validation does not have a spec descriptor",
				"gc_max_metaspace_size does not have a spec descriptor",
				"postgresql_max_connections does not have a spec descriptor",
				"webReadinessTimeoutSeconds does not have a spec descriptor",
				"web_mem_request does not have a spec descriptor",
				"web_readiness_probe does not have a spec descriptor",
				"docker_images_user does not have a spec descriptor",
				"postgresql_mem_limit does not have a spec descriptor",
				"postgresql_image does not have a spec descriptor",
				"sso_saml_keystore_secret does not have a spec descriptor",
				"sso_truststore does not have a spec descriptor",
				"postgresql_shared_buffers does not have a spec descriptor",
				"webLivenessFailureThreshold does not have a spec descriptor",
				"docker_images_tag does not have a spec descriptor",
				"db_max_pool_size does not have a spec descriptor",
				"postgresql_mem_request does not have a spec descriptor",
				"webReadinessInitialDelaySeconds does not have a spec descriptor",
				"webReadinessFailureThreshold does not have a spec descriptor",
				"docker_images_repository does not have a spec descriptor",
				"db_password does not have a spec descriptor",
				"mq_queues does not have a spec descriptor",
				"auto_deploy_exploded does not have a spec descriptor",
				"sso_username does not have a spec descriptor",
				"sso_saml_certificate_name does not have a spec descriptor",
				"sso_saml_logout_page does not have a spec descriptor",
				"executor_mem_request does not have a spec descriptor",
				"db_jndi does not have a spec descriptor",
				"mq_cluster_password does not have a spec descriptor",
				"sso_service_url does not have a spec descriptor",
				"web_cpu_limit does not have a spec descriptor",
				"executor_readiness_probe does not have a spec descriptor",
				"docker_image_web does not have a spec descriptor",
				"tls_secret does not have a spec descriptor",
				"mta_Volume_Capacity does not have a spec descriptor",
				"sso_realm does not have a spec descriptor",
				"sso_public_key does not have a spec descriptor",
				"web_mem_limit does not have a spec descriptor",
				"mq_topics does not have a spec descriptor",
				"sso_password does not have a spec descriptor",
				"sso_truststore_password does not have a spec descriptor",
				"max_post_size does not have a spec descriptor",
				"postgresql_cpu_request does not have a spec descriptor",
				"web_cpu_request does not have a spec descriptor",
				"executor_cpu_limit does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for postgresql_cpu_limit",
				"Add a spec descriptor for sso_saml_keystore_password",
				"Add a spec descriptor for docker_image_executor",
				"Add a spec descriptor for messaging_serializer",
				"Add a spec descriptor for db_min_pool_size",
				"Add a spec descriptor for sso_truststore_secret",
				"Add a spec descriptor for db_database",
				"Add a spec descriptor for executor_mem_limit",
				"Add a spec descriptor for web_liveness_probe",
				"Add a spec descriptor for volumeCapacity",
				"Add a spec descriptor for db_tx_isolation",
				"Add a spec descriptor for jgroups_encrypt_keystore",
				"Add a spec descriptor for sso_url",
				"Add a spec descriptor for sso_bearer_only",
				"Add a spec descriptor for sso_saml_keystore",
				"Add a spec descriptor for webLivenessInitialDelaySeconds",
				"Add a spec descriptor for hostname_http",
				"Add a spec descriptor for db_username",
				"Add a spec descriptor for jgroups_encrypt_name",
				"Add a spec descriptor for jgroups_encrypt_password",
				"Add a spec descriptor for jgroups_cluster_password",
				"Add a spec descriptor for executor_cpu_request",
				"Add a spec descriptor for executor_liveness_probe",
				"Add a spec descriptor for jgroups_encrypt_secret",
				"Add a spec descriptor for sso_secret",
				"Add a spec descriptor for sso_enable_cors",
				"Add a spec descriptor for webLivenessTimeoutSeconds",
				"Add a spec descriptor for sso_disable_ssl_certificate_validation",
				"Add a spec descriptor for gc_max_metaspace_size",
				"Add a spec descriptor for postgresql_max_connections",
				"Add a spec descriptor for webReadinessTimeoutSeconds",
				"Add a spec descriptor for web_mem_request",
				"Add a spec descriptor for web_readiness_probe",
				"Add a spec descriptor for docker_images_user",
				"Add a spec descriptor for postgresql_mem_limit",
				"Add a spec descriptor for postgresql_image",
				"Add a spec descriptor for sso_saml_keystore_secret",
				"Add a spec descriptor for sso_truststore",
				"Add a spec descriptor for postgresql_shared_buffers",
				"Add a spec descriptor for webLivenessFailureThreshold",
				"Add a spec descriptor for docker_images_tag",
				"Add a spec descriptor for db_max_pool_size",
				"Add a spec descriptor for postgresql_mem_request",
				"Add a spec descriptor for webReadinessInitialDelaySeconds",
				"Add a spec descriptor for webReadinessFailureThreshold",
				"Add a spec descriptor for docker_images_repository",
				"Add a spec descriptor for db_password",
				"Add a spec descriptor for mq_queues",
				"Add a spec descriptor for auto_deploy_exploded",
				"Add a spec descriptor for sso_username",
				"Add a spec descriptor for sso_saml_certificate_name",
				"Add a spec descriptor for sso_saml_logout_page",
				"Add a spec descriptor for executor_mem_request",
				"Add a spec descriptor for db_jndi",
				"Add a spec descriptor for mq_cluster_password",
				"Add a spec descriptor for sso_service_url",
				"Add a spec descriptor for web_cpu_limit",
				"Add a spec descriptor for executor_readiness_probe",
				"Add a spec descriptor for docker_image_web",
				"Add a spec descriptor for tls_secret",
				"Add a spec descriptor for mta_Volume_Capacity",
				"Add a spec descriptor for sso_realm",
				"Add a spec descriptor for sso_public_key",
				"Add a spec descriptor for web_mem_limit",
				"Add a spec descriptor for mq_topics",
				"Add a spec descriptor for sso_password",
				"Add a spec descriptor for sso_truststore_password",
				"Add a spec descriptor for max_post_size",
				"Add a spec descriptor for postgresql_cpu_request",
				"Add a spec descriptor for web_cpu_request",
				"Add a spec descriptor for executor_cpu_limit"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "multicluster-operators-subscription",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(multicluster-operators-subscription.v0.2.5) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"applications.app.k8s.io\" \"channels.apps.open-cluster-management.io\" \"deployables.apps.open-cluster-management.io\" \"helmreleases.apps.open-cluster-management.io\" \"placementrules.apps.open-cluster-management.io\" \"subscriptions.apps.open-cluster-management.io\"])",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"type does not have a spec descriptor",
				"pathname does not have a spec descriptor",
				"packageFilter does not have a spec descriptor",
				"packageOverrides does not have a spec descriptor",
				"placement does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"channels.apps.open-cluster-management.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Warning: Value apps.open-cluster-management.io/v1, Kind=Deployable: provided API should have an example annotation",
				"Warning: Value apps.open-cluster-management.io/v1, Kind=PlacementRule: provided API should have an example annotation",
				"Warning: Value app.k8s.io/v1beta1, Kind=Application: provided API should have an example annotation",
				"Warning: Value apps.open-cluster-management.io/v1, Kind=HelmRelease: provided API should have an example annotation",
				"Add a spec descriptor for type",
				"Add a spec descriptor for pathname",
				"Add a spec descriptor for packageFilter",
				"Add a spec descriptor for packageOverrides",
				"Add a spec descriptor for placement",
				"Add CRD validation for status field `state` in Channel/v1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "must-gather-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(must-gather-operator.v1.0.5) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"mustgathers.redhatcop.redhat.io does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"caseID does not have a spec descriptor",
				"caseManagementAccountSecretRef does not have a spec descriptor",
				"serviceAccountRef does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for caseID",
				"Add a spec descriptor for caseManagementAccountSecretRef",
				"Add a spec descriptor for serviceAccountRef"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "myvirtualdirectory",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(myvirtualdirectory.1.0.0) csv.metadata.Name myvirtualdirectory.1.0.0 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"myvirtualdirectories.myvirtualdirectory.tremolo.io\"])"
			],
			"scorecardErrors": [
				"myvirtualdirectories.myvirtualdirectory.tremolo.io does not have a status descriptor",
				"image does not have a spec descriptor",
				"non_secret_data does not have a spec descriptor",
				"myvd_props does not have a spec descriptor",
				"myvd_log4j2_xml does not have a spec descriptor",
				"myvd_network_configuration does not have a spec descriptor",
				"key_store does not have a spec descriptor",
				"replicas does not have a spec descriptor",
				"dest_secret does not have a spec descriptor",
				"dest_cfg_map does not have a spec descriptor",
				"source_secret does not have a spec descriptor",
				"secret_data does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for image",
				"Add a spec descriptor for non_secret_data",
				"Add a spec descriptor for myvd_props",
				"Add a spec descriptor for myvd_log4j2_xml",
				"Add a spec descriptor for myvd_network_configuration",
				"Add a spec descriptor for key_store",
				"Add a spec descriptor for replicas",
				"Add a spec descriptor for dest_secret",
				"Add a spec descriptor for dest_cfg_map",
				"Add a spec descriptor for source_secret",
				"Add a spec descriptor for secret_data"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "namespace-configuration-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(namespace-configuration-operator.v1.0.6) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"labelSelector does not have a spec descriptor",
				"templates does not have a spec descriptor",
				"labelSelector does not have a spec descriptor",
				"templates does not have a spec descriptor",
				"providerName does not have a spec descriptor",
				"templates does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"groupconfigs.redhatcop.redhat.io does not have a status descriptor",
				"namespaceconfigs.redhatcop.redhat.io does not have a status descriptor",
				"userconfigs.redhatcop.redhat.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for labelSelector",
				"Add a spec descriptor for templates",
				"Add a spec descriptor for labelSelector",
				"Add a spec descriptor for templates",
				"Add a spec descriptor for providerName",
				"Add a spec descriptor for templates"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "neuvector-community-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(neuvector-operator.v1.2.5) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"neuvectors.apm.neuvector.com\"])"
			],
			"scorecardErrors": [
				"neuvectors.apm.neuvector.com does not have a status descriptor",
				"exporter does not have a spec descriptor",
				"manager does not have a spec descriptor",
				"bottlerocket does not have a spec descriptor",
				"controller does not have a spec descriptor",
				"crio does not have a spec descriptor",
				"cve does not have a spec descriptor",
				"imagePullSecrets does not have a spec descriptor",
				"k3s does not have a spec descriptor",
				"openshift does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"containerd does not have a spec descriptor",
				"crdwebhook does not have a spec descriptor",
				"enforcer does not have a spec descriptor",
				"admissionwebhook does not have a spec descriptor",
				"docker does not have a spec descriptor",
				"registry does not have a spec descriptor",
				"tag does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for exporter",
				"Add a spec descriptor for manager",
				"Add a spec descriptor for bottlerocket",
				"Add a spec descriptor for controller",
				"Add a spec descriptor for crio",
				"Add a spec descriptor for cve",
				"Add a spec descriptor for imagePullSecrets",
				"Add a spec descriptor for k3s",
				"Add a spec descriptor for openshift",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for containerd",
				"Add a spec descriptor for crdwebhook",
				"Add a spec descriptor for enforcer",
				"Add a spec descriptor for admissionwebhook",
				"Add a spec descriptor for docker",
				"Add a spec descriptor for registry",
				"Add a spec descriptor for tag",
				"Add CRD validation for Neuvector/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "nexus-operator-m88i",
			"kindsDeprecateAPIs": [
				"CRD",
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(nexus-operator.v0.5.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"nexus.apps.m88i.io\"]),ClusterRole: ([\"nexus-operator-metrics-reader\"]),"
			],
			"scorecardErrors": [
				"nexus.apps.m88i.io does not have a status descriptor",
				"networking does not have a spec descriptor",
				"persistence does not have a spec descriptor",
				"replicas does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"useRedHatImage does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for networking",
				"Add a spec descriptor for persistence",
				"Add a spec descriptor for replicas",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for useRedHatImage"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "node-healthcheck-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(node-healthcheck-operator.v0.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "node-problem-detector",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(node-problem-detector.v0.0.1) csv.Spec.Icon not specified",
				"(node-problem-detector.v0.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"nodeproblemdetectors.node-problem-detector.operator.k8s.io\"])"
			],
			"scorecardErrors": [
				"error spec does not exist",
				"Owned CRDs do not have resources specified",
				"nodeproblemdetectors.node-problem-detector.operator.k8s.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for NodeProblemDetector/v1alpha1"
			],
			"scorecardFailingTests": [
				"basic-check-spec",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "nsm-operator-registry",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(nsm-operator.v0.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"networkserviceendpoints.networkservicemesh.io\" \"networkservicemanagers.networkservicemesh.io\" \"networkservices.networkservicemesh.io\" \"nsms.nsm.networkservicemesh.io\"])",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Warning: Value networkservicemesh.io/v1alpha1, Kind=NetworkService: provided API should have an example annotation",
				"Warning: Value networkservicemesh.io/v1alpha1, Kind=NetworkServiceManager: provided API should have an example annotation",
				"Warning: Value networkservicemesh.io/v1alpha1, Kind=NetworkServiceEndpoint: provided API should have an example annotation"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "oadp-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(oadp-operator.v0.2.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"backups.velero.io\" \"backupstoragelocations.velero.io\" \"deletebackuprequests.velero.io\" \"downloadrequests.velero.io\" \"podvolumebackups.velero.io\" \"podvolumerestores.velero.io\" \"resticrepositories.velero.io\" \"restores.velero.io\" \"schedules.velero.io\" \"serverstatusrequests.velero.io\" \"veleros.konveyor.openshift.io\" \"volumesnapshotlocations.velero.io\"])"
			],
			"scorecardErrors": [
				"olm_managed does not have a spec descriptor",
				"backup_storage_locations does not have a spec descriptor",
				"default_velero_plugins does not have a spec descriptor",
				"velero_feature_flags does not have a spec descriptor",
				"enable_restic does not have a spec descriptor",
				"volume_snapshot_locations does not have a spec descriptor",
				"veleros.konveyor.openshift.io does not have a status descriptor",
				"backups.velero.io does not have a status descriptor",
				"backupstoragelocations.velero.io does not have a status descriptor",
				"deletebackuprequests.velero.io does not have a status descriptor",
				"downloadrequests.velero.io does not have a status descriptor",
				"podvolumebackups.velero.io does not have a status descriptor",
				"podvolumerestores.velero.io does not have a status descriptor",
				"resticrepositories.velero.io does not have a status descriptor",
				"restores.velero.io does not have a status descriptor",
				"schedules.velero.io does not have a status descriptor",
				"serverstatusrequests.velero.io does not have a status descriptor",
				"volumesnapshotlocations.velero.io does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for olm_managed",
				"Add a spec descriptor for backup_storage_locations",
				"Add a spec descriptor for default_velero_plugins",
				"Add a spec descriptor for velero_feature_flags",
				"Add a spec descriptor for enable_restic",
				"Add a spec descriptor for volume_snapshot_locations",
				"Add CRD validation for spec field `volume_snapshot_locations` in Velero/v1alpha1",
				"Add CRD validation for spec field `olm_managed` in Velero/v1alpha1",
				"Add CRD validation for spec field `backup_storage_locations` in Velero/v1alpha1",
				"Add CRD validation for spec field `default_velero_plugins` in Velero/v1alpha1",
				"Add CRD validation for spec field `velero_feature_flags` in Velero/v1alpha1",
				"Add CRD validation for spec field `enable_restic` in Velero/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "odoo-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(odoo-operator.v0.0.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"postgresqlVolumeSize does not have a spec descriptor",
				"odooVolumeSize does not have a spec descriptor",
				"odoos.odoo-community.org does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for postgresqlVolumeSize",
				"Add a spec descriptor for odooVolumeSize",
				"Add CRD validation for spec field `postgresqlVolumeSize` in Odoo/v1alpha1",
				"Add CRD validation for spec field `odooVolumeSize` in Odoo/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "opendatahub-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(opendatahub-operator.v1.0.10) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"kfdefs.kfdef.apps.kubeflow.org\"])"
			],
			"scorecardErrors": [
				"kfdefs.kfdef.apps.kubeflow.org does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"repos does not have a spec descriptor",
				"applications does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `applications` in KfDef/v1",
				"Add CRD validation for spec field `repos` in KfDef/v1",
				"Add a spec descriptor for repos",
				"Add a spec descriptor for applications"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "openebs",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"openebsinstalltemplates.openebs.io\"])"
			],
			"scorecardSuggestions": [
				"Add CRD validation for OpenEBSInstallTemplate/v1alpha1"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "openshift-ibm-quantum-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(openshift-ibm-quantum-operator.v0.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"ibmqes.singhp11.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"error spec does not exist",
				"ibmqes.singhp11.io does not have a status descriptor"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"basic-check-spec",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "openshift-nfd-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"multipleArchitectures": [
				"amd64",
				"ppc64le",
				"s390x"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"nodefeaturediscoveries.nfd.openshift.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"nodefeaturediscoveries.nfd.openshift.io does not have a status descriptor",
				"namespace does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `namespace` in NodeFeatureDiscovery/v1alpha1",
				"Add a spec descriptor for namespace"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "openshift-qiskit-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(openshift-qiskit-operator.v0.2.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "opentelemetry-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(opentelemetry-operator.v0.21.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "opsmx-spinnaker-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(opsmx-spinnaker-operator.v1.21.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"opsmxspinnakeroperators.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"opsmxspinnakeroperators.charts.helm.k8s.io does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"serviceAccount does not have a spec descriptor",
				"spinnakerFeatureFlags does not have a spec descriptor",
				"gcs does not have a spec descriptor",
				"halyard does not have a spec descriptor",
				"ingress does not have a spec descriptor",
				"kubeConfig does not have a spec descriptor",
				"minio does not have a spec descriptor",
				"s3 does not have a spec descriptor",
				"ingressGate does not have a spec descriptor",
				"securityContext does not have a spec descriptor",
				"tolerations does not have a spec descriptor",
				"azs does not have a spec descriptor",
				"dockerRegistries does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"rbac does not have a spec descriptor",
				"redis does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for OpsmxSpinnakerOperator/v1alpha1",
				"Add a spec descriptor for serviceAccount",
				"Add a spec descriptor for spinnakerFeatureFlags",
				"Add a spec descriptor for gcs",
				"Add a spec descriptor for halyard",
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for kubeConfig",
				"Add a spec descriptor for minio",
				"Add a spec descriptor for s3",
				"Add a spec descriptor for ingressGate",
				"Add a spec descriptor for securityContext",
				"Add a spec descriptor for tolerations",
				"Add a spec descriptor for azs",
				"Add a spec descriptor for dockerRegistries",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for rbac",
				"Add a spec descriptor for redis"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "percona-server-mongodb-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(percona-server-mongodb-operator.v1.8.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"perconaservermongodbbackups.psmdb.percona.com\" \"perconaservermongodbrestores.psmdb.percona.com\" \"perconaservermongodbs.psmdb.percona.com\"])"
			],
			"scorecardErrors": [
				"allowUnsafeConfigurations does not have a spec descriptor",
				"upgradeOptions does not have a spec descriptor",
				"secrets does not have a spec descriptor",
				"backup does not have a spec descriptor",
				"pmm does not have a spec descriptor",
				"replsets does not have a spec descriptor",
				"sharding does not have a spec descriptor",
				"mongod does not have a spec descriptor",
				"crVersion does not have a spec descriptor",
				"image does not have a spec descriptor",
				"imagePullPolicy does not have a spec descriptor",
				"updateStrategy does not have a spec descriptor",
				"psmdbCluster does not have a spec descriptor",
				"storageName does not have a spec descriptor",
				"backupName does not have a spec descriptor",
				"clusterName does not have a spec descriptor",
				"perconaservermongodbs.psmdb.percona.com does not have a status descriptor",
				"perconaservermongodbbackups.psmdb.percona.com does not have a status descriptor",
				"perconaservermongodbrestores.psmdb.percona.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for PerconaServerMongoDB/v1-8-0",
				"Add CRD validation for PerconaServerMongoDBBackup/v1",
				"Add CRD validation for PerconaServerMongoDBRestore/v1",
				"Add a spec descriptor for allowUnsafeConfigurations",
				"Add a spec descriptor for upgradeOptions",
				"Add a spec descriptor for secrets",
				"Add a spec descriptor for backup",
				"Add a spec descriptor for pmm",
				"Add a spec descriptor for replsets",
				"Add a spec descriptor for sharding",
				"Add a spec descriptor for mongod",
				"Add a spec descriptor for crVersion",
				"Add a spec descriptor for image",
				"Add a spec descriptor for imagePullPolicy",
				"Add a spec descriptor for updateStrategy",
				"Add a spec descriptor for psmdbCluster",
				"Add a spec descriptor for storageName",
				"Add a spec descriptor for backupName",
				"Add a spec descriptor for clusterName"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "percona-xtradb-cluster-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(percona-xtradb-cluster-operator.v1.8.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"perconaxtradbbackups.pxc.percona.com\" \"perconaxtradbclusterbackups.pxc.percona.com\" \"perconaxtradbclusterrestores.pxc.percona.com\" \"perconaxtradbclusters.pxc.percona.com\"])"
			],
			"scorecardErrors": [
				"perconaxtradbclusters.pxc.percona.com does not have a status descriptor",
				"perconaxtradbclusterbackups.pxc.percona.com does not have a status descriptor",
				"perconaxtradbbackups.pxc.percona.com does not have a status descriptor",
				"perconaxtradbclusterrestores.pxc.percona.com does not have a status descriptor",
				"perconaxtradbclusterbackups.pxc.percona.com does not have a status descriptor",
				"perconaxtradbbackups.pxc.percona.com does not have a status descriptor",
				"perconaxtradbclusterrestores.pxc.percona.com does not have a status descriptor",
				"updateStrategy does not have a spec descriptor",
				"haproxy does not have a spec descriptor",
				"secretsName does not have a spec descriptor",
				"sslSecretName does not have a spec descriptor",
				"pxc does not have a spec descriptor",
				"proxysql does not have a spec descriptor",
				"backup does not have a spec descriptor",
				"sslInternalSecretName does not have a spec descriptor",
				"logCollectorSecretName does not have a spec descriptor",
				"upgradeOptions does not have a spec descriptor",
				"pmm does not have a spec descriptor",
				"crVersion does not have a spec descriptor",
				"vaultSecretName does not have a spec descriptor",
				"allowUnsafeConfigurations does not have a spec descriptor",
				"logcollector does not have a spec descriptor",
				"pxcCluster does not have a spec descriptor",
				"storageName does not have a spec descriptor",
				"pxcCluster does not have a spec descriptor",
				"storageName does not have a spec descriptor",
				"pxcCluster does not have a spec descriptor",
				"backupName does not have a spec descriptor",
				"pxcCluster does not have a spec descriptor",
				"storageName does not have a spec descriptor",
				"pxcCluster does not have a spec descriptor",
				"storageName does not have a spec descriptor",
				"pxcCluster does not have a spec descriptor",
				"backupName does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for PerconaXtraDBCluster/v1-8-0",
				"Add CRD validation for PerconaXtraDBClusterBackup/v1",
				"Add CRD validation for PerconaXtraDBBackup/v1alpha1",
				"Add CRD validation for PerconaXtraDBClusterRestore/v1",
				"Add CRD validation for PerconaXtraDBClusterBackup/v1",
				"Add CRD validation for PerconaXtraDBBackup/v1alpha1",
				"Add CRD validation for PerconaXtraDBClusterRestore/v1",
				"Add a spec descriptor for updateStrategy",
				"Add a spec descriptor for haproxy",
				"Add a spec descriptor for secretsName",
				"Add a spec descriptor for sslSecretName",
				"Add a spec descriptor for pxc",
				"Add a spec descriptor for proxysql",
				"Add a spec descriptor for backup",
				"Add a spec descriptor for sslInternalSecretName",
				"Add a spec descriptor for logCollectorSecretName",
				"Add a spec descriptor for upgradeOptions",
				"Add a spec descriptor for pmm",
				"Add a spec descriptor for crVersion",
				"Add a spec descriptor for vaultSecretName",
				"Add a spec descriptor for allowUnsafeConfigurations",
				"Add a spec descriptor for logcollector",
				"Add a spec descriptor for pxcCluster",
				"Add a spec descriptor for storageName",
				"Add a spec descriptor for pxcCluster",
				"Add a spec descriptor for storageName",
				"Add a spec descriptor for pxcCluster",
				"Add a spec descriptor for backupName",
				"Add a spec descriptor for pxcCluster",
				"Add a spec descriptor for storageName",
				"Add a spec descriptor for pxcCluster",
				"Add a spec descriptor for storageName",
				"Add a spec descriptor for pxcCluster",
				"Add a spec descriptor for backupName"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "planetscale",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(planetscale-operator.v0.1.8) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"psclusters.planetscale.com\"])"
			],
			"scorecardErrors": [
				"psclusters.planetscale.com does not have a status descriptor",
				"lockserver does not have a spec descriptor",
				"cells does not have a spec descriptor",
				"monitored does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for lockserver",
				"Add a spec descriptor for cells",
				"Add a spec descriptor for monitored",
				"Add CRD validation for PsCluster/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "podium-operator-bundle",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(podium-operator.v1.0.6) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"podia.podium.com\"])"
			],
			"scorecardErrors": [
				"podia.podium.com does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"password_salt does not have a spec descriptor",
				"admin_password_salt does not have a spec descriptor",
				"dokuwiki does not have a spec descriptor",
				"etherdraw does not have a spec descriptor",
				"wekan does not have a spec descriptor",
				"mozaik does not have a spec descriptor",
				"mindmaps does not have a spec descriptor",
				"jvb_node_port does not have a spec descriptor",
				"lets_encrypt does not have a spec descriptor",
				"drawio does not have a spec descriptor",
				"etherpad does not have a spec descriptor",
				"jitsi does not have a spec descriptor",
				"mattermost does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `drawio` in Podium/v1alpha1",
				"Add CRD validation for spec field `etherpad` in Podium/v1alpha1",
				"Add CRD validation for spec field `jitsi` in Podium/v1alpha1",
				"Add CRD validation for spec field `mindmaps` in Podium/v1alpha1",
				"Add CRD validation for spec field `wekan` in Podium/v1alpha1",
				"Add CRD validation for spec field `jvb_node_port` in Podium/v1alpha1",
				"Add CRD validation for spec field `password_salt` in Podium/v1alpha1",
				"Add CRD validation for spec field `admin_password_salt` in Podium/v1alpha1",
				"Add CRD validation for spec field `dokuwiki` in Podium/v1alpha1",
				"Add CRD validation for spec field `mattermost` in Podium/v1alpha1",
				"Add CRD validation for spec field `mozaik` in Podium/v1alpha1",
				"Add CRD validation for spec field `etherdraw` in Podium/v1alpha1",
				"Add CRD validation for spec field `lets_encrypt` in Podium/v1alpha1",
				"Add a spec descriptor for password_salt",
				"Add a spec descriptor for admin_password_salt",
				"Add a spec descriptor for dokuwiki",
				"Add a spec descriptor for etherdraw",
				"Add a spec descriptor for wekan",
				"Add a spec descriptor for mozaik",
				"Add a spec descriptor for mindmaps",
				"Add a spec descriptor for jvb_node_port",
				"Add a spec descriptor for lets_encrypt",
				"Add a spec descriptor for drawio",
				"Add a spec descriptor for etherpad",
				"Add a spec descriptor for jitsi",
				"Add a spec descriptor for mattermost"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "poison-pill-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(poison-pill.v0.0.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"poisonpillconfigs.poison-pill.medik8s.io does not have a status descriptor",
				"poisonpillremediations.poison-pill.medik8s.io does not have a status descriptor",
				"poisonpillremediationtemplates.poison-pill.medik8s.io does not have a status descriptor"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "portworx-essentials",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"storageclusters.core.libopenstorage.org\" \"storagenodes.core.libopenstorage.org\"])"
			],
			"scorecardErrors": [
				"error spec does not exist",
				"Owned CRDs do not have resources specified"
			],
			"scorecardFailingTests": [
				"basic-check-spec",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "postgresql",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"pgclusters.crunchydata.com\" \"pgpolicies.crunchydata.com\" \"pgreplicas.crunchydata.com\" \"pgtasks.crunchydata.com\"])"
			],
			"scorecardErrors": [
				"namespace does not have a spec descriptor",
				"BackrestStorage does not have a spec descriptor",
				"ReplicaStorage does not have a spec descriptor",
				"user does not have a spec descriptor",
				"podAntiAffinity does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `namespace` in Pgcluster/v1",
				"Add CRD validation for spec field `BackrestStorage` in Pgcluster/v1",
				"Add CRD validation for spec field `ReplicaStorage` in Pgcluster/v1",
				"Add CRD validation for spec field `podAntiAffinity` in Pgcluster/v1",
				"Add CRD validation for spec field `user` in Pgcluster/v1",
				"Add a spec descriptor for namespace",
				"Add a spec descriptor for BackrestStorage",
				"Add a spec descriptor for ReplicaStorage",
				"Add a spec descriptor for user",
				"Add a spec descriptor for podAntiAffinity"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "postgresql-operator-dev4devs-com",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"backups.postgresql.dev4devs.com\" \"databases.postgresql.dev4devs.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "prisma-cloud-compute-console-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(prisma-cloud-compute-console-operator.v1.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"twistlockconsoles.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"twistlockconsoles.charts.helm.k8s.io does not have a status descriptor",
				"DEFENDER_LISTENER_TYPE does not have a spec descriptor",
				"MANAGEMENT_PORT_HTTPS does not have a spec descriptor",
				"secrets does not have a spec descriptor",
				"CONSOLE_CN does not have a spec descriptor",
				"READ_ONLY_FS does not have a spec descriptor",
				"SCAP_ENABLED does not have a spec descriptor",
				"consoleImageName does not have a spec descriptor",
				"DATA_FOLDER does not have a spec descriptor",
				"RUN_CONSOLE_AS_ROOT does not have a spec descriptor",
				"HIGH_AVAILABILITY_PORT does not have a spec descriptor",
				"persistentVolumeStorage does not have a spec descriptor",
				"selinux-type does not have a spec descriptor",
				"twistlock_cfg does not have a spec descriptor",
				"HIGH_AVAILABILITY_ENABLED does not have a spec descriptor",
				"SELINUX_LABEL does not have a spec descriptor",
				"SYSTEMD_ENABLED does not have a spec descriptor",
				"persistentVolumeDataFolder does not have a spec descriptor",
				"persistentVolumeDataRecoveryFolder does not have a spec descriptor",
				"serviceType does not have a spec descriptor",
				"DEFENDER_CN does not have a spec descriptor",
				"HIGH_AVAILABILITY_STATE does not have a spec descriptor",
				"MANAGEMENT_PORT_HTTP does not have a spec descriptor",
				"namespace does not have a spec descriptor",
				"privileged does not have a spec descriptor",
				"COMMUNICATION_PORT does not have a spec descriptor",
				"DOCKER_SOCKET does not have a spec descriptor",
				"DOCKER_TWISTLOCK_TAG does not have a spec descriptor",
				"openshift does not have a spec descriptor",
				"DATA_RECOVERY_ENABLED does not have a spec descriptor",
				"DATA_RECOVERY_VOLUME does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for DEFENDER_LISTENER_TYPE",
				"Add a spec descriptor for MANAGEMENT_PORT_HTTPS",
				"Add a spec descriptor for secrets",
				"Add a spec descriptor for CONSOLE_CN",
				"Add a spec descriptor for READ_ONLY_FS",
				"Add a spec descriptor for SCAP_ENABLED",
				"Add a spec descriptor for consoleImageName",
				"Add a spec descriptor for DATA_FOLDER",
				"Add a spec descriptor for RUN_CONSOLE_AS_ROOT",
				"Add a spec descriptor for HIGH_AVAILABILITY_PORT",
				"Add a spec descriptor for persistentVolumeStorage",
				"Add a spec descriptor for selinux-type",
				"Add a spec descriptor for twistlock_cfg",
				"Add a spec descriptor for HIGH_AVAILABILITY_ENABLED",
				"Add a spec descriptor for SELINUX_LABEL",
				"Add a spec descriptor for SYSTEMD_ENABLED",
				"Add a spec descriptor for persistentVolumeDataFolder",
				"Add a spec descriptor for persistentVolumeDataRecoveryFolder",
				"Add a spec descriptor for serviceType",
				"Add a spec descriptor for DEFENDER_CN",
				"Add a spec descriptor for HIGH_AVAILABILITY_STATE",
				"Add a spec descriptor for MANAGEMENT_PORT_HTTP",
				"Add a spec descriptor for namespace",
				"Add a spec descriptor for privileged",
				"Add a spec descriptor for COMMUNICATION_PORT",
				"Add a spec descriptor for DOCKER_SOCKET",
				"Add a spec descriptor for DOCKER_TWISTLOCK_TAG",
				"Add a spec descriptor for openshift",
				"Add a spec descriptor for DATA_RECOVERY_ENABLED",
				"Add a spec descriptor for DATA_RECOVERY_VOLUME",
				"Add CRD validation for TwistlockConsole/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "proactive-node-scaling-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(proactive-node-scaling-operator.v0.3.5) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"nodescalingwatermarks.redhatcop.redhat.io does not have a status descriptor",
				"nodescalingwatermarks.redhatcop.redhat.io does not have a status descriptor",
				"nodeSelector does not have a spec descriptor",
				"tolerations does not have a spec descriptor",
				"watermarkPercentage does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"watermarkPercentage does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for tolerations",
				"Add a spec descriptor for watermarkPercentage",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for watermarkPercentage"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "prometheus",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(prometheusoperator.0.47.0) csv.metadata.Name prometheusoperator.0.47.0 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"prometheuses.monitoring.coreos.com does not have a status descriptor",
				"servicemonitors.monitoring.coreos.com does not have a status descriptor",
				"podmonitors.monitoring.coreos.com does not have a status descriptor",
				"alertmanagers.monitoring.coreos.com does not have a status descriptor",
				"prometheusrules.monitoring.coreos.com does not have a status descriptor",
				"alertmanagerconfigs.monitoring.coreos.com does not have a status descriptor",
				"alerting does not have a spec descriptor",
				"selector does not have a spec descriptor",
				"selector does not have a spec descriptor",
				"alertmanagerConfigSelector does not have a spec descriptor",
				"groups does not have a spec descriptor",
				"receivers does not have a spec descriptor",
				"route does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Warning: Value monitoring.coreos.com/v1, Kind=Probe: provided API should have an example annotation",
				"Warning: Value monitoring.coreos.com/v1, Kind=ThanosRuler: provided API should have an example annotation",
				"Add a spec descriptor for alerting",
				"Add a spec descriptor for selector",
				"Add a spec descriptor for selector",
				"Add a spec descriptor for alertmanagerConfigSelector",
				"Add a spec descriptor for groups",
				"Add a spec descriptor for receivers",
				"Add a spec descriptor for route"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "prometheus-exporter-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(prometheus-exporter-operator.v0.2.4) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"prometheusexporters.monitoring.3scale.net\"])"
			],
			"scorecardErrors": [
				"dbHost does not have a spec descriptor",
				"dbPort does not have a spec descriptor",
				"grafanaDashboard does not have a spec descriptor",
				"type does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"prometheusexporters.monitoring.3scale.net does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for dbHost",
				"Add a spec descriptor for dbPort",
				"Add a spec descriptor for grafanaDashboard",
				"Add a spec descriptor for type"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "pystol",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"pystolactions.pystol.org\"])"
			],
			"scorecardErrors": [
				"pystolactions.pystol.org does not have a status descriptor"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "radanalytics-spark",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"sparkapplications.radanalytics.io\" \"sparkclusters.radanalytics.io\" \"sparkhistoryservers.radanalytics.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"master does not have a spec descriptor",
				"worker does not have a spec descriptor",
				"driver does not have a spec descriptor",
				"executor does not have a spec descriptor",
				"mainApplicationFile does not have a spec descriptor",
				"mainClass does not have a spec descriptor",
				"logDirectory does not have a spec descriptor",
				"updateInterval does not have a spec descriptor",
				"retainedApplications does not have a spec descriptor",
				"customImage does not have a spec descriptor",
				"sparkConfiguration does not have a spec descriptor",
				"type does not have a spec descriptor",
				"expose does not have a spec descriptor",
				"sparkclusters.radanalytics.io does not have a status descriptor",
				"sparkapplications.radanalytics.io does not have a status descriptor",
				"sparkhistoryservers.radanalytics.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for master",
				"Add a spec descriptor for worker",
				"Add a spec descriptor for driver",
				"Add a spec descriptor for executor",
				"Add a spec descriptor for mainApplicationFile",
				"Add a spec descriptor for mainClass",
				"Add a spec descriptor for logDirectory",
				"Add a spec descriptor for updateInterval",
				"Add a spec descriptor for retainedApplications",
				"Add a spec descriptor for customImage",
				"Add a spec descriptor for sparkConfiguration",
				"Add a spec descriptor for type",
				"Add a spec descriptor for expose",
				"Add CRD validation for SparkCluster/v1",
				"Add CRD validation for SparkApplication/v1",
				"Add CRD validation for SparkHistoryServer/v1"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "redis-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"redis.redis.opstreelabs.in\"])"
			],
			"scorecardErrors": [
				"imageName does not have a spec descriptor",
				"redisExporterImage does not have a spec descriptor",
				"imagePullPolicy does not have a spec descriptor",
				"mode does not have a spec descriptor",
				"exporter does not have a spec descriptor",
				"redisConfig does not have a spec descriptor",
				"redisPassword does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"storage does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"redis.redis.opstreelabs.in does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for imageName",
				"Add a spec descriptor for redisExporterImage",
				"Add a spec descriptor for imagePullPolicy",
				"Add a spec descriptor for mode",
				"Add a spec descriptor for exporter",
				"Add a spec descriptor for redisConfig",
				"Add a spec descriptor for redisPassword",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for storage",
				"Add a spec descriptor for nodeSelector",
				"Add CRD validation for spec field `mode` in Redis/v1alpha1",
				"Add CRD validation for spec field `imageName` in Redis/v1alpha1",
				"Add CRD validation for spec field `resources` in Redis/v1alpha1",
				"Add CRD validation for spec field `storage` in Redis/v1alpha1",
				"Add CRD validation for spec field `nodeSelector` in Redis/v1alpha1",
				"Add CRD validation for spec field `exporter` in Redis/v1alpha1",
				"Add CRD validation for spec field `redisExporterImage` in Redis/v1alpha1",
				"Add CRD validation for spec field `imagePullPolicy` in Redis/v1alpha1",
				"Add CRD validation for spec field `redisConfig` in Redis/v1alpha1",
				"Add CRD validation for spec field `redisPassword` in Redis/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "reportportal-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(reportportal-operator.v0.0.8) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"reportportalrestores.rp5.reportportal.io does not have a status descriptor",
				"serviceapiservicemonitors.rp5.reportportal.io does not have a status descriptor"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "resource-locker-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(resource-locker-operator.v1.0.7) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"resourcelockers.redhatcop.redhat.io\"])"
			],
			"scorecardErrors": [
				"serviceAccountRef does not have a spec descriptor",
				"patches does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"resourcelockers.redhatcop.redhat.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for serviceAccountRef",
				"Add a spec descriptor for patches",
				"Add a spec descriptor for resources"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "rhoas-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(rhoas-operator.0.7.2) csv.metadata.Name rhoas-operator.0.7.2 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1"
			],
			"scorecardErrors": [
				"accessTokenSecretName does not have a spec descriptor",
				"kafkaId does not have a spec descriptor",
				"credentials does not have a spec descriptor",
				"accessTokenSecretName does not have a spec descriptor",
				"serviceAccountName does not have a spec descriptor",
				"serviceAccountDescription does not have a spec descriptor",
				"serviceAccountSecretName does not have a spec descriptor",
				"accessTokenSecretName does not have a spec descriptor",
				"kafkaconnections.rhoas.redhat.com does not have a status descriptor",
				"cloudserviceaccountrequests.rhoas.redhat.com does not have a status descriptor",
				"cloudservicesrequests.rhoas.redhat.com does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for accessTokenSecretName",
				"Add a spec descriptor for kafkaId",
				"Add a spec descriptor for credentials",
				"Add a spec descriptor for accessTokenSecretName",
				"Add a spec descriptor for serviceAccountName",
				"Add a spec descriptor for serviceAccountDescription",
				"Add a spec descriptor for serviceAccountSecretName",
				"Add a spec descriptor for accessTokenSecretName"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "ripsaw",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"benchmarks.ripsaw.cloudbulldozer.io\"])"
			],
			"scorecardErrors": [
				"cleanup does not have a spec descriptor",
				"workload does not have a spec descriptor",
				"benchmarks.ripsaw.cloudbulldozer.io does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for cleanup",
				"Add a spec descriptor for workload",
				"Add CRD validation for Benchmark/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "sealed-secrets-operator-helm",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(sealed-secrets-operator-helm.v0.0.2) csv.Spec.Icon not specified",
				"(sealed-secrets-operator-helm.v0.0.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"sealedsecretcontrollers.bitnami.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"sealedsecretcontrollers.bitnami.com does not have a status descriptor",
				"affinity does not have a spec descriptor",
				"secretName does not have a spec descriptor",
				"podAnnotations does not have a spec descriptor",
				"crd does not have a spec descriptor",
				"securityContext does not have a spec descriptor",
				"priorityClassName does not have a spec descriptor",
				"image does not have a spec descriptor",
				"controller does not have a spec descriptor",
				"ingress does not have a spec descriptor",
				"serviceAccount does not have a spec descriptor",
				"networkPolicy does not have a spec descriptor",
				"podLabels does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"tolerations does not have a spec descriptor",
				"rbac does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for SealedSecretController/v1alpha1",
				"Add a spec descriptor for affinity",
				"Add a spec descriptor for secretName",
				"Add a spec descriptor for podAnnotations",
				"Add a spec descriptor for crd",
				"Add a spec descriptor for securityContext",
				"Add a spec descriptor for priorityClassName",
				"Add a spec descriptor for image",
				"Add a spec descriptor for controller",
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for serviceAccount",
				"Add a spec descriptor for networkPolicy",
				"Add a spec descriptor for podLabels",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for tolerations",
				"Add a spec descriptor for rbac"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "seldon-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"seldondeployments.machinelearning.seldon.io\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "skydive-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"netflowcollectors.charts.helm.k8s.io\" \"skydives.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"exporter does not have a spec descriptor",
				"dataVolume does not have a spec descriptor",
				"elasticsearch does not have a spec descriptor",
				"exporter does not have a spec descriptor",
				"analyzer does not have a spec descriptor",
				"nameOverride does not have a spec descriptor",
				"persistence does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"image does not have a spec descriptor",
				"arch does not have a spec descriptor",
				"service does not have a spec descriptor",
				"agent does not have a spec descriptor",
				"etcd does not have a spec descriptor",
				"storage does not have a spec descriptor",
				"env does not have a spec descriptor",
				"netflowcollectors.charts.helm.k8s.io does not have a status descriptor",
				"skydives.charts.helm.k8s.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for exporter",
				"Add a spec descriptor for dataVolume",
				"Add a spec descriptor for elasticsearch",
				"Add a spec descriptor for exporter",
				"Add a spec descriptor for analyzer",
				"Add a spec descriptor for nameOverride",
				"Add a spec descriptor for persistence",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for image",
				"Add a spec descriptor for arch",
				"Add a spec descriptor for service",
				"Add a spec descriptor for agent",
				"Add a spec descriptor for etcd",
				"Add a spec descriptor for storage",
				"Add a spec descriptor for env",
				"Add CRD validation for NetflowCollector/v1alpha1",
				"Add CRD validation for Skydive/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "snapscheduler",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"snapshotschedules.snapscheduler.backube\"])"
			],
			"scorecardErrors": [
				"retention does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for retention"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "snyk-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(snyk-operator.v1.59.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"snykmonitors.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"image does not have a spec descriptor",
				"pvc does not have a spec descriptor",
				"initContainerImage does not have a spec descriptor",
				"snykmonitors.charts.helm.k8s.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for image",
				"Add a spec descriptor for pvc",
				"Add a spec descriptor for initContainerImage"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "sosreport-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(sosreport-operator.v0.0.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"tolerations does not have a spec descriptor",
				"sosreports.support.openshift.io does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for tolerations"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "spark-gcp",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(sparkoperator.v2.4.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"scheduledsparkapplications.sparkoperator.k8s.io\" \"sparkapplications.sparkoperator.k8s.io\"])"
			],
			"scorecardErrors": [
				"scheduledsparkapplications.sparkoperator.k8s.io does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"mode does not have a spec descriptor",
				"sparkVersion does not have a spec descriptor",
				"driver does not have a spec descriptor",
				"pythonVersion does not have a spec descriptor",
				"image does not have a spec descriptor",
				"imagePullPolicy does not have a spec descriptor",
				"mainApplicationFile does not have a spec descriptor",
				"restartPolicy does not have a spec descriptor",
				"executor does not have a spec descriptor",
				"type does not have a spec descriptor",
				"schedule does not have a spec descriptor",
				"concurrencyPolicy does not have a spec descriptor",
				"template does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for mode",
				"Add a spec descriptor for sparkVersion",
				"Add a spec descriptor for driver",
				"Add a spec descriptor for pythonVersion",
				"Add a spec descriptor for image",
				"Add a spec descriptor for imagePullPolicy",
				"Add a spec descriptor for mainApplicationFile",
				"Add a spec descriptor for restartPolicy",
				"Add a spec descriptor for executor",
				"Add a spec descriptor for type",
				"Add a spec descriptor for schedule",
				"Add a spec descriptor for concurrencyPolicy",
				"Add a spec descriptor for template"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "special-resource-operator",
			"hasValidatorErrors": true,
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorErrors": [
				"(special-resource-operator.v0.0.1) csv.Metadata.Annotations[\"categories\"] value  Drivers and plugins is not in the set of default categories"
			],
			"validatorWarnings": [
				"(special-resource-operator.v0.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"configuration does not have a spec descriptor",
				"dependsOn does not have a spec descriptor",
				"driverContainer does not have a spec descriptor",
				"namespace does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for configuration",
				"Add a spec descriptor for dependsOn",
				"Add a spec descriptor for driverContainer",
				"Add a spec descriptor for namespace"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "spinnaker-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(spinnaker-operator.v1.21.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"spinnakeroperators.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"spinnakeroperators.charts.helm.k8s.io does not have a status descriptor",
				"halyard does not have a spec descriptor",
				"minio does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"redis does not have a spec descriptor",
				"tolerations does not have a spec descriptor",
				"dockerRegistries does not have a spec descriptor",
				"kubeConfig does not have a spec descriptor",
				"rbac does not have a spec descriptor",
				"spinnakerFeatureFlags does not have a spec descriptor",
				"securityContext does not have a spec descriptor",
				"azs does not have a spec descriptor",
				"gcs does not have a spec descriptor",
				"ingress does not have a spec descriptor",
				"ingressGate does not have a spec descriptor",
				"s3 does not have a spec descriptor",
				"serviceAccount does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add CRD validation for SpinnakerOperator/v1alpha1",
				"Add a spec descriptor for halyard",
				"Add a spec descriptor for minio",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for redis",
				"Add a spec descriptor for tolerations",
				"Add a spec descriptor for dockerRegistries",
				"Add a spec descriptor for kubeConfig",
				"Add a spec descriptor for rbac",
				"Add a spec descriptor for spinnakerFeatureFlags",
				"Add a spec descriptor for securityContext",
				"Add a spec descriptor for azs",
				"Add a spec descriptor for gcs",
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for ingressGate",
				"Add a spec descriptor for s3",
				"Add a spec descriptor for serviceAccount"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "splunk",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"indexerclusters.enterprise.splunk.com\" \"licensemasters.enterprise.splunk.com\" \"searchheadclusters.enterprise.splunk.com\" \"sparks.enterprise.splunk.com\" \"standalones.enterprise.splunk.com\"])"
			],
			"scorecardErrors": [
				"indexerclusters.enterprise.splunk.com does not have a status descriptor",
				"licensemasters.enterprise.splunk.com does not have a status descriptor",
				"searchheadclusters.enterprise.splunk.com does not have a status descriptor",
				"sparks.enterprise.splunk.com does not have a status descriptor",
				"standalones.enterprise.splunk.com does not have a status descriptor"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "starter-kit-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(starter-kit-operator.v0.2.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"starterkits.devx.ibm.com\"])"
			],
			"scorecardErrors": [
				"templateRepo does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"starterkits.devx.ibm.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for templateRepo"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "strimzi-kafka-operator",
			"hasValidatorWarnings": false,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"scorecardErrors": [
				"kafka does not have a spec descriptor",
				"zookeeper does not have a spec descriptor",
				"entityOperator does not have a spec descriptor",
				"tls does not have a spec descriptor",
				"tls does not have a spec descriptor",
				"consumer does not have a spec descriptor",
				"producer does not have a spec descriptor",
				"http does not have a spec descriptor",
				"config does not have a spec descriptor",
				"authentication does not have a spec descriptor",
				"authorization does not have a spec descriptor",
				"config does not have a spec descriptor",
				"clusters does not have a spec descriptor",
				"mirrors does not have a spec descriptor",
				"goals does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for kafka",
				"Add a spec descriptor for zookeeper",
				"Add a spec descriptor for entityOperator",
				"Add a spec descriptor for tls",
				"Add a spec descriptor for tls",
				"Add a spec descriptor for consumer",
				"Add a spec descriptor for producer",
				"Add a spec descriptor for http",
				"Add a spec descriptor for config",
				"Add a spec descriptor for authentication",
				"Add a spec descriptor for authorization",
				"Add a spec descriptor for config",
				"Add a spec descriptor for clusters",
				"Add a spec descriptor for mirrors",
				"Add a spec descriptor for goals"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true,
			"hasInfraAnnotation": true
		},
		{
			"packageName": "syndesis",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(syndesisoperator.1.9.0) csv.metadata.Name syndesisoperator.1.9.0 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"syndesises.syndesis.io\"])"
			],
			"scorecardErrors": [
				"syndesises.syndesis.io does not have a status descriptor",
				"addons does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add CRD validation for Syndesis/v1beta1",
				"Add a spec descriptor for addons"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "t8c",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(t8c-operator.v7.22.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"xls.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"xls.charts.helm.k8s.io does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"global does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for global"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "teiid",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(teiid.v0.4.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"virtualdatabases.teiid.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "tidb-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"backups.pingcap.com\" \"backupschedules.pingcap.com\" \"restores.pingcap.com\" \"tidbclusterautoscalers.pingcap.com\" \"tidbclusters.pingcap.com\" \"tidbinitializers.pingcap.com\" \"tidbmonitors.pingcap.com\"])",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"tidbclusters.pingcap.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Warning: Value pingcap.com/v1alpha1, Kind=Backup: provided API should have an example annotation",
				"Warning: Value pingcap.com/v1alpha1, Kind=Restore: provided API should have an example annotation",
				"Warning: Value pingcap.com/v1alpha1, Kind=BackupSchedule: provided API should have an example annotation",
				"Warning: Value pingcap.com/v1alpha1, Kind=TidbMonitor: provided API should have an example annotation",
				"Warning: Value pingcap.com/v1alpha1, Kind=TidbInitializer: provided API should have an example annotation",
				"Warning: Value pingcap.com/v1alpha1, Kind=TidbClusterAutoScaler: provided API should have an example annotation"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "traefikee-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(traefikee-operator.v2.1.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"traefikees.containo.us\"])"
			],
			"scorecardErrors": [
				"traefikees.containo.us does not have a status descriptor",
				"cluster does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for cluster",
				"Add CRD validation for Traefikee/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "universal-crossplane",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(universal-crossplane.1.2.1-up.4) csv.metadata.Name universal-crossplane.1.2.1-up.4 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"configurations.pkg.crossplane.io does not have a status descriptor",
				"package does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for package",
				"Warning: Value pkg.crossplane.io/v1alpha1, Kind=Lock: provided API should have an example annotation",
				"Warning: Value pkg.crossplane.io/v1, Kind=ProviderRevision: provided API should have an example annotation",
				"Warning: Value pkg.crossplane.io/v1, Kind=Provider: provided API should have an example annotation",
				"Warning: Value apiextensions.crossplane.io/v1, Kind=CompositeResourceDefinition: provided API should have an example annotation",
				"Warning: Value apiextensions.crossplane.io/v1, Kind=Composition: provided API should have an example annotation",
				"Warning: Value pkg.crossplane.io/v1, Kind=ConfigurationRevision: provided API should have an example annotation",
				"Warning: Value pkg.crossplane.io/v1alpha1, Kind=ControllerConfig: provided API should have an example annotation"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "varnish-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(varnish-operator.v0.27.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"varnish does not have a spec descriptor",
				"vcl does not have a spec descriptor",
				"backend does not have a spec descriptor",
				"replicas does not have a spec descriptor",
				"service does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"varnishclusters.caching.ibm.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for varnish",
				"Add a spec descriptor for vcl",
				"Add a spec descriptor for backend",
				"Add a spec descriptor for replicas",
				"Add a spec descriptor for service"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "vault-helm",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(vault-helm.v0.0.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"vaults.vault.sdbrett.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "victoriametrics-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(victoriametrics-operator.v0.14.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"vmagents.operator.victoriametrics.com\" \"vmalertmanagers.operator.victoriametrics.com\" \"vmalerts.operator.victoriametrics.com\" \"vmclusters.operator.victoriametrics.com\" \"vmnodescrapes.operator.victoriametrics.com\" \"vmpodscrapes.operator.victoriametrics.com\" \"vmprobes.operator.victoriametrics.com\" \"vmrules.operator.victoriametrics.com\" \"vmservicescrapes.operator.victoriametrics.com\" \"vmsingles.operator.victoriametrics.com\" \"vmstaticscrapes.operator.victoriametrics.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"vmagents.operator.victoriametrics.com does not have a status descriptor",
				"vmalerts.operator.victoriametrics.com does not have a status descriptor",
				"vmalertmanagers.operator.victoriametrics.com does not have a status descriptor",
				"vmclusters.operator.victoriametrics.com does not have a status descriptor",
				"vmnodescrapes.operator.victoriametrics.com does not have a status descriptor",
				"vmpodscrapes.operator.victoriametrics.com does not have a status descriptor",
				"vmprobes.operator.victoriametrics.com does not have a status descriptor",
				"vmrules.operator.victoriametrics.com does not have a status descriptor",
				"vmservicescrapes.operator.victoriametrics.com does not have a status descriptor",
				"vmservicescrapes.operator.victoriametrics.com does not have a status descriptor",
				"vmsingles.operator.victoriametrics.com does not have a status descriptor",
				"vmstaticscrapes.operator.victoriametrics.com does not have a status descriptor",
				"serviceScrapeSelector does not have a spec descriptor",
				"staticScrapeSelector does not have a spec descriptor",
				"nodeScrapeSelector does not have a spec descriptor",
				"podScrapeSelector does not have a spec descriptor",
				"probeSelector does not have a spec descriptor",
				"remoteWrite does not have a spec descriptor",
				"additionalArgs does not have a spec descriptor",
				"ruleSelector does not have a spec descriptor",
				"datasource does not have a spec descriptor",
				"evaluationInterval does not have a spec descriptor",
				"notifiers does not have a spec descriptor",
				"remoteRead does not have a spec descriptor",
				"remoteWrite does not have a spec descriptor",
				"configRawYaml does not have a spec descriptor",
				"replicationFactor does not have a spec descriptor",
				"retentionPeriod does not have a spec descriptor",
				"vminsert does not have a spec descriptor",
				"vmselect does not have a spec descriptor",
				"vmstorage does not have a spec descriptor",
				"bearerTokenFile does not have a spec descriptor",
				"jobLabel does not have a spec descriptor",
				"relabelConfigs does not have a spec descriptor",
				"scrapeTimeout does not have a spec descriptor",
				"selector does not have a spec descriptor",
				"interval does not have a spec descriptor",
				"path does not have a spec descriptor",
				"port does not have a spec descriptor",
				"scheme does not have a spec descriptor",
				"targetLabels does not have a spec descriptor",
				"tlsConfig does not have a spec descriptor",
				"podMetricsEndpoints does not have a spec descriptor",
				"selector does not have a spec descriptor",
				"interval does not have a spec descriptor",
				"jobName does not have a spec descriptor",
				"module does not have a spec descriptor",
				"targets does not have a spec descriptor",
				"vmProberSpec does not have a spec descriptor",
				"groups does not have a spec descriptor",
				"endpoints does not have a spec descriptor",
				"selector does not have a spec descriptor",
				"selector does not have a spec descriptor",
				"discoveryRole does not have a spec descriptor",
				"endpoints does not have a spec descriptor",
				"namespaceSelector does not have a spec descriptor",
				"retentionPeriod does not have a spec descriptor",
				"storage does not have a spec descriptor",
				"removePvcAfterDelete does not have a spec descriptor",
				"jobName does not have a spec descriptor",
				"targetEndpoints does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for serviceScrapeSelector",
				"Add a spec descriptor for staticScrapeSelector",
				"Add a spec descriptor for nodeScrapeSelector",
				"Add a spec descriptor for podScrapeSelector",
				"Add a spec descriptor for probeSelector",
				"Add a spec descriptor for remoteWrite",
				"Add a spec descriptor for additionalArgs",
				"Add a spec descriptor for ruleSelector",
				"Add a spec descriptor for datasource",
				"Add a spec descriptor for evaluationInterval",
				"Add a spec descriptor for notifiers",
				"Add a spec descriptor for remoteRead",
				"Add a spec descriptor for remoteWrite",
				"Add a spec descriptor for configRawYaml",
				"Add a spec descriptor for replicationFactor",
				"Add a spec descriptor for retentionPeriod",
				"Add a spec descriptor for vminsert",
				"Add a spec descriptor for vmselect",
				"Add a spec descriptor for vmstorage",
				"Add a spec descriptor for bearerTokenFile",
				"Add a spec descriptor for jobLabel",
				"Add a spec descriptor for relabelConfigs",
				"Add a spec descriptor for scrapeTimeout",
				"Add a spec descriptor for selector",
				"Add a spec descriptor for interval",
				"Add a spec descriptor for path",
				"Add a spec descriptor for port",
				"Add a spec descriptor for scheme",
				"Add a spec descriptor for targetLabels",
				"Add a spec descriptor for tlsConfig",
				"Add a spec descriptor for podMetricsEndpoints",
				"Add a spec descriptor for selector",
				"Add a spec descriptor for interval",
				"Add a spec descriptor for jobName",
				"Add a spec descriptor for module",
				"Add a spec descriptor for targets",
				"Add a spec descriptor for vmProberSpec",
				"Add a spec descriptor for groups",
				"Add a spec descriptor for endpoints",
				"Add a spec descriptor for selector",
				"Add a spec descriptor for selector",
				"Add a spec descriptor for discoveryRole",
				"Add a spec descriptor for endpoints",
				"Add a spec descriptor for namespaceSelector",
				"Add a spec descriptor for retentionPeriod",
				"Add a spec descriptor for storage",
				"Add a spec descriptor for removePvcAfterDelete",
				"Add a spec descriptor for jobName",
				"Add a spec descriptor for targetEndpoints",
				"Add CRD validation for spec field `additionalArgs` in VMAgent/v1beta1"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "volume-expander-operator",
			"kindsDeprecateAPIs": [
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(volume-expander-operator.v0.1.9) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for ClusterRole: ([\"volume-expander-operator-metrics-reader\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "wso2am-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(wso2am-operator.v1.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"apimanagers.apim.wso2.com\"])"
			],
			"scorecardErrors": [
				"apimanagers.apim.wso2.com does not have a status descriptor",
				"pattern does not have a spec descriptor",
				"service does not have a spec descriptor",
				"useMysql does not have a spec descriptor",
				"profiles does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for pattern",
				"Add a spec descriptor for service",
				"Add a spec descriptor for useMysql",
				"Add a spec descriptor for profiles",
				"Add CRD validation for APIManager/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "yaks",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"source does not have a spec descriptor",
				"tests.yaks.citrusframework.org does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for source",
				"Warning: Value yaks.citrusframework.org/v1alpha1, Kind=Instance: provided API should have an example annotation"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		}
	],
	"flags": {
		"index-image": "registry.redhat.io/redhat/community-operator-index:v4.8",
		"limit": 0,
		"filter": "",
		"label": "",
		"labelValue": "",
		"outputPath": "/Users/camilamacedo/go/src/github.com/operator-framework/audit-1/testdata/reports/redhat_community_operator_index",
		"outputFormat": "all",
		"disableScorecard": false,
		"disableValidators": false
	},
	"IndexImageInspect": {
		"ID": "sha256:068bb7b5528e22b6aadd530032e26c91ad58b0f32650eee5b80fce0e1278345e",
		"Created": "2021-06-13T10:45:22.492361753Z",
		"Config": {
			"Labels": {
				"License": "GPLv2+",
				"architecture": "x86_64",
				"build-date": "2021-04-29T20:55:16.100332",
				"com.redhat.build-host": "cpt-1007.osbs.prod.upshift.rdu2.redhat.com",
				"com.redhat.component": "operator-registry-container",
				"com.redhat.index.delivery.distribution_scope": "prod",
				"com.redhat.index.delivery.version": "v4.5",
				"com.redhat.license_terms": "https://www.redhat.com/agreements",
				"description": "This is a component of OpenShift Operator Lifecycle Manager and is the base for operator catalog API containers.",
				"distribution-scope": "public",
				"io.buildah.version": "1.19.8",
				"io.k8s.description": "This is a component of OpenShift Operator Lifecycle Manager and is the base for operator catalog API containers.",
				"io.k8s.display-name": "OpenShift Operator Registry",
				"io.openshift.build.commit.id": "bc4c9f8f967736a6ff774c52845e8a3ed28e7072",
				"io.openshift.build.commit.url": "https://github.com/operator-framework/operator-registry/commit/bc4c9f8f967736a6ff774c52845e8a3ed28e7072",
				"io.openshift.build.source-location": "https://github.com/operator-framework/operator-registry",
				"io.openshift.maintainer.component": "OLM",
				"io.openshift.maintainer.product": "OpenShift Container Platform",
				"io.openshift.tags": "openshift,base",
				"maintainer": "Odin Team \u003caos-odin@redhat.com\u003e",
				"name": "openshift/ose-operator-registry",
				"operators.operatorframework.io.index.database.v1": "/database/index.db",
				"release": "202104291943.p0",
				"summary": "Operator Registry runs in a Kubernetes or OpenShift cluster to provide operator catalog data to Operator Lifecycle Manager.",
				"url": "https://access.redhat.com/containers/#/registry.access.redhat.com/openshift/ose-operator-registry/images/v4.5.0-202104291943.p0",
				"vcs-ref": "b53075b75bec220a302e43b091aabacc8660fe64",
				"vcs-type": "git",
				"vendor": "Red Hat, Inc.",
				"version": "v4.5.0"
			}
		}
	}
}