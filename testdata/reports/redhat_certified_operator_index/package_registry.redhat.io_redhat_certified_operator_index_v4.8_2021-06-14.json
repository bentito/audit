{
	"columns": [
		{
			"packageName": "aci-containers-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"acicontainersoperators.aci.ctrl\"])"
			],
			"scorecardErrors": [
				"config does not have a spec descriptor",
				"acicontainersoperators.aci.ctrl does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for AciContainersOperator/v1alpha1",
				"Add a spec descriptor for config"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "akka-cluster-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"akkaclusters.app.lightbend.com\"])"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `replicas` in AkkaCluster/v1alpha1",
				"Add CRD validation for spec field `template` in AkkaCluster/v1alpha1"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "alcide-kaudit-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(alcide-kaudit-operator.v0.0.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"kaudits.kaudit.alcide.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"kaudits.kaudit.alcide.com does not have a status descriptor",
				"aks does not have a spec descriptor",
				"ingress does not have a spec descriptor",
				"prometheus does not have a spec descriptor",
				"vault does not have a spec descriptor",
				"clusterName does not have a spec descriptor",
				"k8s does not have a spec descriptor",
				"k8sAuditEnvironment does not have a spec descriptor",
				"storage does not have a spec descriptor",
				"tls does not have a spec descriptor",
				"image does not have a spec descriptor",
				"kauditPolicyFile does not have a spec descriptor",
				"namespace does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"runOptions does not have a spec descriptor",
				"alcide does not have a spec descriptor",
				"aws does not have a spec descriptor",
				"gke does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `aks` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `k8sAuditEnvironment` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `namespace` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `resources` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `vault` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `clusterName` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `prometheus` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `runOptions` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `tls` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `ingress` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `k8s` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `kauditPolicyFile` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `alcide` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `aws` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `gke` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `image` in Kaudit/v1alpha1",
				"Add CRD validation for spec field `storage` in Kaudit/v1alpha1",
				"Add a spec descriptor for aks",
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for prometheus",
				"Add a spec descriptor for vault",
				"Add a spec descriptor for clusterName",
				"Add a spec descriptor for k8s",
				"Add a spec descriptor for k8sAuditEnvironment",
				"Add a spec descriptor for storage",
				"Add a spec descriptor for tls",
				"Add a spec descriptor for image",
				"Add a spec descriptor for kauditPolicyFile",
				"Add a spec descriptor for namespace",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for runOptions",
				"Add a spec descriptor for alcide",
				"Add a spec descriptor for aws",
				"Add a spec descriptor for gke"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "anaconda-team-edition",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorErrors": true,
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorErrors": [
				"(anaconda-team-edition.v6.1.3) csv.Spec.Maintainers elements should contain both name and email",
				"(anaconda-team-edition.v6.1.3) csv.Spec.Maintainers elements should contain both name and email"
			],
			"validatorWarnings": [
				"(anaconda-team-edition.v6.1.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"anacondateameditions.anaconda.com\"])"
			],
			"scorecardErrors": [
				"anacondateameditions.anaconda.com does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"route does not have a spec descriptor",
				"postgres does not have a spec descriptor",
				"proxy does not have a spec descriptor",
				"redis does not have a spec descriptor",
				"storage does not have a spec descriptor",
				"worker does not have a spec descriptor",
				"api does not have a spec descriptor",
				"dispatcher does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `redis` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `storage` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `worker` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `api` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `dispatcher` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `route` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `postgres` in AnacondaTeamEdition/v1beta1",
				"Add CRD validation for spec field `proxy` in AnacondaTeamEdition/v1beta1",
				"Add a spec descriptor for route",
				"Add a spec descriptor for postgres",
				"Add a spec descriptor for proxy",
				"Add a spec descriptor for redis",
				"Add a spec descriptor for storage",
				"Add a spec descriptor for worker",
				"Add a spec descriptor for api",
				"Add a spec descriptor for dispatcher"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "anchore-engine",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(anchore-engine-operator.v0.1.11) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"anchoreengines.anchore.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"anchoreengines.anchore.com does not have a status descriptor",
				"anchoreAnalyzer does not have a spec descriptor",
				"anchoreApi does not have a spec descriptor",
				"anchoreCatalog does not have a spec descriptor",
				"anchoreGlobal does not have a spec descriptor",
				"anchorePolicyEngine does not have a spec descriptor",
				"anchoreSimpleQueue does not have a spec descriptor",
				"ingress does not have a spec descriptor",
				"postgresql does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for anchoreAnalyzer",
				"Add a spec descriptor for anchoreApi",
				"Add a spec descriptor for anchoreCatalog",
				"Add a spec descriptor for anchoreGlobal",
				"Add a spec descriptor for anchorePolicyEngine",
				"Add a spec descriptor for anchoreSimpleQueue",
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for postgresql",
				"Add CRD validation for AnchoreEngine/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "anzo-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(anzo-operator.v1.1.103) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"anzos.anzo.cambridgesemantics.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "anzograph-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(anzograph-operator.v1.3.503) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"anzographs.anzograph.clusters.cambridgesemantics.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "anzounstructured-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(anzounstructured-operator.v1.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"anzounstructureds.anzounstructured.cambridgesemantics.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "appdynamics-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(appdynamics-operator.v0.6.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"adams.appdynamics.com\" \"clusteragents.appdynamics.com\" \"infravizs.appdynamics.com\"])"
			],
			"scorecardErrors": [
				"adams.appdynamics.com does not have a status descriptor",
				"clusteragents.appdynamics.com does not have a status descriptor",
				"infravizs.appdynamics.com does not have a status descriptor",
				"stdoutLogging does not have a spec descriptor",
				"enableDockerViz does not have a spec descriptor",
				"enableMasters does not have a spec descriptor",
				"netVizPort does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for stdoutLogging",
				"Add a spec descriptor for enableDockerViz",
				"Add a spec descriptor for enableMasters",
				"Add a spec descriptor for netVizPort"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "appranix-cps",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(appranix.v2.3.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"backupstoragelocations.aps.appranix.com\" \"volumesnapshotlocations.aps.appranix.com\"])"
			],
			"scorecardErrors": [
				"objectStorage does not have a spec descriptor",
				"backupstoragelocations.aps.appranix.com does not have a status descriptor",
				"volumesnapshotlocations.aps.appranix.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for objectStorage",
				"Add CRD validation for BackupStorageLocation/v1",
				"Add CRD validation for VolumeSnapshotLocation/v1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "appsody-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(appsody-operator.v0.6.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"appsodyapplications.appsody.dev\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "aqua-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(aqua-operator.v1.0.4) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"aquacsps.operator.aquasec.com\" \"aquadatabases.operator.aquasec.com\" \"aquaenforcers.operator.aquasec.com\" \"aquagateways.operator.aquasec.com\" \"aquascanners.operator.aquasec.com\" \"aquaservers.operator.aquasec.com\"])"
			],
			"scorecardErrors": [
				"enforcer does not have a spec descriptor",
				"adminPassword does not have a spec descriptor",
				"licenseToken does not have a spec descriptor",
				"runAsNonRoot does not have a spec descriptor",
				"database does not have a spec descriptor",
				"gateway does not have a spec descriptor",
				"server does not have a spec descriptor",
				"infra does not have a spec descriptor",
				"route does not have a spec descriptor",
				"infra does not have a spec descriptor",
				"deploy does not have a spec descriptor",
				"diskSize does not have a spec descriptor",
				"runAsNonRoot does not have a spec descriptor",
				"infra does not have a spec descriptor",
				"gateway does not have a spec descriptor",
				"token does not have a spec descriptor",
				"infra does not have a spec descriptor",
				"common does not have a spec descriptor",
				"externalDb does not have a spec descriptor",
				"deploy does not have a spec descriptor",
				"runAsNonRoot does not have a spec descriptor",
				"infra does not have a spec descriptor",
				"deploy does not have a spec descriptor",
				"login does not have a spec descriptor",
				"runAsNonRoot does not have a spec descriptor",
				"infra does not have a spec descriptor",
				"common does not have a spec descriptor",
				"externalDb does not have a spec descriptor",
				"deploy does not have a spec descriptor",
				"adminPassword does not have a spec descriptor",
				"licenseToken does not have a spec descriptor",
				"runAsNonRoot does not have a spec descriptor",
				"aquacsps.operator.aquasec.com does not have a status descriptor",
				"aquadatabases.operator.aquasec.com does not have a status descriptor",
				"aquaenforcers.operator.aquasec.com does not have a status descriptor",
				"aquagateways.operator.aquasec.com does not have a status descriptor",
				"aquascanners.operator.aquasec.com does not have a status descriptor",
				"aquaservers.operator.aquasec.com does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for enforcer",
				"Add a spec descriptor for adminPassword",
				"Add a spec descriptor for licenseToken",
				"Add a spec descriptor for runAsNonRoot",
				"Add a spec descriptor for database",
				"Add a spec descriptor for gateway",
				"Add a spec descriptor for server",
				"Add a spec descriptor for infra",
				"Add a spec descriptor for route",
				"Add a spec descriptor for infra",
				"Add a spec descriptor for deploy",
				"Add a spec descriptor for diskSize",
				"Add a spec descriptor for runAsNonRoot",
				"Add a spec descriptor for infra",
				"Add a spec descriptor for gateway",
				"Add a spec descriptor for token",
				"Add a spec descriptor for infra",
				"Add a spec descriptor for common",
				"Add a spec descriptor for externalDb",
				"Add a spec descriptor for deploy",
				"Add a spec descriptor for runAsNonRoot",
				"Add a spec descriptor for infra",
				"Add a spec descriptor for deploy",
				"Add a spec descriptor for login",
				"Add a spec descriptor for runAsNonRoot",
				"Add a spec descriptor for infra",
				"Add a spec descriptor for common",
				"Add a spec descriptor for externalDb",
				"Add a spec descriptor for deploy",
				"Add a spec descriptor for adminPassword",
				"Add a spec descriptor for licenseToken",
				"Add a spec descriptor for runAsNonRoot",
				"Add CRD validation for spec field `licenseToken` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `server` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `enforcer` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `adminPassword` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `route` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `runAsNonRoot` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `infra` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `database` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `gateway` in AquaCsp/v1alpha1",
				"Add CRD validation for spec field `infra` in AquaDatabase/v1alpha1",
				"Add CRD validation for spec field `deploy` in AquaDatabase/v1alpha1",
				"Add CRD validation for spec field `diskSize` in AquaDatabase/v1alpha1",
				"Add CRD validation for spec field `runAsNonRoot` in AquaDatabase/v1alpha1",
				"Add CRD validation for spec field `gateway` in AquaEnforcer/v1alpha1",
				"Add CRD validation for spec field `token` in AquaEnforcer/v1alpha1",
				"Add CRD validation for spec field `infra` in AquaEnforcer/v1alpha1",
				"Add CRD validation for spec field `infra` in AquaGateway/v1alpha1",
				"Add CRD validation for spec field `common` in AquaGateway/v1alpha1",
				"Add CRD validation for spec field `externalDb` in AquaGateway/v1alpha1",
				"Add CRD validation for spec field `deploy` in AquaGateway/v1alpha1",
				"Add CRD validation for spec field `runAsNonRoot` in AquaGateway/v1alpha1",
				"Add CRD validation for spec field `infra` in AquaScanner/v1alpha1",
				"Add CRD validation for spec field `deploy` in AquaScanner/v1alpha1",
				"Add CRD validation for spec field `login` in AquaScanner/v1alpha1",
				"Add CRD validation for spec field `runAsNonRoot` in AquaScanner/v1alpha1",
				"Add CRD validation for spec field `infra` in AquaServer/v1alpha1",
				"Add CRD validation for spec field `common` in AquaServer/v1alpha1",
				"Add CRD validation for spec field `externalDb` in AquaServer/v1alpha1",
				"Add CRD validation for spec field `deploy` in AquaServer/v1alpha1",
				"Add CRD validation for spec field `adminPassword` in AquaServer/v1alpha1",
				"Add CRD validation for spec field `licenseToken` in AquaServer/v1alpha1",
				"Add CRD validation for spec field `runAsNonRoot` in AquaServer/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "armory-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(armory-operator.v1.2.0-ubi) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"spinnakerservices.spinnaker.armory.io\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true
		},
		{
			"packageName": "as400rpc-operator",
			"kindsDeprecateAPIs": [
				"CRD",
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(as400rpc-operator.v0.0.5) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"as400rpcs.openlegacy.com\"]),ClusterRole: ([\"as400rpc-operator-metrics-reader\"]),"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "atomicorp-helm-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(atomicorp-helm-operator.v0.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"atomicorps.atomicorp.com\"])"
			],
			"scorecardErrors": [
				"atomicorps.atomicorp.com does not have a status descriptor",
				"imagePullSecrets does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"routes does not have a spec descriptor",
				"service does not have a spec descriptor",
				"image does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `routes` in Atomicorp/v1alpha1",
				"Add CRD validation for spec field `service` in Atomicorp/v1alpha1",
				"Add CRD validation for spec field `image` in Atomicorp/v1alpha1",
				"Add CRD validation for spec field `imagePullSecrets` in Atomicorp/v1alpha1",
				"Add CRD validation for spec field `resources` in Atomicorp/v1alpha1",
				"Add a spec descriptor for imagePullSecrets",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for routes",
				"Add a spec descriptor for service",
				"Add a spec descriptor for image"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "aws-event-sources-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(aws-sources-operator.v0.3.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"awseventsources.sources.triggermesh.com\"])"
			],
			"scorecardErrors": [
				"awseventsources.sources.triggermesh.com does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"adapters does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"podSecurityContext does not have a spec descriptor",
				"fullnameOverride does not have a spec descriptor",
				"image does not have a spec descriptor",
				"podAnnotations does not have a spec descriptor",
				"rbac does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"nameOverride does not have a spec descriptor",
				"securityContext does not have a spec descriptor",
				"affinity does not have a spec descriptor",
				"imagePullSecrets does not have a spec descriptor",
				"serviceAccount does not have a spec descriptor",
				"tolerations does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for AwsEventSources/v1alpha1",
				"Add a spec descriptor for adapters",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for podSecurityContext",
				"Add a spec descriptor for fullnameOverride",
				"Add a spec descriptor for image",
				"Add a spec descriptor for podAnnotations",
				"Add a spec descriptor for rbac",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for nameOverride",
				"Add a spec descriptor for securityContext",
				"Add a spec descriptor for affinity",
				"Add a spec descriptor for imagePullSecrets",
				"Add a spec descriptor for serviceAccount",
				"Add a spec descriptor for tolerations"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "bacula-operator2",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(bacula-operator.v0.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"baculae.bacula.baculasystems\"])"
			],
			"scorecardErrors": [
				"baculae.bacula.baculasystems does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"image does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"replicaCount does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"service does not have a spec descriptor",
				"tolerations does not have a spec descriptor",
				"affinity does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `affinity` in Bacula/v1",
				"Add CRD validation for spec field `image` in Bacula/v1",
				"Add CRD validation for spec field `nodeSelector` in Bacula/v1",
				"Add CRD validation for spec field `replicaCount` in Bacula/v1",
				"Add CRD validation for spec field `resources` in Bacula/v1",
				"Add CRD validation for spec field `service` in Bacula/v1",
				"Add CRD validation for spec field `tolerations` in Bacula/v1",
				"Add a spec descriptor for image",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for replicaCount",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for service",
				"Add a spec descriptor for tolerations",
				"Add a spec descriptor for affinity"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "behavior-analytics-services-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(behavior-analytics-services-operator.v1.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"airgappeddeployments.bas.ibm.com\" \"analyticsproxies.bas.ibm.com\" \"dashboards.bas.ibm.com\" \"deleteclusters.bas.ibm.com\" \"fulldeployments.bas.ibm.com\" \"generatekeys.bas.ibm.com\" \"storeforwardmetrics.bas.ibm.com\"])"
			],
			"scorecardErrors": [
				"airgappeddeployments.bas.ibm.com does not have a status descriptor",
				"analyticsproxies.bas.ibm.com does not have a status descriptor",
				"deleteclusters.bas.ibm.com does not have a status descriptor",
				"fulldeployments.bas.ibm.com does not have a status descriptor",
				"generatekeys.bas.ibm.com does not have a status descriptor",
				"storeforwardmetrics.bas.ibm.com does not have a status descriptor",
				"allowed_domains does not have a spec descriptor",
				"db_archive does not have a spec descriptor",
				"airgapped does not have a spec descriptor",
				"event_scheduler_frequency does not have a spec descriptor",
				"image_pull_secret does not have a spec descriptor",
				"postgres does not have a spec descriptor",
				"kafka does not have a spec descriptor",
				"env_type does not have a spec descriptor",
				"event_scheduler_frequency does not have a spec descriptor",
				"postgres does not have a spec descriptor",
				"env_type does not have a spec descriptor",
				"allowed_domains does not have a spec descriptor",
				"db_archive does not have a spec descriptor",
				"airgapped does not have a spec descriptor",
				"ibmproxyurl does not have a spec descriptor",
				"image_pull_secret does not have a spec descriptor",
				"kafka does not have a spec descriptor",
				"image_pull_secret does not have a spec descriptor",
				"prometheus_scheduler_frequency does not have a spec descriptor",
				"env_type does not have a spec descriptor",
				"airgapped does not have a spec descriptor",
				"ibmproxyurl does not have a spec descriptor",
				"postgres does not have a spec descriptor",
				"image_pull_secret does not have a spec descriptor",
				"kafka does not have a spec descriptor",
				"prometheus_metrics does not have a spec descriptor",
				"allowed_domains does not have a spec descriptor",
				"db_archive does not have a spec descriptor",
				"event_scheduler_frequency does not have a spec descriptor",
				"image_pull_secret does not have a spec descriptor",
				"env_type does not have a spec descriptor",
				"db_archive does not have a spec descriptor",
				"event_scheduler_frequency does not have a spec descriptor",
				"ibmproxyurl does not have a spec descriptor",
				"image_pull_secret does not have a spec descriptor",
				"postgres does not have a spec descriptor",
				"prometheus_scheduler_frequency does not have a spec descriptor",
				"prometheus_metrics does not have a spec descriptor",
				"enable_test_api does not have a spec descriptor",
				"image_pull_secret does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for allowed_domains",
				"Add a spec descriptor for db_archive",
				"Add a spec descriptor for airgapped",
				"Add a spec descriptor for event_scheduler_frequency",
				"Add a spec descriptor for image_pull_secret",
				"Add a spec descriptor for postgres",
				"Add a spec descriptor for kafka",
				"Add a spec descriptor for env_type",
				"Add a spec descriptor for event_scheduler_frequency",
				"Add a spec descriptor for postgres",
				"Add a spec descriptor for env_type",
				"Add a spec descriptor for allowed_domains",
				"Add a spec descriptor for db_archive",
				"Add a spec descriptor for airgapped",
				"Add a spec descriptor for ibmproxyurl",
				"Add a spec descriptor for image_pull_secret",
				"Add a spec descriptor for kafka",
				"Add a spec descriptor for image_pull_secret",
				"Add a spec descriptor for prometheus_scheduler_frequency",
				"Add a spec descriptor for env_type",
				"Add a spec descriptor for airgapped",
				"Add a spec descriptor for ibmproxyurl",
				"Add a spec descriptor for postgres",
				"Add a spec descriptor for image_pull_secret",
				"Add a spec descriptor for kafka",
				"Add a spec descriptor for prometheus_metrics",
				"Add a spec descriptor for allowed_domains",
				"Add a spec descriptor for db_archive",
				"Add a spec descriptor for event_scheduler_frequency",
				"Add a spec descriptor for image_pull_secret",
				"Add a spec descriptor for env_type",
				"Add a spec descriptor for db_archive",
				"Add a spec descriptor for event_scheduler_frequency",
				"Add a spec descriptor for ibmproxyurl",
				"Add a spec descriptor for image_pull_secret",
				"Add a spec descriptor for postgres",
				"Add a spec descriptor for prometheus_scheduler_frequency",
				"Add a spec descriptor for prometheus_metrics",
				"Add a spec descriptor for enable_test_api",
				"Add a spec descriptor for image_pull_secret",
				"Add CRD validation for spec field `kafka` in AirgappedDeployment/v1",
				"Add CRD validation for spec field `env_type` in AirgappedDeployment/v1",
				"Add CRD validation for spec field `allowed_domains` in AirgappedDeployment/v1",
				"Add CRD validation for spec field `db_archive` in AirgappedDeployment/v1",
				"Add CRD validation for spec field `airgapped` in AirgappedDeployment/v1",
				"Add CRD validation for spec field `event_scheduler_frequency` in AirgappedDeployment/v1",
				"Add CRD validation for spec field `image_pull_secret` in AirgappedDeployment/v1",
				"Add CRD validation for spec field `postgres` in AirgappedDeployment/v1",
				"Add CRD validation for spec field `allowed_domains` in AnalyticsProxy/v1",
				"Add CRD validation for spec field `airgapped` in AnalyticsProxy/v1",
				"Add CRD validation for spec field `ibmproxyurl` in AnalyticsProxy/v1",
				"Add CRD validation for spec field `image_pull_secret` in AnalyticsProxy/v1",
				"Add CRD validation for spec field `db_archive` in AnalyticsProxy/v1",
				"Add CRD validation for spec field `event_scheduler_frequency` in AnalyticsProxy/v1",
				"Add CRD validation for spec field `postgres` in AnalyticsProxy/v1",
				"Add CRD validation for spec field `kafka` in AnalyticsProxy/v1",
				"Add CRD validation for spec field `env_type` in AnalyticsProxy/v1",
				"Add CRD validation for spec field `image_pull_secret` in DeleteCluster/v1",
				"Add CRD validation for spec field `ibmproxyurl` in FullDeployment/v1",
				"Add CRD validation for spec field `image_pull_secret` in FullDeployment/v1",
				"Add CRD validation for spec field `postgres` in FullDeployment/v1",
				"Add CRD validation for spec field `env_type` in FullDeployment/v1",
				"Add CRD validation for spec field `allowed_domains` in FullDeployment/v1",
				"Add CRD validation for spec field `airgapped` in FullDeployment/v1",
				"Add CRD validation for spec field `event_scheduler_frequency` in FullDeployment/v1",
				"Add CRD validation for spec field `prometheus_metrics` in FullDeployment/v1",
				"Add CRD validation for spec field `db_archive` in FullDeployment/v1",
				"Add CRD validation for spec field `kafka` in FullDeployment/v1",
				"Add CRD validation for spec field `prometheus_scheduler_frequency` in FullDeployment/v1",
				"Add CRD validation for spec field `image_pull_secret` in GenerateKey/v1",
				"Add CRD validation for spec field `event_scheduler_frequency` in StoreForwardMetric/v1",
				"Add CRD validation for spec field `ibmproxyurl` in StoreForwardMetric/v1",
				"Add CRD validation for spec field `image_pull_secret` in StoreForwardMetric/v1",
				"Add CRD validation for spec field `postgres` in StoreForwardMetric/v1",
				"Add CRD validation for spec field `prometheus_scheduler_frequency` in StoreForwardMetric/v1",
				"Add CRD validation for spec field `prometheus_metrics` in StoreForwardMetric/v1",
				"Add CRD validation for spec field `env_type` in StoreForwardMetric/v1",
				"Add CRD validation for spec field `db_archive` in StoreForwardMetric/v1",
				"Add CRD validation for spec field `enable_test_api` in Dashboard/v1",
				"Add CRD validation for spec field `image_pull_secret` in Dashboard/v1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "blackduck-connector-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorErrors": true,
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorErrors": [
				"(blackduck-connector-operator.v1.0.0) csv.Spec.Maintainers elements should contain both name and email"
			],
			"validatorWarnings": [
				"(blackduck-connector-operator.v1.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"blackduckconnectors.charts.synopsys.com\"])"
			],
			"scorecardErrors": [
				"registry does not have a spec descriptor",
				"blackduck does not have a spec descriptor",
				"fullnameOverride does not have a spec descriptor",
				"imageProcessor does not have a spec descriptor",
				"imagePullSecrets does not have a spec descriptor",
				"podProcessor does not have a spec descriptor",
				"prometheus does not have a spec descriptor",
				"core does not have a spec descriptor",
				"externalBlackDuck does not have a spec descriptor",
				"imageGetter does not have a spec descriptor",
				"imageTag does not have a spec descriptor",
				"nameOverride does not have a spec descriptor",
				"scanner does not have a spec descriptor",
				"status does not have a spec descriptor",
				"artifactoryProcessor does not have a spec descriptor",
				"processor does not have a spec descriptor",
				"quayProcessor does not have a spec descriptor",
				"securedRegistries does not have a spec descriptor",
				"blackduckconnectors.charts.synopsys.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for registry",
				"Add a spec descriptor for blackduck",
				"Add a spec descriptor for fullnameOverride",
				"Add a spec descriptor for imageProcessor",
				"Add a spec descriptor for imagePullSecrets",
				"Add a spec descriptor for podProcessor",
				"Add a spec descriptor for prometheus",
				"Add a spec descriptor for core",
				"Add a spec descriptor for externalBlackDuck",
				"Add a spec descriptor for imageGetter",
				"Add a spec descriptor for imageTag",
				"Add a spec descriptor for nameOverride",
				"Add a spec descriptor for scanner",
				"Add a spec descriptor for status",
				"Add a spec descriptor for artifactoryProcessor",
				"Add a spec descriptor for processor",
				"Add a spec descriptor for quayProcessor",
				"Add a spec descriptor for securedRegistries",
				"Add CRD validation for spec field `imageGetter` in BlackduckConnector/v1alpha1",
				"Add CRD validation for spec field `imageProcessor` in BlackduckConnector/v1alpha1",
				"Add CRD validation for spec field `scanner` in BlackduckConnector/v1alpha1",
				"Add CRD validation for spec field `status` in BlackduckConnector/v1alpha1",
				"Add CRD validation for spec field `core` in BlackduckConnector/v1alpha1",
				"Add CRD validation for spec field `imageTag` in BlackduckConnector/v1alpha1",
				"Add CRD validation for spec field `prometheus` in BlackduckConnector/v1alpha1",
				"Add CRD validation for spec field `artifactoryProcessor` in BlackduckConnector/v1alpha1",
				"Add CRD validation for spec field `nameOverride` in BlackduckConnector/v1alpha1",
				"Add CRD validation for spec field `processor` in BlackduckConnector/v1alpha1",
				"Add CRD validation for spec field `quayProcessor` in BlackduckConnector/v1alpha1",
				"Add CRD validation for spec field `registry` in BlackduckConnector/v1alpha1",
				"Add CRD validation for spec field `blackduck` in BlackduckConnector/v1alpha1",
				"Add CRD validation for spec field `fullnameOverride` in BlackduckConnector/v1alpha1",
				"Add CRD validation for spec field `imagePullSecrets` in BlackduckConnector/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "can-operator",
			"kindsDeprecateAPIs": [
				"CRD",
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(can-operator.v0.0.6) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"cans.can.avanseus.com\"]),ClusterRole: ([\"can-operator-metrics-reader\"]),"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"size does not have a spec descriptor",
				"cans.can.avanseus.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for size",
				"Add CRD validation for spec field `size` in CAN/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "cert-manager-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(cert-manager-operator.v0.15.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"certmanagers.operator.cert-manager.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"certmanagers.operator.cert-manager.io does not have a status descriptor"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "cic-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(cic-operator.v1.7.6) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"citrixingresscontrollers.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"license does not have a spec descriptor",
				"logLevel does not have a spec descriptor",
				"nodeWatch does not have a spec descriptor",
				"nsVIP does not have a spec descriptor",
				"cic does not have a spec descriptor",
				"ingressClass does not have a spec descriptor",
				"openshift does not have a spec descriptor",
				"defaultSSLCert does not have a spec descriptor",
				"nsNamespace does not have a spec descriptor",
				"loginFileName does not have a spec descriptor",
				"nsProtocol does not have a spec descriptor",
				"nsIP does not have a spec descriptor",
				"nsPort does not have a spec descriptor",
				"exporter does not have a spec descriptor",
				"kubernetesURL does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"citrixingresscontrollers.charts.helm.k8s.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `kubernetesURL` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `license` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsIP` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsProtocol` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsVIP` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `cic` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `defaultSSLCert` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `exporter` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `ingressClass` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `loginFileName` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsNamespace` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsPort` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `logLevel` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nodeWatch` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `openshift` in CitrixIngressController/v1alpha1",
				"Add a spec descriptor for license",
				"Add a spec descriptor for logLevel",
				"Add a spec descriptor for nodeWatch",
				"Add a spec descriptor for nsVIP",
				"Add a spec descriptor for cic",
				"Add a spec descriptor for ingressClass",
				"Add a spec descriptor for openshift",
				"Add a spec descriptor for defaultSSLCert",
				"Add a spec descriptor for nsNamespace",
				"Add a spec descriptor for loginFileName",
				"Add a spec descriptor for nsProtocol",
				"Add a spec descriptor for nsIP",
				"Add a spec descriptor for nsPort",
				"Add a spec descriptor for exporter",
				"Add a spec descriptor for kubernetesURL"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "cic-operator-with-crds",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(citrix-api-gateway-operator.v0.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"authpolicies.citrix.com\" \"citrixingresscontrollers.charts.helm.k8s.io\" \"httproutes.citrix.com\" \"listeners.citrix.com\" \"ratelimits.citrix.com\" \"rewritepolicies.citrix.com\" \"vips.citrix.com\"])",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"ingressClass does not have a spec descriptor",
				"loginFileName does not have a spec descriptor",
				"cic does not have a spec descriptor",
				"nsIP does not have a spec descriptor",
				"nsPort does not have a spec descriptor",
				"nsVIP does not have a spec descriptor",
				"openshift does not have a spec descriptor",
				"defaultSSLCert does not have a spec descriptor",
				"exporter does not have a spec descriptor",
				"kubernetesURL does not have a spec descriptor",
				"nsNamespace does not have a spec descriptor",
				"license does not have a spec descriptor",
				"logLevel does not have a spec descriptor",
				"nodeWatch does not have a spec descriptor",
				"nsProtocol does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"citrixingresscontrollers.charts.helm.k8s.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for ingressClass",
				"Add a spec descriptor for loginFileName",
				"Add a spec descriptor for cic",
				"Add a spec descriptor for nsIP",
				"Add a spec descriptor for nsPort",
				"Add a spec descriptor for nsVIP",
				"Add a spec descriptor for openshift",
				"Add a spec descriptor for defaultSSLCert",
				"Add a spec descriptor for exporter",
				"Add a spec descriptor for kubernetesURL",
				"Add a spec descriptor for nsNamespace",
				"Add a spec descriptor for license",
				"Add a spec descriptor for logLevel",
				"Add a spec descriptor for nodeWatch",
				"Add a spec descriptor for nsProtocol",
				"Add CRD validation for spec field `nsNamespace` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `defaultSSLCert` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `ingressClass` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `kubernetesURL` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `license` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `logLevel` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `loginFileName` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsIP` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsPort` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsVIP` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `cic` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `exporter` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nodeWatch` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsProtocol` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `openshift` in CitrixIngressController/v1alpha1",
				"Warning: Value citrix.com/v1beta1, Kind=ratelimit: provided API should have an example annotation",
				"Warning: Value citrix.com/v1, Kind=vip: provided API should have an example annotation",
				"Warning: Value citrix.com/v1, Kind=rewritepolicy: provided API should have an example annotation",
				"Warning: Value citrix.com/v1beta1, Kind=authpolicy: provided API should have an example annotation",
				"Warning: Value citrix.com/v1alpha1, Kind=HTTPRoute: provided API should have an example annotation",
				"Warning: Value citrix.com/v1alpha1, Kind=Listener: provided API should have an example annotation"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "citrix-adc-istio-ingress-gateway-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(citrix-adc-istio-ingress-gateway-operator.v0.9.5) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"citrix-adc-istio-ingress-gateways.citrix.citrix.com\"])"
			],
			"scorecardErrors": [
				"ingressGateway does not have a spec descriptor",
				"istioPilot does not have a spec descriptor",
				"metricExporter does not have a spec descriptor",
				"xDSAdaptor does not have a spec descriptor",
				"ADMSettings does not have a spec descriptor",
				"certProvider does not have a spec descriptor",
				"citrixCPX does not have a spec descriptor",
				"coe does not have a spec descriptor",
				"citrix-adc-istio-ingress-gateways.citrix.citrix.com does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for ingressGateway",
				"Add a spec descriptor for istioPilot",
				"Add a spec descriptor for metricExporter",
				"Add a spec descriptor for xDSAdaptor",
				"Add a spec descriptor for ADMSettings",
				"Add a spec descriptor for certProvider",
				"Add a spec descriptor for citrixCPX",
				"Add a spec descriptor for coe",
				"Add CRD validation for spec field `istioPilot` in Citrix-adc-istio-ingress-gateway/v1alpha1",
				"Add CRD validation for spec field `metricExporter` in Citrix-adc-istio-ingress-gateway/v1alpha1",
				"Add CRD validation for spec field `xDSAdaptor` in Citrix-adc-istio-ingress-gateway/v1alpha1",
				"Add CRD validation for spec field `ADMSettings` in Citrix-adc-istio-ingress-gateway/v1alpha1",
				"Add CRD validation for spec field `certProvider` in Citrix-adc-istio-ingress-gateway/v1alpha1",
				"Add CRD validation for spec field `citrixCPX` in Citrix-adc-istio-ingress-gateway/v1alpha1",
				"Add CRD validation for spec field `coe` in Citrix-adc-istio-ingress-gateway/v1alpha1",
				"Add CRD validation for spec field `ingressGateway` in Citrix-adc-istio-ingress-gateway/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "citrix-cpx-istio-sidecar-injector-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(citrix-cpx-istio-sidecar-injector-operator.v0.9.5) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"citrix-cpx-istio-sidecar-injectors.citrix.citrix.com\"])"
			],
			"scorecardErrors": [
				"sidecarWebHook does not have a spec descriptor",
				"webhook does not have a spec descriptor",
				"xDSAdaptor does not have a spec descriptor",
				"ADMSettings does not have a spec descriptor",
				"certProvider does not have a spec descriptor",
				"coe does not have a spec descriptor",
				"cpxProxy does not have a spec descriptor",
				"istioPilot does not have a spec descriptor",
				"citrix-cpx-istio-sidecar-injectors.citrix.citrix.com does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for sidecarWebHook",
				"Add a spec descriptor for webhook",
				"Add a spec descriptor for xDSAdaptor",
				"Add a spec descriptor for ADMSettings",
				"Add a spec descriptor for certProvider",
				"Add a spec descriptor for coe",
				"Add a spec descriptor for cpxProxy",
				"Add a spec descriptor for istioPilot",
				"Add CRD validation for spec field `coe` in Citrix-cpx-istio-sidecar-injector/v1alpha1",
				"Add CRD validation for spec field `cpxProxy` in Citrix-cpx-istio-sidecar-injector/v1alpha1",
				"Add CRD validation for spec field `istioPilot` in Citrix-cpx-istio-sidecar-injector/v1alpha1",
				"Add CRD validation for spec field `sidecarWebHook` in Citrix-cpx-istio-sidecar-injector/v1alpha1",
				"Add CRD validation for spec field `webhook` in Citrix-cpx-istio-sidecar-injector/v1alpha1",
				"Add CRD validation for spec field `xDSAdaptor` in Citrix-cpx-istio-sidecar-injector/v1alpha1",
				"Add CRD validation for spec field `ADMSettings` in Citrix-cpx-istio-sidecar-injector/v1alpha1",
				"Add CRD validation for spec field `certProvider` in Citrix-cpx-istio-sidecar-injector/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "citrix-cpx-with-ingress-controller-operator",
			"kindsDeprecateAPIs": [
				"CRD",
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(citrix-cpx-with-ingress-controller-operator.v1.10.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"citrixcpxwithingresscontrollers.citrix.com\"]),ClusterRole: ([\"citrix-cpx-with-ingress-controller-operator-metrics-reader\"]),"
			],
			"scorecardErrors": [
				"kubernetesURL does not have a spec descriptor",
				"namespaceLabels does not have a spec descriptor",
				"serviceType does not have a spec descriptor",
				"cpxBgpRouter does not have a spec descriptor",
				"coeConfig does not have a spec descriptor",
				"pullPolicy does not have a spec descriptor",
				"ingressClass does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"ingressIP does not have a spec descriptor",
				"aws does not have a spec descriptor",
				"serviceAnnotations does not have a spec descriptor",
				"logLevel does not have a spec descriptor",
				"logProxy does not have a spec descriptor",
				"entityPrefix does not have a spec descriptor",
				"crds does not have a spec descriptor",
				"bgpSettings does not have a spec descriptor",
				"nsIP does not have a spec descriptor",
				"sslCertManagedByAWS does not have a spec descriptor",
				"image does not have a spec descriptor",
				"ipam does not have a spec descriptor",
				"license does not have a spec descriptor",
				"openshift does not have a spec descriptor",
				"nsProtocol does not have a spec descriptor",
				"mgmtHttpPort does not have a spec descriptor",
				"ADMSettings does not have a spec descriptor",
				"cic does not have a spec descriptor",
				"nsGateway does not have a spec descriptor",
				"mgmtHttpsPort does not have a spec descriptor",
				"defaultSSLCertSecret does not have a spec descriptor",
				"serviceAccount does not have a spec descriptor",
				"exporter does not have a spec descriptor",
				"routeLabels does not have a spec descriptor",
				"cicSettings does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for kubernetesURL",
				"Add a spec descriptor for namespaceLabels",
				"Add a spec descriptor for serviceType",
				"Add a spec descriptor for cpxBgpRouter",
				"Add a spec descriptor for coeConfig",
				"Add a spec descriptor for pullPolicy",
				"Add a spec descriptor for ingressClass",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for ingressIP",
				"Add a spec descriptor for aws",
				"Add a spec descriptor for serviceAnnotations",
				"Add a spec descriptor for logLevel",
				"Add a spec descriptor for logProxy",
				"Add a spec descriptor for entityPrefix",
				"Add a spec descriptor for crds",
				"Add a spec descriptor for bgpSettings",
				"Add a spec descriptor for nsIP",
				"Add a spec descriptor for sslCertManagedByAWS",
				"Add a spec descriptor for image",
				"Add a spec descriptor for ipam",
				"Add a spec descriptor for license",
				"Add a spec descriptor for openshift",
				"Add a spec descriptor for nsProtocol",
				"Add a spec descriptor for mgmtHttpPort",
				"Add a spec descriptor for ADMSettings",
				"Add a spec descriptor for cic",
				"Add a spec descriptor for nsGateway",
				"Add a spec descriptor for mgmtHttpsPort",
				"Add a spec descriptor for defaultSSLCertSecret",
				"Add a spec descriptor for serviceAccount",
				"Add a spec descriptor for exporter",
				"Add a spec descriptor for routeLabels",
				"Add a spec descriptor for cicSettings",
				"Add CRD validation for CitrixCpxWithIngressController/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "citrix-ingress-controller-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(citrix-ingress-controller-operator.v1.13.20) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"citrixingresscontrollers.citrix.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"citrixingresscontrollers.citrix.com does not have a status descriptor",
				"defaultSSLCertSecret does not have a spec descriptor",
				"nsPort does not have a spec descriptor",
				"podIPsforServiceGroupMembers does not have a spec descriptor",
				"ipam does not have a spec descriptor",
				"logProxy does not have a spec descriptor",
				"coeConfig does not have a spec descriptor",
				"image does not have a spec descriptor",
				"license does not have a spec descriptor",
				"nsIP does not have a spec descriptor",
				"nsSNIPS does not have a spec descriptor",
				"serviceClass does not have a spec descriptor",
				"setAsDefaultIngressClass does not have a spec descriptor",
				"ingressClass does not have a spec descriptor",
				"namespaceLabels does not have a spec descriptor",
				"nsCookieVersion does not have a spec descriptor",
				"openshift does not have a spec descriptor",
				"tolerations does not have a spec descriptor",
				"crds does not have a spec descriptor",
				"entityPrefix does not have a spec descriptor",
				"ignoreNodeExternalIP does not have a spec descriptor",
				"nodeWatch does not have a spec descriptor",
				"nsProtocol does not have a spec descriptor",
				"kubernetesURL does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"serviceAccount does not have a spec descriptor",
				"adcCredentialSecret does not have a spec descriptor",
				"logLevel does not have a spec descriptor",
				"nsHTTP2ServerSide does not have a spec descriptor",
				"nsVIP does not have a spec descriptor",
				"routeLabels does not have a spec descriptor",
				"exporter does not have a spec descriptor",
				"pullPolicy does not have a spec descriptor",
				"updateIngressStatus does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `coeConfig` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `ignoreNodeExternalIP` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `updateIngressStatus` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `adcCredentialSecret` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `defaultSSLCertSecret` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsVIP` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `openshift` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsIP` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsSNIPS` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsPort` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsProtocol` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `podIPsforServiceGroupMembers` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `entityPrefix` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `kubernetesURL` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `logLevel` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsCookieVersion` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `namespaceLabels` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `pullPolicy` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `tolerations` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `routeLabels` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `serviceClass` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `setAsDefaultIngressClass` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `crds` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `exporter` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `ipam` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nodeSelector` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `image` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `license` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `serviceAccount` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `ingressClass` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `logProxy` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nodeWatch` in CitrixIngressController/v1alpha1",
				"Add CRD validation for spec field `nsHTTP2ServerSide` in CitrixIngressController/v1alpha1",
				"Add a spec descriptor for defaultSSLCertSecret",
				"Add a spec descriptor for nsPort",
				"Add a spec descriptor for podIPsforServiceGroupMembers",
				"Add a spec descriptor for ipam",
				"Add a spec descriptor for logProxy",
				"Add a spec descriptor for coeConfig",
				"Add a spec descriptor for image",
				"Add a spec descriptor for license",
				"Add a spec descriptor for nsIP",
				"Add a spec descriptor for nsSNIPS",
				"Add a spec descriptor for serviceClass",
				"Add a spec descriptor for setAsDefaultIngressClass",
				"Add a spec descriptor for ingressClass",
				"Add a spec descriptor for namespaceLabels",
				"Add a spec descriptor for nsCookieVersion",
				"Add a spec descriptor for openshift",
				"Add a spec descriptor for tolerations",
				"Add a spec descriptor for crds",
				"Add a spec descriptor for entityPrefix",
				"Add a spec descriptor for ignoreNodeExternalIP",
				"Add a spec descriptor for nodeWatch",
				"Add a spec descriptor for nsProtocol",
				"Add a spec descriptor for kubernetesURL",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for serviceAccount",
				"Add a spec descriptor for adcCredentialSecret",
				"Add a spec descriptor for logLevel",
				"Add a spec descriptor for nsHTTP2ServerSide",
				"Add a spec descriptor for nsVIP",
				"Add a spec descriptor for routeLabels",
				"Add a spec descriptor for exporter",
				"Add a spec descriptor for pullPolicy",
				"Add a spec descriptor for updateIngressStatus"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "cloud-native-postgresql",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(cloud-native-postgresql.v1.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"backups.postgresql.k8s.enterprisedb.io\" \"clusters.postgresql.k8s.enterprisedb.io\" \"scheduledbackups.postgresql.k8s.enterprisedb.io\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "cnvrg-operator-marketplace",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(cnvrg-operator.v0.352.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"cnvrgapps.mlops.cnvrg.io\"])"
			],
			"scorecardErrors": [
				"redis does not have a spec descriptor",
				"es does not have a spec descriptor",
				"minio does not have a spec descriptor",
				"prometheus does not have a spec descriptor",
				"istio does not have a spec descriptor",
				"kibana does not have a spec descriptor",
				"fluentd does not have a spec descriptor",
				"nvidiadp does not have a spec descriptor",
				"clusterDomain does not have a spec descriptor",
				"ingressType does not have a spec descriptor",
				"cnvrgApp does not have a spec descriptor",
				"seeder does not have a spec descriptor",
				"pg does not have a spec descriptor",
				"securityMode does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"cnvrgapps.mlops.cnvrg.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for redis",
				"Add a spec descriptor for es",
				"Add a spec descriptor for minio",
				"Add a spec descriptor for prometheus",
				"Add a spec descriptor for istio",
				"Add a spec descriptor for kibana",
				"Add a spec descriptor for fluentd",
				"Add a spec descriptor for nvidiadp",
				"Add a spec descriptor for clusterDomain",
				"Add a spec descriptor for ingressType",
				"Add a spec descriptor for cnvrgApp",
				"Add a spec descriptor for seeder",
				"Add a spec descriptor for pg",
				"Add a spec descriptor for securityMode",
				"Add CRD validation for spec field `securityMode` in CnvrgApp/v1",
				"Add CRD validation for spec field `seeder` in CnvrgApp/v1",
				"Add CRD validation for spec field `minio` in CnvrgApp/v1",
				"Add CRD validation for spec field `istio` in CnvrgApp/v1",
				"Add CRD validation for spec field `nvidiadp` in CnvrgApp/v1",
				"Add CRD validation for spec field `prometheus` in CnvrgApp/v1",
				"Add CRD validation for spec field `ingressType` in CnvrgApp/v1",
				"Add CRD validation for spec field `redis` in CnvrgApp/v1",
				"Add CRD validation for spec field `pg` in CnvrgApp/v1",
				"Add CRD validation for spec field `es` in CnvrgApp/v1",
				"Add CRD validation for spec field `kibana` in CnvrgApp/v1",
				"Add CRD validation for spec field `fluentd` in CnvrgApp/v1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "cockroachdb-certified",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(cockroach-operator.v1.7.4) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"cockroachDBVersion does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for cockroachDBVersion"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "coralogix-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD",
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(coralogix-operator.v1.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"coralogixloggers.loggers.coralogix.com\"]),ClusterRole: ([\"coralogix-operator-metrics-reader\"]),"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "cortex-certifai-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(cortex-certifai-operator.v1.3.9) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"certifais.cortex.cognitivescale.com\" \"certifaiscans.cortex.cognitivescale.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "cortex-fabric-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"cortex5s.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"ingress does not have a spec descriptor",
				"kongui does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for kongui",
				"Add CRD validation for spec field `ingress` in Cortex5/v1alpha1",
				"Add CRD validation for spec field `kongui` in Cortex5/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "cortex-healthcare-hub-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(cortex-healthcare-hub-operator.v0.0.25) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"hubs.hubs.cortex.cognitivescale.com\"])"
			],
			"scorecardErrors": [
				"hubs.hubs.cortex.cognitivescale.com does not have a status descriptor",
				"hub does not have a spec descriptor",
				"hub-cronjob does not have a spec descriptor",
				"mongo-uri does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for hub",
				"Add a spec descriptor for hub-cronjob",
				"Add a spec descriptor for mongo-uri"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "cortex-hub-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(cortex-hub-operator.v0.0.25) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"hubs.hubs.cortex.cognitivescale.com\"])"
			],
			"scorecardErrors": [
				"hub does not have a spec descriptor",
				"hub-cronjob does not have a spec descriptor",
				"mongo-uri does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"hubs.hubs.cortex.cognitivescale.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for hub",
				"Add a spec descriptor for hub-cronjob",
				"Add a spec descriptor for mongo-uri"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "couchbase-enterprise-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"couchbaseautoscalers.couchbase.com\" \"couchbasebackuprestores.couchbase.com\" \"couchbasebackups.couchbase.com\" \"couchbasebuckets.couchbase.com\" \"couchbaseclusters.couchbase.com\" \"couchbaseephemeralbuckets.couchbase.com\" \"couchbasegroups.couchbase.com\" \"couchbasememcachedbuckets.couchbase.com\" \"couchbasereplications.couchbase.com\" \"couchbaserolebindings.couchbase.com\" \"couchbaseusers.couchbase.com\"])"
			],
			"scorecardErrors": [
				"couchbasebuckets.couchbase.com does not have a status descriptor",
				"couchbaseephemeralbuckets.couchbase.com does not have a status descriptor",
				"couchbasememcachedbuckets.couchbase.com does not have a status descriptor",
				"couchbaseusers.couchbase.com does not have a status descriptor",
				"couchbasegroups.couchbase.com does not have a status descriptor",
				"couchbaserolebindings.couchbase.com does not have a status descriptor",
				"couchbasereplications.couchbase.com does not have a status descriptor",
				"couchbasebackups.couchbase.com does not have a status descriptor",
				"couchbasebackuprestores.couchbase.com does not have a status descriptor",
				"couchbaseautoscalers.couchbase.com does not have a status descriptor",
				"xdcr does not have a spec descriptor",
				"backup does not have a spec descriptor",
				"upgradeStrategy does not have a spec descriptor",
				"hibernate does not have a spec descriptor",
				"hibernationStrategy does not have a spec descriptor",
				"recoveryPolicy does not have a spec descriptor",
				"cluster does not have a spec descriptor",
				"monitoring does not have a spec descriptor",
				"enablePreviewScaling does not have a spec descriptor",
				"logRetentionTime does not have a spec descriptor",
				"logRetentionCount does not have a spec descriptor",
				"start does not have a spec descriptor",
				"end does not have a spec descriptor",
				"logRetention does not have a spec descriptor",
				"servers does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for xdcr",
				"Add a spec descriptor for backup",
				"Add a spec descriptor for upgradeStrategy",
				"Add a spec descriptor for hibernate",
				"Add a spec descriptor for hibernationStrategy",
				"Add a spec descriptor for recoveryPolicy",
				"Add a spec descriptor for cluster",
				"Add a spec descriptor for monitoring",
				"Add a spec descriptor for enablePreviewScaling",
				"Add a spec descriptor for logRetentionTime",
				"Add a spec descriptor for logRetentionCount",
				"Add a spec descriptor for start",
				"Add a spec descriptor for end",
				"Add a spec descriptor for logRetention",
				"Add a spec descriptor for servers",
				"Add CRD validation for spec field `logRetentionTime` in CouchbaseCluster/v2",
				"Add CRD validation for spec field `logRetentionCount` in CouchbaseCluster/v2",
				"Add CRD validation for spec field `backOffLimit` in CouchbaseBackup/v2",
				"Add CRD validation for spec field `backOffLimit` in CouchbaseBackupRestore/v2"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "couchdb-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(couchdb-operator.v1.4.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"backups.couchdb.databases.cloud.ibm.com\" \"buckets.couchdb.databases.cloud.ibm.com\" \"couchdbclusters.couchdb.databases.cloud.ibm.com\" \"formationlocks.couchdb.databases.cloud.ibm.com\" \"formations.couchdb.databases.cloud.ibm.com\" \"recipes.couchdb.databases.cloud.ibm.com\" \"recipetemplates.couchdb.databases.cloud.ibm.com\"])"
			],
			"scorecardErrors": [
				"cpu does not have a spec descriptor",
				"disk does not have a spec descriptor",
				"environment does not have a spec descriptor",
				"memory does not have a spec descriptor",
				"couchdbclusters.couchdb.databases.cloud.ibm.com does not have a status descriptor",
				"formationlocks.couchdb.databases.cloud.ibm.com does not have a status descriptor",
				"recipes.couchdb.databases.cloud.ibm.com does not have a status descriptor",
				"recipetemplates.couchdb.databases.cloud.ibm.com does not have a status descriptor",
				"backups.couchdb.databases.cloud.ibm.com does not have a status descriptor",
				"buckets.couchdb.databases.cloud.ibm.com does not have a status descriptor",
				"formations.couchdb.databases.cloud.ibm.com does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for cpu",
				"Add a spec descriptor for disk",
				"Add a spec descriptor for environment",
				"Add a spec descriptor for memory"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "cpx-cic-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(cpx-cic-operator.v130.47.103) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"citrixcpxingresscontrollers.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"citrixcpxingresscontrollers.charts.helm.k8s.io does not have a status descriptor",
				"license does not have a spec descriptor",
				"lsIP does not have a spec descriptor",
				"lsPort does not have a spec descriptor",
				"cic does not have a spec descriptor",
				"cpx does not have a spec descriptor",
				"defaultSSLCert does not have a spec descriptor",
				"exporter does not have a spec descriptor",
				"ingressClass does not have a spec descriptor",
				"nsNamespace does not have a spec descriptor",
				"openshift does not have a spec descriptor",
				"platform does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `lsIP` in CitrixCPXIngressController/v1alpha1",
				"Add CRD validation for spec field `lsPort` in CitrixCPXIngressController/v1alpha1",
				"Add CRD validation for spec field `nsNamespace` in CitrixCPXIngressController/v1alpha1",
				"Add CRD validation for spec field `openshift` in CitrixCPXIngressController/v1alpha1",
				"Add CRD validation for spec field `platform` in CitrixCPXIngressController/v1alpha1",
				"Add CRD validation for spec field `defaultSSLCert` in CitrixCPXIngressController/v1alpha1",
				"Add CRD validation for spec field `ingressClass` in CitrixCPXIngressController/v1alpha1",
				"Add CRD validation for spec field `exporter` in CitrixCPXIngressController/v1alpha1",
				"Add CRD validation for spec field `license` in CitrixCPXIngressController/v1alpha1",
				"Add CRD validation for spec field `cic` in CitrixCPXIngressController/v1alpha1",
				"Add CRD validation for spec field `cpx` in CitrixCPXIngressController/v1alpha1",
				"Add a spec descriptor for license",
				"Add a spec descriptor for lsIP",
				"Add a spec descriptor for lsPort",
				"Add a spec descriptor for cic",
				"Add a spec descriptor for cpx",
				"Add a spec descriptor for defaultSSLCert",
				"Add a spec descriptor for exporter",
				"Add a spec descriptor for ingressClass",
				"Add a spec descriptor for nsNamespace",
				"Add a spec descriptor for openshift",
				"Add a spec descriptor for platform"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "crunchy-postgres-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"pgclusters.crunchydata.com\" \"pgpolicies.crunchydata.com\" \"pgreplicas.crunchydata.com\" \"pgtasks.crunchydata.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "cyberarmor-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(cyberarmor-operator.0.0.1) csv.metadata.Name cyberarmor-operator.0.0.1 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"cyberarmornamespaces.apm.cyberarmor.com\" \"cyberarmors.apm.cyberarmor.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"cyberarmors.apm.cyberarmor.com does not have a status descriptor",
				"cyberarmornamespaces.apm.cyberarmor.com does not have a status descriptor",
				"caK8sReportUrl does not have a spec descriptor",
				"caPortalBackend does not have a spec descriptor",
				"caCustomerGuid does not have a spec descriptor",
				"caPostman does not have a spec descriptor",
				"caClusterGuid does not have a spec descriptor",
				"caClusterName does not have a spec descriptor",
				"caMasterNotificationServerHost does not have a spec descriptor",
				"caDashboardBackend does not have a spec descriptor",
				"caloginInfo does not have a spec descriptor",
				"cyberArmorNameSpace does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `caCustomerGuid` in Cyberarmor/v1alpha1",
				"Add CRD validation for spec field `caMasterNotificationServerHost` in Cyberarmor/v1alpha1",
				"Add CRD validation for spec field `caClusterName` in Cyberarmor/v1alpha1",
				"Add CRD validation for spec field `caloginInfo` in Cyberarmor/v1alpha1",
				"Add CRD validation for spec field `caK8sReportUrl` in Cyberarmor/v1alpha1",
				"Add CRD validation for spec field `caDashboardBackend` in Cyberarmor/v1alpha1",
				"Add CRD validation for spec field `caPortalBackend` in Cyberarmor/v1alpha1",
				"Add CRD validation for spec field `caPostman` in Cyberarmor/v1alpha1",
				"Add CRD validation for spec field `caClusterGuid` in Cyberarmor/v1alpha1",
				"Add CRD validation for spec field `cyberArmorNameSpace` in Cyberarmornamespace/v1alpha1",
				"Add a spec descriptor for caK8sReportUrl",
				"Add a spec descriptor for caPortalBackend",
				"Add a spec descriptor for caCustomerGuid",
				"Add a spec descriptor for caPostman",
				"Add a spec descriptor for caClusterGuid",
				"Add a spec descriptor for caClusterName",
				"Add a spec descriptor for caMasterNotificationServerHost",
				"Add a spec descriptor for caDashboardBackend",
				"Add a spec descriptor for caloginInfo",
				"Add a spec descriptor for cyberArmorNameSpace"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "data-explorer-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(data-explorer-operator.v0.1.8) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"dashboardwithjupyterlabs.data-explorer.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "datadog-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(datadog-operator.v0.4.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"datadogagents.datadoghq.com\" \"datadogmetrics.datadoghq.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"agent does not have a spec descriptor",
				"credentials does not have a spec descriptor",
				"query does not have a spec descriptor",
				"datadogagents.datadoghq.com does not have a status descriptor",
				"datadogmetrics.datadoghq.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for agent",
				"Add a spec descriptor for credentials",
				"Add a spec descriptor for query"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "dell-csi-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD",
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(dell-csi-operator-certified.v1.2.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"csiisilons.storage.dell.com\" \"csipowermaxes.storage.dell.com\" \"csipowermaxrevproxies.storage.dell.com\" \"csipowerstores.storage.dell.com\" \"csiunities.storage.dell.com\" \"csivxflexoses.storage.dell.com\"]),ClusterRole: ([\"dell-csi-operator-metrics-reader\"]),"
			],
			"scorecardErrors": [
				"config does not have a spec descriptor",
				"image does not have a spec descriptor",
				"imagePullPolicy does not have a spec descriptor",
				"tlsSecret does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for config",
				"Add a spec descriptor for image",
				"Add a spec descriptor for imagePullPolicy",
				"Add a spec descriptor for tlsSecret"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "densify-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"multipleArchitectures": [
				"amd64",
				"linux"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(densify-operator.v1.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"densifies.densify.com\"])"
			],
			"scorecardErrors": [
				"densifies.densify.com does not have a status descriptor",
				"config does not have a spec descriptor",
				"image does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"pullPolicy does not have a spec descriptor",
				"replicaCount does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"affinity does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for config",
				"Add a spec descriptor for image",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for pullPolicy",
				"Add a spec descriptor for replicaCount",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for affinity",
				"Add CRD validation for spec field `replicaCount` in Densify/v1",
				"Add CRD validation for spec field `resources` in Densify/v1",
				"Add CRD validation for spec field `affinity` in Densify/v1",
				"Add CRD validation for spec field `config` in Densify/v1",
				"Add CRD validation for spec field `image` in Densify/v1",
				"Add CRD validation for spec field `nodeSelector` in Densify/v1",
				"Add CRD validation for spec field `pullPolicy` in Densify/v1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "eddi-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(eddi-operator.v1.0.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"eddioperators.labs.ai\" \"eddis.labs.ai\"])"
			],
			"scorecardSuggestions": [
				"Add CRD validation for Eddioperator/v1alpha1"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "elasticsearch-eck-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"agents.agent.k8s.elastic.co\" \"apmservers.apm.k8s.elastic.co\" \"beats.beat.k8s.elastic.co\" \"elasticsearches.elasticsearch.k8s.elastic.co\" \"enterprisesearches.enterprisesearch.k8s.elastic.co\" \"kibanas.kibana.k8s.elastic.co\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"elasticsearches.elasticsearch.k8s.elastic.co does not have a status descriptor",
				"kibanas.kibana.k8s.elastic.co does not have a status descriptor",
				"apmservers.apm.k8s.elastic.co does not have a status descriptor",
				"enterprisesearches.enterprisesearch.k8s.elastic.co does not have a status descriptor",
				"beats.beat.k8s.elastic.co does not have a status descriptor",
				"agents.agent.k8s.elastic.co does not have a status descriptor",
				"version does not have a spec descriptor",
				"nodeSets does not have a spec descriptor",
				"podTemplate does not have a spec descriptor",
				"version does not have a spec descriptor",
				"count does not have a spec descriptor",
				"elasticsearchRef does not have a spec descriptor",
				"version does not have a spec descriptor",
				"count does not have a spec descriptor",
				"elasticsearchRef does not have a spec descriptor",
				"config does not have a spec descriptor",
				"count does not have a spec descriptor",
				"elasticsearchRef does not have a spec descriptor",
				"version does not have a spec descriptor",
				"elasticsearchRef does not have a spec descriptor",
				"config does not have a spec descriptor",
				"deployment does not have a spec descriptor",
				"type does not have a spec descriptor",
				"version does not have a spec descriptor",
				"daemonSet does not have a spec descriptor",
				"config does not have a spec descriptor",
				"version does not have a spec descriptor",
				"elasticsearchRefs does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for version",
				"Add a spec descriptor for nodeSets",
				"Add a spec descriptor for podTemplate",
				"Add a spec descriptor for version",
				"Add a spec descriptor for count",
				"Add a spec descriptor for elasticsearchRef",
				"Add a spec descriptor for version",
				"Add a spec descriptor for count",
				"Add a spec descriptor for elasticsearchRef",
				"Add a spec descriptor for config",
				"Add a spec descriptor for count",
				"Add a spec descriptor for elasticsearchRef",
				"Add a spec descriptor for version",
				"Add a spec descriptor for elasticsearchRef",
				"Add a spec descriptor for config",
				"Add a spec descriptor for deployment",
				"Add a spec descriptor for type",
				"Add a spec descriptor for version",
				"Add a spec descriptor for daemonSet",
				"Add a spec descriptor for config",
				"Add a spec descriptor for version",
				"Add a spec descriptor for elasticsearchRefs"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "entando-k8s-operator",
			"hasValidatorWarnings": false,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "f5-bigip-ctlr-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"f5bigipctlrs.cis.f5.com\"])"
			],
			"scorecardErrors": [
				"bigip_login_secret does not have a spec descriptor",
				"image does not have a spec descriptor",
				"namespace does not have a spec descriptor",
				"rbac does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"serviceAccount does not have a spec descriptor",
				"args does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for bigip_login_secret",
				"Add a spec descriptor for image",
				"Add a spec descriptor for namespace",
				"Add a spec descriptor for rbac",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for serviceAccount",
				"Add a spec descriptor for args",
				"Add CRD validation for F5BigIpCtlr/v1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "falco-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(falco-operator.v1.2.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"falcos.falco.org\"])"
			],
			"scorecardErrors": [
				"falcos.falco.org does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add CRD validation for Falco/v1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "federatorai-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(federatorai.v4.4.1-2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"alamedaservices.federatorai.containers.ai\"])"
			],
			"scorecardErrors": [
				"imageLocation does not have a spec descriptor",
				"keycode does not have a spec descriptor",
				"storages does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for imageLocation",
				"Add a spec descriptor for keycode",
				"Add a spec descriptor for storages",
				"Add CRD validation for spec field `keycode` in AlamedaService/v1alpha1",
				"Add CRD validation for spec field `version` in AlamedaService/v1alpha1",
				"Add CRD validation for spec field `storages` in AlamedaService/v1alpha1",
				"Add CRD validation for spec field `imageLocation` in AlamedaService/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "fep-ansible-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"multipleArchitectures": [
				"amd64",
				"s390x",
				"linux"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(fujitsu-enterprise-operator.v2.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"fepactions.fep.fujitsu.io\" \"fepbackups.fep.fujitsu.io\" \"fepcerts.fep.fujitsu.io\" \"fepclusters.fep.fujitsu.io\" \"fepconfigs.fep.fujitsu.io\" \"feppgpool2certs.fep.fujitsu.io\" \"feppgpool2s.fep.fujitsu.io\" \"feprestores.fep.fujitsu.io\" \"fepusers.fep.fujitsu.io\" \"fepvolumes.fep.fujitsu.io\"])",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"fepclusters.fep.fujitsu.io does not have a status descriptor",
				"fepactions.fep.fujitsu.io does not have a status descriptor",
				"feppgpool2s.fep.fujitsu.io does not have a status descriptor",
				"feprestores.fep.fujitsu.io does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"fep does not have a spec descriptor",
				"fepChildCrVal does not have a spec descriptor",
				"sysExtraLogging does not have a spec descriptor",
				"targetClusterName does not have a spec descriptor",
				"fepAction does not have a spec descriptor",
				"fepclustername does not have a spec descriptor",
				"imagePullPolicy does not have a spec descriptor",
				"imagePullPolicy does not have a spec descriptor",
				"mcSpec does not have a spec descriptor",
				"fromFEPcluster does not have a spec descriptor",
				"toFEPcluster does not have a spec descriptor",
				"restoretype does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Warning: Value fep.fujitsu.io/v1, Kind=FEPVolume: provided API should have an example annotation",
				"Warning: Value fep.fujitsu.io/v1, Kind=FEPUser: provided API should have an example annotation",
				"Warning: Value fep.fujitsu.io/v1, Kind=FEPPgpool2Cert: provided API should have an example annotation",
				"Warning: Value fep.fujitsu.io/v1, Kind=FEPConfig: provided API should have an example annotation",
				"Warning: Value fep.fujitsu.io/v1, Kind=FEPCert: provided API should have an example annotation",
				"Warning: Value fep.fujitsu.io/v1, Kind=FEPBackup: provided API should have an example annotation",
				"Add CRD validation for FEPCluster/v2",
				"Add CRD validation for FEPAction/v1",
				"Add CRD validation for spec field `imagePullPolicy` in FEPPgpool2/v1",
				"Add CRD validation for spec field `fepclustername` in FEPPgpool2/v1",
				"Add CRD validation for spec field `restoretype` in FEPRestore/v1",
				"Add CRD validation for spec field `imagePullPolicy` in FEPRestore/v1",
				"Add CRD validation for spec field `mcSpec` in FEPRestore/v1",
				"Add CRD validation for spec field `fromFEPcluster` in FEPRestore/v1",
				"Add CRD validation for spec field `toFEPcluster` in FEPRestore/v1",
				"Add a spec descriptor for fep",
				"Add a spec descriptor for fepChildCrVal",
				"Add a spec descriptor for sysExtraLogging",
				"Add a spec descriptor for targetClusterName",
				"Add a spec descriptor for fepAction",
				"Add a spec descriptor for fepclustername",
				"Add a spec descriptor for imagePullPolicy",
				"Add a spec descriptor for imagePullPolicy",
				"Add a spec descriptor for mcSpec",
				"Add a spec descriptor for fromFEPcluster",
				"Add a spec descriptor for toFEPcluster",
				"Add a spec descriptor for restoretype"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "fp-predict-plus-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(fp-predict-plus-operator.v0.0.4) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"fppredictplus.apm.fp-predict-plus.findabilityplatform.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"deploymentConfig does not have a spec descriptor",
				"imagePullConfig does not have a spec descriptor",
				"pvcConfig does not have a spec descriptor",
				"routeConfig does not have a spec descriptor",
				"serviceConfig does not have a spec descriptor",
				"fppredictplus.apm.fp-predict-plus.findabilityplatform.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for deploymentConfig",
				"Add a spec descriptor for imagePullConfig",
				"Add a spec descriptor for pvcConfig",
				"Add a spec descriptor for routeConfig",
				"Add a spec descriptor for serviceConfig",
				"Add CRD validation for spec field `routeConfig` in FPpredictplus/v1",
				"Add CRD validation for spec field `serviceConfig` in FPpredictplus/v1",
				"Add CRD validation for spec field `deploymentConfig` in FPpredictplus/v1",
				"Add CRD validation for spec field `imagePullConfig` in FPpredictplus/v1",
				"Add CRD validation for spec field `pvcConfig` in FPpredictplus/v1"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "gitlab-runner-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(gitlab-runner-operator.v13.9.0-rc2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"runners.apps.gitlab.com\"])"
			],
			"scorecardErrors": [
				"imagePullPolicy does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for imagePullPolicy"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "gpu-operator-certified",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(gpu-operator-certified.v1.6.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasInfraAnnotation": true
		},
		{
			"packageName": "growth-stack-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(growth-stack-operator.v2.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"airgappeddeployments.growth-stack.operator.com\" \"analyticsproxies.growth-stack.operator.com\" \"deleteclusters.growth-stack.operator.com\" \"fulldeployments.growth-stack.operator.com\" \"generatekeys.growth-stack.operator.com\" \"storeforwardmetrics.growth-stack.operator.com\"])"
			],
			"scorecardErrors": [
				"airgapped does not have a spec descriptor",
				"event_scheduler_frequency does not have a spec descriptor",
				"image_pull_secret does not have a spec descriptor",
				"postgres does not have a spec descriptor",
				"event_scheduler_frequency does not have a spec descriptor",
				"ibmproxyurl does not have a spec descriptor",
				"image_pull_secret does not have a spec descriptor",
				"segment_key does not have a spec descriptor",
				"postgres does not have a spec descriptor",
				"airgapped does not have a spec descriptor",
				"image_pull_secret does not have a spec descriptor",
				"segment_key does not have a spec descriptor",
				"postgres does not have a spec descriptor",
				"prometheus_scheduler_frequency does not have a spec descriptor",
				"airgapped does not have a spec descriptor",
				"event_scheduler_frequency does not have a spec descriptor",
				"ibmproxyurl does not have a spec descriptor",
				"image_pull_secret does not have a spec descriptor",
				"image_pull_secret does not have a spec descriptor",
				"segment_key does not have a spec descriptor",
				"prometheus_scheduler_frequency does not have a spec descriptor",
				"version does not have a spec descriptor",
				"event_scheduler_frequency does not have a spec descriptor",
				"ibmproxyurl does not have a spec descriptor",
				"image_pull_secret does not have a spec descriptor",
				"postgres does not have a spec descriptor",
				"airgappeddeployments.growth-stack.operator.com does not have a status descriptor",
				"analyticsproxies.growth-stack.operator.com does not have a status descriptor",
				"deleteclusters.growth-stack.operator.com does not have a status descriptor",
				"fulldeployments.growth-stack.operator.com does not have a status descriptor",
				"generatekeys.growth-stack.operator.com does not have a status descriptor",
				"storeforwardmetrics.growth-stack.operator.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `postgres` in AirgappedDeployment/v1alpha1",
				"Add CRD validation for spec field `airgapped` in AirgappedDeployment/v1alpha1",
				"Add CRD validation for spec field `event_scheduler_frequency` in AirgappedDeployment/v1alpha1",
				"Add CRD validation for spec field `image_pull_secret` in AirgappedDeployment/v1alpha1",
				"Add CRD validation for spec field `airgapped` in AnalyticsProxy/v1alpha1",
				"Add CRD validation for spec field `event_scheduler_frequency` in AnalyticsProxy/v1alpha1",
				"Add CRD validation for spec field `ibmproxyurl` in AnalyticsProxy/v1alpha1",
				"Add CRD validation for spec field `image_pull_secret` in AnalyticsProxy/v1alpha1",
				"Add CRD validation for spec field `segment_key` in AnalyticsProxy/v1alpha1",
				"Add CRD validation for spec field `postgres` in AnalyticsProxy/v1alpha1",
				"Add CRD validation for spec field `image_pull_secret` in DeleteCluster/v1alpha1",
				"Add CRD validation for spec field `airgapped` in FullDeployment/v1alpha1",
				"Add CRD validation for spec field `event_scheduler_frequency` in FullDeployment/v1alpha1",
				"Add CRD validation for spec field `ibmproxyurl` in FullDeployment/v1alpha1",
				"Add CRD validation for spec field `image_pull_secret` in FullDeployment/v1alpha1",
				"Add CRD validation for spec field `segment_key` in FullDeployment/v1alpha1",
				"Add CRD validation for spec field `postgres` in FullDeployment/v1alpha1",
				"Add CRD validation for spec field `prometheus_scheduler_frequency` in FullDeployment/v1alpha1",
				"Add CRD validation for spec field `image_pull_secret` in GenerateKey/v1alpha1",
				"Add CRD validation for spec field `image_pull_secret` in StoreForwardMetric/v1alpha1",
				"Add CRD validation for spec field `postgres` in StoreForwardMetric/v1alpha1",
				"Add CRD validation for spec field `segment_key` in StoreForwardMetric/v1alpha1",
				"Add CRD validation for spec field `prometheus_scheduler_frequency` in StoreForwardMetric/v1alpha1",
				"Add CRD validation for spec field `version` in StoreForwardMetric/v1alpha1",
				"Add CRD validation for spec field `event_scheduler_frequency` in StoreForwardMetric/v1alpha1",
				"Add CRD validation for spec field `ibmproxyurl` in StoreForwardMetric/v1alpha1",
				"Add a spec descriptor for airgapped",
				"Add a spec descriptor for event_scheduler_frequency",
				"Add a spec descriptor for image_pull_secret",
				"Add a spec descriptor for postgres",
				"Add a spec descriptor for event_scheduler_frequency",
				"Add a spec descriptor for ibmproxyurl",
				"Add a spec descriptor for image_pull_secret",
				"Add a spec descriptor for segment_key",
				"Add a spec descriptor for postgres",
				"Add a spec descriptor for airgapped",
				"Add a spec descriptor for image_pull_secret",
				"Add a spec descriptor for segment_key",
				"Add a spec descriptor for postgres",
				"Add a spec descriptor for prometheus_scheduler_frequency",
				"Add a spec descriptor for airgapped",
				"Add a spec descriptor for event_scheduler_frequency",
				"Add a spec descriptor for ibmproxyurl",
				"Add a spec descriptor for image_pull_secret",
				"Add a spec descriptor for image_pull_secret",
				"Add a spec descriptor for segment_key",
				"Add a spec descriptor for prometheus_scheduler_frequency",
				"Add a spec descriptor for version",
				"Add a spec descriptor for event_scheduler_frequency",
				"Add a spec descriptor for ibmproxyurl",
				"Add a spec descriptor for image_pull_secret",
				"Add a spec descriptor for postgres"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "h2o-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(h2o-operator.v0.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"h2os.h2o.ai\"])"
			],
			"scorecardErrors": [
				"h2os.h2o.ai does not have a status descriptor"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "hazelcast-enterprise-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(hazelcast-enterprise-operator.v0.3.4-1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"hazelcastenterprises.hazelcast.com\"])"
			],
			"scorecardErrors": [
				"hazelcast does not have a spec descriptor",
				"securityContext does not have a spec descriptor",
				"hazelcastenterprises.hazelcast.com does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for hazelcast",
				"Add a spec descriptor for securityContext",
				"Add CRD validation for HazelcastEnterprise/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "hazelcast-jet-enterprise-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(hazelcast-jet-enterprise-operator.v0.2.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"hazelcastjetenterprises.hazelcast.com\"])"
			],
			"scorecardErrors": [
				"hazelcastjetenterprises.hazelcast.com does not have a status descriptor",
				"securityContext does not have a spec descriptor",
				"cluster does not have a spec descriptor",
				"jet does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `securityContext` in HazelcastJetEnterprise/v1alpha1",
				"Add CRD validation for spec field `cluster` in HazelcastJetEnterprise/v1alpha1",
				"Add CRD validation for spec field `jet` in HazelcastJetEnterprise/v1alpha1",
				"Add a spec descriptor for securityContext",
				"Add a spec descriptor for cluster",
				"Add a spec descriptor for jet"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "here-service-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(hls-service-operator.v0.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"hlsservices.here.com\"])"
			],
			"scorecardErrors": [
				"hlsservices.here.com does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"apikey does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for apikey"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "hpe-csi-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"hpecsidrivers.storage.hpe.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "hpe-ezmeral-csi-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"hpeezmeralcsidrivers.ezmeral.hpe.com\" \"hpeezmeralnfscsidrivers.ezmeral.hpe.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "hspc-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(hspc-operator.v1.5.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"hspcs.csi.hitachi.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"hspcs.csi.hitachi.com does not have a status descriptor"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "humio-operator",
			"hasValidatorErrors": true,
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorErrors": [
				"(humio-operator.v0.0.1) csv.Spec.Icon elements should contain both data and mediatype"
			],
			"validatorWarnings": [
				"(humio-operator.v0.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"provided API should have an example annotation"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "ibm-block-csi-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"ibmblockcsis.csi.ibm.com\"])"
			],
			"scorecardErrors": [
				"sidecars does not have a spec descriptor",
				"controller does not have a spec descriptor",
				"node does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for sidecars",
				"Add a spec descriptor for controller",
				"Add a spec descriptor for node"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "ibm-spectrum-scale-csi",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"multipleArchitectures": [
				"amd64"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(ibm-spectrum-scale-csi-operator.v2.2.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"csiscaleoperators.csi.ibm.com\"])"
			],
			"scorecardErrors": [
				"snapshotterNodeSelector does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for snapshotterNodeSelector"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "ibm-spectrum-symphony-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(ibm-spectrum-symphony-operator.v1.1.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"symphonyclusters.symphony.spectrumcomputing.ibm.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "ibm-tas",
			"kindsDeprecateAPIs": [
				"CRD",
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(ibm-tas.v0.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"tririgas.tas.ibm.com\"]),ClusterRole: ([\"ibm-tas-metrics-reader\"]),"
			],
			"scorecardErrors": [
				"tririgas.tas.ibm.com does not have a status descriptor",
				"Bundle validation errors: Expecting annotation \"operators.operatorframework.io.bundle.channel.default.v1\" to have non-empty value",
				"dbport does not have a spec descriptor",
				"dbtype does not have a spec descriptor",
				"size does not have a spec descriptor",
				"contextpath does not have a spec descriptor",
				"dbapassword does not have a spec descriptor",
				"dbpassword does not have a spec descriptor",
				"dbusername does not have a spec descriptor",
				"javamax does not have a spec descriptor",
				"javamin does not have a spec descriptor",
				"sid does not have a spec descriptor",
				"dbausername does not have a spec descriptor",
				"dbdnsname does not have a spec descriptor",
				"dbname does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `dbport` in Tririga/v1alpha1",
				"Add CRD validation for spec field `dbtype` in Tririga/v1alpha1",
				"Add CRD validation for spec field `javamax` in Tririga/v1alpha1",
				"Add CRD validation for spec field `size` in Tririga/v1alpha1",
				"Add CRD validation for spec field `contextpath` in Tririga/v1alpha1",
				"Add CRD validation for spec field `dbausername` in Tririga/v1alpha1",
				"Add CRD validation for spec field `dbdnsname` in Tririga/v1alpha1",
				"Add CRD validation for spec field `dbname` in Tririga/v1alpha1",
				"Add CRD validation for spec field `sid` in Tririga/v1alpha1",
				"Add CRD validation for spec field `dbapassword` in Tririga/v1alpha1",
				"Add CRD validation for spec field `dbpassword` in Tririga/v1alpha1",
				"Add CRD validation for spec field `dbusername` in Tririga/v1alpha1",
				"Add CRD validation for spec field `javamin` in Tririga/v1alpha1",
				"Add a spec descriptor for dbport",
				"Add a spec descriptor for dbtype",
				"Add a spec descriptor for size",
				"Add a spec descriptor for contextpath",
				"Add a spec descriptor for dbapassword",
				"Add a spec descriptor for dbpassword",
				"Add a spec descriptor for dbusername",
				"Add a spec descriptor for javamax",
				"Add a spec descriptor for javamin",
				"Add a spec descriptor for sid",
				"Add a spec descriptor for dbausername",
				"Add a spec descriptor for dbdnsname",
				"Add a spec descriptor for dbname"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-bundle-validation",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "infinibox-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(infinibox-operator.v0.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"infiniboxcsidrivers.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"infiniboxcsidrivers.charts.helm.k8s.io does not have a status descriptor",
				"volumeNamePrefix does not have a spec descriptor",
				"Infinibox_Cred does not have a spec descriptor",
				"csiDriverName does not have a spec descriptor",
				"csiDriverVersion does not have a spec descriptor",
				"images does not have a spec descriptor",
				"instanceCount does not have a spec descriptor",
				"logLevel does not have a spec descriptor",
				"replicaCount does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `volumeNamePrefix` in InfiniboxCsiDriver/v1alpha1",
				"Add CRD validation for spec field `Infinibox_Cred` in InfiniboxCsiDriver/v1alpha1",
				"Add CRD validation for spec field `csiDriverName` in InfiniboxCsiDriver/v1alpha1",
				"Add CRD validation for spec field `csiDriverVersion` in InfiniboxCsiDriver/v1alpha1",
				"Add CRD validation for spec field `images` in InfiniboxCsiDriver/v1alpha1",
				"Add CRD validation for spec field `instanceCount` in InfiniboxCsiDriver/v1alpha1",
				"Add CRD validation for spec field `logLevel` in InfiniboxCsiDriver/v1alpha1",
				"Add CRD validation for spec field `replicaCount` in InfiniboxCsiDriver/v1alpha1",
				"Add a spec descriptor for volumeNamePrefix",
				"Add a spec descriptor for Infinibox_Cred",
				"Add a spec descriptor for csiDriverName",
				"Add a spec descriptor for csiDriverVersion",
				"Add a spec descriptor for images",
				"Add a spec descriptor for instanceCount",
				"Add a spec descriptor for logLevel",
				"Add a spec descriptor for replicaCount"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "insightedge-enterprise-operator2",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(insightedge-enterprise-operator.v15.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"insightedges.insightedge.gigaspaces.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"manager does not have a spec descriptor",
				"pu does not have a spec descriptor",
				"zeppelin does not have a spec descriptor",
				"insightedges.insightedge.gigaspaces.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for Insightedge/v1alpha1",
				"Add a spec descriptor for manager",
				"Add a spec descriptor for pu",
				"Add a spec descriptor for zeppelin"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "instana-agent",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"agents.instana.io\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "ionir-operator",
			"kindsDeprecateAPIs": [
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(ionir-operator.v1.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for ClusterRole: ([\"ionir-operator-metrics-reader\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "ivory-server-app",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(ivory-server-operator.v1.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"ivoryservers.ivoryserver.gtsoftware.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"ivoryservers.ivoryserver.gtsoftware.com does not have a status descriptor",
				"size does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for IvoryServer/v1alpha1",
				"Add a spec descriptor for size"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "joget-dx-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(joget-dx-openshift-operator.v0.0.10) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"jogetdx.app.joget.com\"])"
			],
			"scorecardErrors": [
				"size does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"jogetdx.app.joget.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for size",
				"Add CRD validation for JogetDX/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "joget-openshift-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(joget-openshift-operator.v0.0.4) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"joget.app.joget.com\"])"
			],
			"scorecardErrors": [
				"size does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"joget.app.joget.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for Joget/v1alpha1",
				"Add a spec descriptor for size"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "jtrac-app-operator",
			"kindsDeprecateAPIs": [
				"CRD",
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(jtrac-app-operator.v0.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"jtracs.example.com\"]),ClusterRole: ([\"jtrac-app-operator-metrics-reader\"]),"
			],
			"scorecardErrors": [
				"imagePullSecrets does not have a spec descriptor",
				"podSecurityContext does not have a spec descriptor",
				"affinity does not have a spec descriptor",
				"nameOverride does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"podAnnotations does not have a spec descriptor",
				"securityContext does not have a spec descriptor",
				"serviceAccount does not have a spec descriptor",
				"fullnameOverride does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"service does not have a spec descriptor",
				"tolerations does not have a spec descriptor",
				"ingress does not have a spec descriptor",
				"image does not have a spec descriptor",
				"replicaCount does not have a spec descriptor",
				"autoscaling does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `fullnameOverride` in jtrac/v1alpha1",
				"Add CRD validation for spec field `nameOverride` in jtrac/v1alpha1",
				"Add CRD validation for spec field `tolerations` in jtrac/v1alpha1",
				"Add CRD validation for spec field `ingress` in jtrac/v1alpha1",
				"Add CRD validation for spec field `nodeSelector` in jtrac/v1alpha1",
				"Add CRD validation for spec field `serviceAccount` in jtrac/v1alpha1",
				"Add CRD validation for spec field `affinity` in jtrac/v1alpha1",
				"Add CRD validation for spec field `image` in jtrac/v1alpha1",
				"Add CRD validation for spec field `podSecurityContext` in jtrac/v1alpha1",
				"Add CRD validation for spec field `replicaCount` in jtrac/v1alpha1",
				"Add CRD validation for spec field `securityContext` in jtrac/v1alpha1",
				"Add CRD validation for spec field `autoscaling` in jtrac/v1alpha1",
				"Add CRD validation for spec field `imagePullSecrets` in jtrac/v1alpha1",
				"Add CRD validation for spec field `podAnnotations` in jtrac/v1alpha1",
				"Add CRD validation for spec field `resources` in jtrac/v1alpha1",
				"Add CRD validation for spec field `service` in jtrac/v1alpha1",
				"Add a spec descriptor for imagePullSecrets",
				"Add a spec descriptor for podSecurityContext",
				"Add a spec descriptor for affinity",
				"Add a spec descriptor for nameOverride",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for podAnnotations",
				"Add a spec descriptor for securityContext",
				"Add a spec descriptor for serviceAccount",
				"Add a spec descriptor for fullnameOverride",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for service",
				"Add a spec descriptor for tolerations",
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for image",
				"Add a spec descriptor for replicaCount",
				"Add a spec descriptor for autoscaling"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "k10-kasten-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(k10-helm-operator.2.5.18) csv.metadata.Name k10-helm-operator.2.5.18 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"k10s.apik10.kasten.io\"])"
			],
			"scorecardErrors": [
				"k10s.apik10.kasten.io does not have a status descriptor",
				"scc does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for scc",
				"Add CRD validation for spec field `scc` in K10/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "k8s-triliovault",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"backupplans.triliovault.trilio.io\" \"backups.triliovault.trilio.io\" \"hooks.triliovault.trilio.io\" \"licenses.triliovault.trilio.io\" \"policies.triliovault.trilio.io\" \"restores.triliovault.trilio.io\" \"targets.triliovault.trilio.io\"])",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"nfsCredentials does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Warning: Value triliovault.trilio.io/v1, Kind=Backup: provided API should have an example annotation",
				"Warning: Value triliovault.trilio.io/v1, Kind=Restore: provided API should have an example annotation",
				"Warning: Value triliovault.trilio.io/v1, Kind=Policy: provided API should have an example annotation",
				"Warning: Value triliovault.trilio.io/v1, Kind=Hook: provided API should have an example annotation",
				"Warning: Value triliovault.trilio.io/v1, Kind=BackupPlan: provided API should have an example annotation",
				"Add a spec descriptor for nfsCredentials"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "kong-offline-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(kong.v0.3.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"kongs.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"proxy does not have a spec descriptor",
				"env does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"ingressController does not have a spec descriptor",
				"Owned CRDs do not have resources specified",
				"kongs.charts.helm.k8s.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for proxy",
				"Add a spec descriptor for env",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for ingressController",
				"Add CRD validation for Kong/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "kpow-io-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(kpow-io.v1.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"kpows.kpow.io\"])"
			],
			"scorecardErrors": [
				"data_policy_configuration does not have a spec descriptor",
				"prometheus_egress does not have a spec descriptor",
				"schema_registry_configuration does not have a spec descriptor",
				"saml_sso_options does not have a spec descriptor",
				"system_configuration does not have a spec descriptor",
				"environment_name does not have a spec descriptor",
				"bootstrap does not have a spec descriptor",
				"kafka_cluster_configuration does not have a spec descriptor",
				"global_access_configuration does not have a spec descriptor",
				"serdis_configuration does not have a spec descriptor",
				"okta_sso_options does not have a spec descriptor",
				"https_configuration does not have a spec descriptor",
				"live_mode_configuration does not have a spec descriptor",
				"slack_integration does not have a spec descriptor",
				"license_configuration does not have a spec descriptor",
				"kafka_connect_configuration does not have a spec descriptor",
				"rbac_configuration does not have a spec descriptor",
				"github_sso_options does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `environment_name` in Kpow/v1beta1",
				"Add CRD validation for spec field `rbac_configuration` in Kpow/v1beta1",
				"Add CRD validation for spec field `slack_integration` in Kpow/v1beta1",
				"Add CRD validation for spec field `license_configuration` in Kpow/v1beta1",
				"Add CRD validation for spec field `data_policy_configuration` in Kpow/v1beta1",
				"Add CRD validation for spec field `serdis_configuration` in Kpow/v1beta1",
				"Add CRD validation for spec field `live_mode_configuration` in Kpow/v1beta1",
				"Add CRD validation for spec field `schema_registry_configuration` in Kpow/v1beta1",
				"Add CRD validation for spec field `github_sso_options` in Kpow/v1beta1",
				"Add CRD validation for spec field `kafka_cluster_configuration` in Kpow/v1beta1",
				"Add CRD validation for spec field `https_configuration` in Kpow/v1beta1",
				"Add CRD validation for spec field `kafka_connect_configuration` in Kpow/v1beta1",
				"Add CRD validation for spec field `okta_sso_options` in Kpow/v1beta1",
				"Add CRD validation for spec field `saml_sso_options` in Kpow/v1beta1",
				"Add CRD validation for spec field `system_configuration` in Kpow/v1beta1",
				"Add CRD validation for spec field `bootstrap` in Kpow/v1beta1",
				"Add CRD validation for spec field `global_access_configuration` in Kpow/v1beta1",
				"Add CRD validation for spec field `prometheus_egress` in Kpow/v1beta1",
				"Add a spec descriptor for data_policy_configuration",
				"Add a spec descriptor for prometheus_egress",
				"Add a spec descriptor for schema_registry_configuration",
				"Add a spec descriptor for saml_sso_options",
				"Add a spec descriptor for system_configuration",
				"Add a spec descriptor for environment_name",
				"Add a spec descriptor for bootstrap",
				"Add a spec descriptor for kafka_cluster_configuration",
				"Add a spec descriptor for global_access_configuration",
				"Add a spec descriptor for serdis_configuration",
				"Add a spec descriptor for okta_sso_options",
				"Add a spec descriptor for https_configuration",
				"Add a spec descriptor for live_mode_configuration",
				"Add a spec descriptor for slack_integration",
				"Add a spec descriptor for license_configuration",
				"Add a spec descriptor for kafka_connect_configuration",
				"Add a spec descriptor for rbac_configuration",
				"Add a spec descriptor for github_sso_options"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "kube-arangodb",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"arangobackuppolicies.backup.arangodb.com\" \"arangobackups.backup.arangodb.com\" \"arangodeploymentreplications.replication.database.arangodb.com\" \"arangodeployments.database.arangodb.com\"])",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"arangodeployments.database.arangodb.com does not have a status descriptor",
				"image does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for image",
				"Warning: Value backup.arangodb.com/v1, Kind=ArangoBackup: provided API should have an example annotation",
				"Warning: Value replication.database.arangodb.com/v1, Kind=ArangoDeploymentReplication: provided API should have an example annotation",
				"Warning: Value backup.arangodb.com/v1, Kind=ArangoBackupPolicy: provided API should have an example annotation",
				"Add CRD validation for ArangoDeployment/v1"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "kubemq-operator-marketplace",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(kubemq-operator.v1.4.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"kubemqclusters.core.k8s.kubemq.io\" \"kubemqconnectors.core.k8s.kubemq.io\" \"kubemqdashboards.core.k8s.kubemq.io\"])"
			],
			"scorecardErrors": [
				"error spec does not exist"
			],
			"scorecardFailingTests": [
				"basic-check-spec"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "kubeplus",
			"hasValidatorErrors": true,
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorErrors": [
				"(kubeplus.v0.0.1) csv.Spec.Icon elements should contain both data and mediatype"
			],
			"validatorWarnings": [
				"(kubeplus.v0.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"kubeplus.kubeplus.cloudark.io does not have a status descriptor",
				"caBundle does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for caBundle",
				"Add CRD validation for spec field `caBundle` in KubePlus/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "kubeturbo-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(kubeturbo-operator.v8.0.6) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"kubeturbos.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"serverMeta does not have a spec descriptor",
				"targetConfig does not have a spec descriptor",
				"kubeturbos.charts.helm.k8s.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for serverMeta",
				"Add a spec descriptor for targetConfig"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "linstor-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(linstor-operator.v1.4.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "memql-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(memsql-operator.v1.2.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"memsqlclusters.memsql.com\"])"
			],
			"scorecardErrors": [
				"aggregatorSpec does not have a spec descriptor",
				"leafSpec does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for MemsqlCluster/v1alpha1",
				"Add a spec descriptor for aggregatorSpec",
				"Add a spec descriptor for leafSpec"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "mongodb-enterprise",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"mongodb.mongodb.com\" \"mongodbusers.mongodb.com\" \"opsmanagers.mongodb.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"mongodb.mongodb.com does not have a status descriptor",
				"mongodb.mongodb.com does not have a status descriptor",
				"mongodbusers.mongodb.com does not have a status descriptor",
				"opsmanagers.mongodb.com does not have a status descriptor",
				"members does not have a spec descriptor",
				"credentials does not have a spec descriptor",
				"version does not have a spec descriptor",
				"type does not have a spec descriptor",
				"project does not have a spec descriptor",
				"persistent does not have a spec descriptor",
				"configServerCount does not have a spec descriptor",
				"mongodsPerShardCount does not have a spec descriptor",
				"mongosCount does not have a spec descriptor",
				"project does not have a spec descriptor",
				"version does not have a spec descriptor",
				"credentials does not have a spec descriptor",
				"persistent does not have a spec descriptor",
				"shardCount does not have a spec descriptor",
				"type does not have a spec descriptor",
				"roles does not have a spec descriptor",
				"username does not have a spec descriptor",
				"db does not have a spec descriptor",
				"project does not have a spec descriptor",
				"version does not have a spec descriptor",
				"adminCredentials does not have a spec descriptor",
				"configuration does not have a spec descriptor",
				"applicationDatabase does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `type` in MongoDB/v1",
				"Add CRD validation for spec field `project` in MongoDB/v1",
				"Add CRD validation for spec field `persistent` in MongoDB/v1",
				"Add CRD validation for spec field `members` in MongoDB/v1",
				"Add CRD validation for spec field `credentials` in MongoDB/v1",
				"Add CRD validation for spec field `version` in MongoDB/v1",
				"Add CRD validation for status field `lastTransition` in MongoDB/v1",
				"Add CRD validation for status field `version` in MongoDB/v1",
				"Add CRD validation for status field `type` in MongoDB/v1",
				"Add CRD validation for status field `phase` in MongoDB/v1",
				"Add CRD validation for status field `members` in MongoDB/v1",
				"Add CRD validation for status field `link` in MongoDB/v1",
				"Add CRD validation for spec field `credentials` in MongoDB/v1",
				"Add CRD validation for spec field `persistent` in MongoDB/v1",
				"Add CRD validation for spec field `type` in MongoDB/v1",
				"Add CRD validation for spec field `version` in MongoDB/v1",
				"Add CRD validation for spec field `configServerCount` in MongoDB/v1",
				"Add CRD validation for spec field `mongodsPerShardCount` in MongoDB/v1",
				"Add CRD validation for spec field `mongosCount` in MongoDB/v1",
				"Add CRD validation for spec field `project` in MongoDB/v1",
				"Add CRD validation for spec field `shardCount` in MongoDB/v1",
				"Add CRD validation for status field `lastTransition` in MongoDB/v1",
				"Add CRD validation for status field `phase` in MongoDB/v1",
				"Add CRD validation for spec field `adminCredentials` in MongoDBOpsManager/v1",
				"Add CRD validation for spec field `configuration` in MongoDBOpsManager/v1",
				"Add a spec descriptor for members",
				"Add a spec descriptor for credentials",
				"Add a spec descriptor for version",
				"Add a spec descriptor for type",
				"Add a spec descriptor for project",
				"Add a spec descriptor for persistent",
				"Add a spec descriptor for configServerCount",
				"Add a spec descriptor for mongodsPerShardCount",
				"Add a spec descriptor for mongosCount",
				"Add a spec descriptor for project",
				"Add a spec descriptor for version",
				"Add a spec descriptor for credentials",
				"Add a spec descriptor for persistent",
				"Add a spec descriptor for shardCount",
				"Add a spec descriptor for type",
				"Add a spec descriptor for roles",
				"Add a spec descriptor for username",
				"Add a spec descriptor for db",
				"Add a spec descriptor for project",
				"Add a spec descriptor for version",
				"Add a spec descriptor for adminCredentials",
				"Add a spec descriptor for configuration",
				"Add a spec descriptor for applicationDatabase"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "nastel-navigator-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD",
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(nastel-navigator-operator.v1.100107.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"nastelnavigators.navigator.nastel.com\"]),ClusterRole: ([\"nastel-navigator-operator-metrics-reader\"]),"
			],
			"scorecardErrors": [
				"cep-wgs does not have a spec descriptor",
				"wgs-mysql does not have a spec descriptor",
				"domain does not have a spec descriptor",
				"global does not have a spec descriptor",
				"navigator does not have a spec descriptor",
				"nsqcm does not have a spec descriptor",
				"nastelnavigators.navigator.nastel.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for cep-wgs",
				"Add a spec descriptor for wgs-mysql",
				"Add a spec descriptor for domain",
				"Add a spec descriptor for global",
				"Add a spec descriptor for navigator",
				"Add a spec descriptor for nsqcm",
				"Add CRD validation for spec field `cep-wgs` in NastelNavigator/v1alpha6",
				"Add CRD validation for spec field `wgs-mysql` in NastelNavigator/v1alpha6",
				"Add CRD validation for spec field `domain` in NastelNavigator/v1alpha6",
				"Add CRD validation for spec field `global` in NastelNavigator/v1alpha6",
				"Add CRD validation for spec field `navigator` in NastelNavigator/v1alpha6",
				"Add CRD validation for spec field `nsqcm` in NastelNavigator/v1alpha6"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "nastel-xray-operator",
			"kindsDeprecateAPIs": [
				"CRD",
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(nastel-xray-operator.v1.324.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"nastelxrays.xray.nastel.com\"]),ClusterRole: ([\"nastel-xray-operator-metrics-reader\"]),"
			],
			"scorecardErrors": [
				"nastelxrays.xray.nastel.com does not have a status descriptor",
				"solr-node does not have a spec descriptor",
				"storm-keeper does not have a spec descriptor",
				"xray does not have a spec descriptor",
				"xray-ml-persistance does not have a spec descriptor",
				"xray-storm-topologies does not have a spec descriptor",
				"ap-domain does not have a spec descriptor",
				"global does not have a spec descriptor",
				"storm does not have a spec descriptor",
				"xray-cep does not have a spec descriptor",
				"xray-ml-queries does not have a spec descriptor",
				"xray-ml-train does not have a spec descriptor",
				"active-mq does not have a spec descriptor",
				"solr-keeper does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `storm-keeper` in NastelXRay/v1alpha3",
				"Add CRD validation for spec field `xray-cep` in NastelXRay/v1alpha3",
				"Add CRD validation for spec field `xray-ml-queries` in NastelXRay/v1alpha3",
				"Add CRD validation for spec field `active-mq` in NastelXRay/v1alpha3",
				"Add CRD validation for spec field `solr-keeper` in NastelXRay/v1alpha3",
				"Add CRD validation for spec field `storm` in NastelXRay/v1alpha3",
				"Add CRD validation for spec field `xray` in NastelXRay/v1alpha3",
				"Add CRD validation for spec field `xray-ml-persistance` in NastelXRay/v1alpha3",
				"Add CRD validation for spec field `xray-ml-train` in NastelXRay/v1alpha3",
				"Add CRD validation for spec field `xray-storm-topologies` in NastelXRay/v1alpha3",
				"Add CRD validation for spec field `ap-domain` in NastelXRay/v1alpha3",
				"Add CRD validation for spec field `global` in NastelXRay/v1alpha3",
				"Add CRD validation for spec field `solr-node` in NastelXRay/v1alpha3",
				"Add a spec descriptor for solr-node",
				"Add a spec descriptor for storm-keeper",
				"Add a spec descriptor for xray",
				"Add a spec descriptor for xray-ml-persistance",
				"Add a spec descriptor for xray-storm-topologies",
				"Add a spec descriptor for ap-domain",
				"Add a spec descriptor for global",
				"Add a spec descriptor for storm",
				"Add a spec descriptor for xray-cep",
				"Add a spec descriptor for xray-ml-queries",
				"Add a spec descriptor for xray-ml-train",
				"Add a spec descriptor for active-mq",
				"Add a spec descriptor for solr-keeper"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "neuvector-certified-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(neuvector-operator.v1.2.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"neuvectors.apm.neuvector.com\"])"
			],
			"scorecardErrors": [
				"resources does not have a spec descriptor",
				"containerd does not have a spec descriptor",
				"controller does not have a spec descriptor",
				"cve does not have a spec descriptor",
				"imagePullSecrets does not have a spec descriptor",
				"enforcer does not have a spec descriptor",
				"exporter does not have a spec descriptor",
				"manager does not have a spec descriptor",
				"openshift does not have a spec descriptor",
				"admissionwebhook does not have a spec descriptor",
				"crdwebhook does not have a spec descriptor",
				"crio does not have a spec descriptor",
				"docker does not have a spec descriptor",
				"neuvectors.apm.neuvector.com does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for resources",
				"Add a spec descriptor for containerd",
				"Add a spec descriptor for controller",
				"Add a spec descriptor for cve",
				"Add a spec descriptor for imagePullSecrets",
				"Add a spec descriptor for enforcer",
				"Add a spec descriptor for exporter",
				"Add a spec descriptor for manager",
				"Add a spec descriptor for openshift",
				"Add a spec descriptor for admissionwebhook",
				"Add a spec descriptor for crdwebhook",
				"Add a spec descriptor for crio",
				"Add a spec descriptor for docker",
				"Add CRD validation for Neuvector/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "nginx-ingress-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(nginx-ingress-operator.v0.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"nginxingresscontrollers.k8s.nginx.org\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "node-red-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(node-red-operator.v0.0.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"noderedbackups.nodered.com\" \"noderedrestores.nodered.com\" \"nodereds.nodered.com\"])"
			],
			"scorecardErrors": [
				"adminpassword does not have a spec descriptor",
				"persistentvolume does not have a spec descriptor",
				"secretkey does not have a spec descriptor",
				"size does not have a spec descriptor",
				"backup does not have a spec descriptor",
				"ibm_s3 does not have a spec descriptor",
				"restore_file_name does not have a spec descriptor",
				"ibm_s3 does not have a spec descriptor",
				"noderedbackups.nodered.com does not have a status descriptor",
				"noderedrestores.nodered.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `adminpassword` in NodeRed/v1alpha1",
				"Add CRD validation for spec field `persistentvolume` in NodeRed/v1alpha1",
				"Add CRD validation for spec field `secretkey` in NodeRed/v1alpha1",
				"Add CRD validation for spec field `size` in NodeRed/v1alpha1",
				"Add CRD validation for spec field `backup` in NodeRedBackup/v1alpha1",
				"Add CRD validation for spec field `ibm_s3` in NodeRedBackup/v1alpha1",
				"Add CRD validation for spec field `restore_file_name` in NodeRedRestore/v1alpha1",
				"Add CRD validation for spec field `ibm_s3` in NodeRedRestore/v1alpha1",
				"Add a spec descriptor for adminpassword",
				"Add a spec descriptor for persistentvolume",
				"Add a spec descriptor for secretkey",
				"Add a spec descriptor for size",
				"Add a spec descriptor for backup",
				"Add a spec descriptor for ibm_s3",
				"Add a spec descriptor for restore_file_name",
				"Add a spec descriptor for ibm_s3"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "nsx-container-plugin-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(nsx-container-plugin-operator.v0.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"ncpinstalls.operator.nsx.vmware.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "nuodb-ce-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"nuodbinsightsservers.nuodb.com\" \"nuodbs.nuodb.com\" \"nuodbycsbwls.nuodb.com\"])"
			],
			"scorecardErrors": [
				"ycsbContainer does not have a spec descriptor",
				"dbName does not have a spec descriptor",
				"ycsbWorkloadCount does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for ycsbContainer",
				"Add a spec descriptor for dbName",
				"Add a spec descriptor for ycsbWorkloadCount"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "nvmesh-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(nvmesh-operator.0.7.0) csv.metadata.Name nvmesh-operator.0.7.0 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"nvmeshes.nvmesh.excelero.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "nxiq-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(nxiq-operator-certified.v1.99.0-1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"nexusiqs.sonatype.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"nexusiqs.sonatype.com does not have a status descriptor",
				"imagePullSecrets does not have a spec descriptor",
				"nameOverride does not have a spec descriptor",
				"persistence does not have a spec descriptor",
				"service does not have a spec descriptor",
				"serviceAccount does not have a spec descriptor",
				"deployment does not have a spec descriptor",
				"fullnameOverride does not have a spec descriptor",
				"ingress does not have a spec descriptor",
				"iq does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for imagePullSecrets",
				"Add a spec descriptor for nameOverride",
				"Add a spec descriptor for persistence",
				"Add a spec descriptor for service",
				"Add a spec descriptor for serviceAccount",
				"Add a spec descriptor for deployment",
				"Add a spec descriptor for fullnameOverride",
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for iq",
				"Add CRD validation for spec field `nameOverride` in NexusIQ/v1alpha1",
				"Add CRD validation for spec field `persistence` in NexusIQ/v1alpha1",
				"Add CRD validation for spec field `serviceAccount` in NexusIQ/v1alpha1",
				"Add CRD validation for spec field `deployment` in NexusIQ/v1alpha1",
				"Add CRD validation for spec field `fullnameOverride` in NexusIQ/v1alpha1",
				"Add CRD validation for spec field `imagePullSecrets` in NexusIQ/v1alpha1",
				"Add CRD validation for spec field `ingress` in NexusIQ/v1alpha1",
				"Add CRD validation for spec field `iq` in NexusIQ/v1alpha1",
				"Add CRD validation for spec field `service` in NexusIQ/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "nxrm-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(nxrm-operator-certified.v3.27.0-1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"nexusrepos.sonatype.com\"])"
			],
			"scorecardErrors": [
				"nexusrepos.sonatype.com does not have a status descriptor",
				"persistence does not have a spec descriptor",
				"route does not have a spec descriptor",
				"deployment does not have a spec descriptor",
				"deploymentStrategy does not have a spec descriptor",
				"nexus does not have a spec descriptor",
				"nexusProxyRoute does not have a spec descriptor",
				"service does not have a spec descriptor",
				"statefulset does not have a spec descriptor",
				"tolerations does not have a spec descriptor",
				"config does not have a spec descriptor",
				"ingress does not have a spec descriptor",
				"replicaCount does not have a spec descriptor",
				"secret does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for persistence",
				"Add a spec descriptor for route",
				"Add a spec descriptor for deployment",
				"Add a spec descriptor for deploymentStrategy",
				"Add a spec descriptor for nexus",
				"Add a spec descriptor for nexusProxyRoute",
				"Add a spec descriptor for service",
				"Add a spec descriptor for statefulset",
				"Add a spec descriptor for tolerations",
				"Add a spec descriptor for config",
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for replicaCount",
				"Add a spec descriptor for secret",
				"Add CRD validation for spec field `deployment` in NexusRepo/v1alpha1",
				"Add CRD validation for spec field `route` in NexusRepo/v1alpha1",
				"Add CRD validation for spec field `secret` in NexusRepo/v1alpha1",
				"Add CRD validation for spec field `service` in NexusRepo/v1alpha1",
				"Add CRD validation for spec field `replicaCount` in NexusRepo/v1alpha1",
				"Add CRD validation for spec field `statefulset` in NexusRepo/v1alpha1",
				"Add CRD validation for spec field `config` in NexusRepo/v1alpha1",
				"Add CRD validation for spec field `deploymentStrategy` in NexusRepo/v1alpha1",
				"Add CRD validation for spec field `ingress` in NexusRepo/v1alpha1",
				"Add CRD validation for spec field `nexus` in NexusRepo/v1alpha1",
				"Add CRD validation for spec field `nexusProxyRoute` in NexusRepo/v1alpha1",
				"Add CRD validation for spec field `persistence` in NexusRepo/v1alpha1",
				"Add CRD validation for spec field `tolerations` in NexusRepo/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "oneagent-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"oneagentapms.dynatrace.com\" \"oneagents.dynatrace.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "open-liberty-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(open-liberty-operator.v0.7.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"openlibertyapplications.openliberty.io\" \"openlibertydumps.openliberty.io\" \"openlibertytraces.openliberty.io\"])"
			],
			"scorecardErrors": [
				"openlibertydumps.openliberty.io does not have a status descriptor",
				"openlibertytraces.openliberty.io does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"podName does not have a spec descriptor",
				"include does not have a spec descriptor",
				"podName does not have a spec descriptor",
				"traceSpecification does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for podName",
				"Add a spec descriptor for include",
				"Add a spec descriptor for podName",
				"Add a spec descriptor for traceSpecification"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "openshiftartifactoryha-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(artifactory-ha-operator.v1.1.10) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"openshiftartifactoryhas.charts.helm.k8s.io\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "openshiftpipeline-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(pipeline-operator.v1.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"openshiftpipelines.charts.helm.k8s.io\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "openshiftxray-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(xray-operator.v2.0.1) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"openshiftxrays.charts.helm.k8s.io\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "openunison-ocp-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(openunison.1.0.0) csv.metadata.Name openunison.1.0.0 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"openunisons.openunison.tremolo.io\"])"
			],
			"scorecardErrors": [
				"openunisons.openunison.tremolo.io does not have a status descriptor",
				"enable_activemq does not have a spec descriptor",
				"dest_secret does not have a spec descriptor",
				"source_secret does not have a spec descriptor",
				"secret_data does not have a spec descriptor",
				"non_secret_data does not have a spec descriptor",
				"openunison_network_configuration does not have a spec descriptor",
				"openshift does not have a spec descriptor",
				"replicas does not have a spec descriptor",
				"key_store does not have a spec descriptor",
				"hosts does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for enable_activemq",
				"Add a spec descriptor for dest_secret",
				"Add a spec descriptor for source_secret",
				"Add a spec descriptor for secret_data",
				"Add a spec descriptor for non_secret_data",
				"Add a spec descriptor for openunison_network_configuration",
				"Add a spec descriptor for openshift",
				"Add a spec descriptor for replicas",
				"Add a spec descriptor for key_store",
				"Add a spec descriptor for hosts"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "orca",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"orcas.tufin.io\" \"policies.networking.tufin.io\"])"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `namespace` in Orca/v1alpha1",
				"Add CRD validation for spec field `project` in Orca/v1alpha1",
				"Add CRD validation for spec field `components` in Orca/v1alpha1",
				"Add CRD validation for spec field `domain` in Orca/v1alpha1",
				"Add CRD validation for spec field `endpoints` in Orca/v1alpha1",
				"Add CRD validation for spec field `ignored_config_maps` in Orca/v1alpha1",
				"Add CRD validation for spec field `images` in Orca/v1alpha1",
				"Add CRD validation for spec field `kube_platform` in Orca/v1alpha1",
				"Add CRD validation for status field `phase` in Orca/v1alpha1",
				"Add CRD validation for spec field `mode` in Policy/v1",
				"Add CRD validation for spec field `networkPolicyAllowAll` in Policy/v1",
				"Add CRD validation for spec field `rules` in Policy/v1",
				"Add CRD validation for status field `phase` in Policy/v1"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "ovms-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(ovms-operator.v0.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"ovms.intel.com does not have a status descriptor",
				"rest_port does not have a spec descriptor",
				"aws_secret_access_key does not have a spec descriptor",
				"config_configmap_name does not have a spec descriptor",
				"grpc_port does not have a spec descriptor",
				"image_name does not have a spec descriptor",
				"model_path does not have a spec descriptor",
				"models_volume_claim does not have a spec descriptor",
				"replicas does not have a spec descriptor",
				"s3_compat_api_endpoint does not have a spec descriptor",
				"service_type does not have a spec descriptor",
				"aws_region does not have a spec descriptor",
				"gcp_creds_secret_name does not have a spec descriptor",
				"https_proxy does not have a spec descriptor",
				"models_host_path does not have a spec descriptor",
				"nireq does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"target_device does not have a spec descriptor",
				"aws_access_key_id does not have a spec descriptor",
				"log_level does not have a spec descriptor",
				"plugin_config does not have a spec descriptor",
				"model_name does not have a spec descriptor",
				"security_context does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `log_level` in Ovms/v1alpha1",
				"Add CRD validation for spec field `model_name` in Ovms/v1alpha1",
				"Add CRD validation for spec field `s3_compat_api_endpoint` in Ovms/v1alpha1",
				"Add CRD validation for spec field `security_context` in Ovms/v1alpha1",
				"Add CRD validation for spec field `service_type` in Ovms/v1alpha1",
				"Add CRD validation for spec field `gcp_creds_secret_name` in Ovms/v1alpha1",
				"Add CRD validation for spec field `https_proxy` in Ovms/v1alpha1",
				"Add CRD validation for spec field `image_name` in Ovms/v1alpha1",
				"Add CRD validation for spec field `model_path` in Ovms/v1alpha1",
				"Add CRD validation for spec field `models_host_path` in Ovms/v1alpha1",
				"Add CRD validation for spec field `target_device` in Ovms/v1alpha1",
				"Add CRD validation for spec field `aws_secret_access_key` in Ovms/v1alpha1",
				"Add CRD validation for spec field `config_configmap_name` in Ovms/v1alpha1",
				"Add CRD validation for spec field `models_volume_claim` in Ovms/v1alpha1",
				"Add CRD validation for spec field `resources` in Ovms/v1alpha1",
				"Add CRD validation for spec field `aws_access_key_id` in Ovms/v1alpha1",
				"Add CRD validation for spec field `aws_region` in Ovms/v1alpha1",
				"Add CRD validation for spec field `grpc_port` in Ovms/v1alpha1",
				"Add CRD validation for spec field `nireq` in Ovms/v1alpha1",
				"Add CRD validation for spec field `plugin_config` in Ovms/v1alpha1",
				"Add CRD validation for spec field `replicas` in Ovms/v1alpha1",
				"Add CRD validation for spec field `rest_port` in Ovms/v1alpha1",
				"Add a spec descriptor for rest_port",
				"Add a spec descriptor for aws_secret_access_key",
				"Add a spec descriptor for config_configmap_name",
				"Add a spec descriptor for grpc_port",
				"Add a spec descriptor for image_name",
				"Add a spec descriptor for model_path",
				"Add a spec descriptor for models_volume_claim",
				"Add a spec descriptor for replicas",
				"Add a spec descriptor for s3_compat_api_endpoint",
				"Add a spec descriptor for service_type",
				"Add a spec descriptor for aws_region",
				"Add a spec descriptor for gcp_creds_secret_name",
				"Add a spec descriptor for https_proxy",
				"Add a spec descriptor for models_host_path",
				"Add a spec descriptor for nireq",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for target_device",
				"Add a spec descriptor for aws_access_key_id",
				"Add a spec descriptor for log_level",
				"Add a spec descriptor for plugin_config",
				"Add a spec descriptor for model_name",
				"Add a spec descriptor for security_context"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "perceptilabs-operator-package",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(perceptilabs-operator.v1.0.21) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"perceptilabs.perceptilabs.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"ryggPvc does not have a spec descriptor",
				"coreGpus does not have a spec descriptor",
				"license_name does not have a spec descriptor",
				"license_value does not have a spec descriptor",
				"corePvc does not have a spec descriptor",
				"perceptilabs.perceptilabs.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for PerceptiLabs/v1",
				"Add a spec descriptor for ryggPvc",
				"Add a spec descriptor for coreGpus",
				"Add a spec descriptor for license_name",
				"Add a spec descriptor for license_value",
				"Add a spec descriptor for corePvc"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "percona-server-mongodb-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(percona-server-mongodb-operator.v1.7.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"perconaservermongodbbackups.psmdb.percona.com\" \"perconaservermongodbrestores.psmdb.percona.com\" \"perconaservermongodbs.psmdb.percona.com\"])"
			],
			"scorecardErrors": [
				"imagePullPolicy does not have a spec descriptor",
				"updateStrategy does not have a spec descriptor",
				"secrets does not have a spec descriptor",
				"sharding does not have a spec descriptor",
				"backup does not have a spec descriptor",
				"crVersion does not have a spec descriptor",
				"image does not have a spec descriptor",
				"allowUnsafeConfigurations does not have a spec descriptor",
				"upgradeOptions does not have a spec descriptor",
				"pmm does not have a spec descriptor",
				"replsets does not have a spec descriptor",
				"mongod does not have a spec descriptor",
				"psmdbCluster does not have a spec descriptor",
				"storageName does not have a spec descriptor",
				"backupName does not have a spec descriptor",
				"clusterName does not have a spec descriptor",
				"perconaservermongodbs.psmdb.percona.com does not have a status descriptor",
				"perconaservermongodbbackups.psmdb.percona.com does not have a status descriptor",
				"perconaservermongodbrestores.psmdb.percona.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for imagePullPolicy",
				"Add a spec descriptor for updateStrategy",
				"Add a spec descriptor for secrets",
				"Add a spec descriptor for sharding",
				"Add a spec descriptor for backup",
				"Add a spec descriptor for crVersion",
				"Add a spec descriptor for image",
				"Add a spec descriptor for allowUnsafeConfigurations",
				"Add a spec descriptor for upgradeOptions",
				"Add a spec descriptor for pmm",
				"Add a spec descriptor for replsets",
				"Add a spec descriptor for mongod",
				"Add a spec descriptor for psmdbCluster",
				"Add a spec descriptor for storageName",
				"Add a spec descriptor for backupName",
				"Add a spec descriptor for clusterName",
				"Add CRD validation for PerconaServerMongoDB/v1-7-0",
				"Add CRD validation for PerconaServerMongoDBBackup/v1",
				"Add CRD validation for PerconaServerMongoDBRestore/v1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "percona-xtradb-cluster-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(percona-xtradb-cluster-operator.v1.7.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"perconaxtradbbackups.pxc.percona.com\" \"perconaxtradbclusterbackups.pxc.percona.com\" \"perconaxtradbclusterrestores.pxc.percona.com\" \"perconaxtradbclusters.pxc.percona.com\"])"
			],
			"scorecardErrors": [
				"perconaxtradbclusters.pxc.percona.com does not have a status descriptor",
				"perconaxtradbclusterbackups.pxc.percona.com does not have a status descriptor",
				"perconaxtradbbackups.pxc.percona.com does not have a status descriptor",
				"perconaxtradbclusterrestores.pxc.percona.com does not have a status descriptor",
				"perconaxtradbclusterbackups.pxc.percona.com does not have a status descriptor",
				"perconaxtradbbackups.pxc.percona.com does not have a status descriptor",
				"perconaxtradbclusterrestores.pxc.percona.com does not have a status descriptor",
				"updateStrategy does not have a spec descriptor",
				"upgradeOptions does not have a spec descriptor",
				"pxc does not have a spec descriptor",
				"backup does not have a spec descriptor",
				"proxysql does not have a spec descriptor",
				"crVersion does not have a spec descriptor",
				"sslSecretName does not have a spec descriptor",
				"logCollectorSecretName does not have a spec descriptor",
				"allowUnsafeConfigurations does not have a spec descriptor",
				"vaultSecretName does not have a spec descriptor",
				"sslInternalSecretName does not have a spec descriptor",
				"pmm does not have a spec descriptor",
				"secretsName does not have a spec descriptor",
				"haproxy does not have a spec descriptor",
				"logcollector does not have a spec descriptor",
				"pxcCluster does not have a spec descriptor",
				"storageName does not have a spec descriptor",
				"pxcCluster does not have a spec descriptor",
				"storageName does not have a spec descriptor",
				"pxcCluster does not have a spec descriptor",
				"backupName does not have a spec descriptor",
				"pxcCluster does not have a spec descriptor",
				"storageName does not have a spec descriptor",
				"pxcCluster does not have a spec descriptor",
				"storageName does not have a spec descriptor",
				"pxcCluster does not have a spec descriptor",
				"backupName does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for updateStrategy",
				"Add a spec descriptor for upgradeOptions",
				"Add a spec descriptor for pxc",
				"Add a spec descriptor for backup",
				"Add a spec descriptor for proxysql",
				"Add a spec descriptor for crVersion",
				"Add a spec descriptor for sslSecretName",
				"Add a spec descriptor for logCollectorSecretName",
				"Add a spec descriptor for allowUnsafeConfigurations",
				"Add a spec descriptor for vaultSecretName",
				"Add a spec descriptor for sslInternalSecretName",
				"Add a spec descriptor for pmm",
				"Add a spec descriptor for secretsName",
				"Add a spec descriptor for haproxy",
				"Add a spec descriptor for logcollector",
				"Add a spec descriptor for pxcCluster",
				"Add a spec descriptor for storageName",
				"Add a spec descriptor for pxcCluster",
				"Add a spec descriptor for storageName",
				"Add a spec descriptor for pxcCluster",
				"Add a spec descriptor for backupName",
				"Add a spec descriptor for pxcCluster",
				"Add a spec descriptor for storageName",
				"Add a spec descriptor for pxcCluster",
				"Add a spec descriptor for storageName",
				"Add a spec descriptor for pxcCluster",
				"Add a spec descriptor for backupName",
				"Add CRD validation for PerconaXtraDBCluster/v1-7-0",
				"Add CRD validation for PerconaXtraDBClusterBackup/v1",
				"Add CRD validation for PerconaXtraDBBackup/v1alpha1",
				"Add CRD validation for PerconaXtraDBClusterRestore/v1",
				"Add CRD validation for PerconaXtraDBClusterBackup/v1",
				"Add CRD validation for PerconaXtraDBBackup/v1alpha1",
				"Add CRD validation for PerconaXtraDBClusterRestore/v1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "portshift-controller-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(portshift-operator.v0.1.6) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"portshiftinstallers.portshift.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"portshiftinstallers.portshift.io does not have a status descriptor",
				"portshiftClusterId does not have a spec descriptor",
				"managementUrl does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for portshiftClusterId",
				"Add a spec descriptor for managementUrl"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "portworx-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"storageclusters.core.libopenstorage.org\" \"storagenodes.core.libopenstorage.org\"])"
			],
			"scorecardErrors": [
				"error spec does not exist",
				"autopilot does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for autopilot"
			],
			"scorecardFailingTests": [
				"basic-check-spec",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "presto-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(starburst-presto-helm-operator.v350.1.1-ubi) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"starbursthives.charts.starburstdata.com\" \"starburstprestoes.charts.starburstdata.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"env does not have a spec descriptor",
				"podAnnotations does not have a spec descriptor",
				"deploymentAnnotations does not have a spec descriptor",
				"affinity does not have a spec descriptor",
				"initFile does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"objectStorage does not have a spec descriptor",
				"registryCredentials does not have a spec descriptor",
				"starburst-charts-common does not have a spec descriptor",
				"tolerations does not have a spec descriptor",
				"additionalVolumes does not have a spec descriptor",
				"expose does not have a spec descriptor",
				"extraArguments does not have a spec descriptor",
				"hdfs does not have a spec descriptor",
				"heapSizePercentage does not have a spec descriptor",
				"imagePullSecrets does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"database does not have a spec descriptor",
				"image does not have a spec descriptor",
				"envFrom does not have a spec descriptor",
				"image does not have a spec descriptor",
				"initFile does not have a spec descriptor",
				"initImage does not have a spec descriptor",
				"query does not have a spec descriptor",
				"readinessProbe does not have a spec descriptor",
				"usageMetrics does not have a spec descriptor",
				"catalogs does not have a spec descriptor",
				"extraSecret does not have a spec descriptor",
				"prometheus does not have a spec descriptor",
				"registryCredentials does not have a spec descriptor",
				"securityContext does not have a spec descriptor",
				"spilling does not have a spec descriptor",
				"starburst-charts-common does not have a spec descriptor",
				"cache does not have a spec descriptor",
				"environment does not have a spec descriptor",
				"livenessProbe does not have a spec descriptor",
				"sharedSecret does not have a spec descriptor",
				"additionalVolumes does not have a spec descriptor",
				"coordinator does not have a spec descriptor",
				"expose does not have a spec descriptor",
				"externalSecrets does not have a spec descriptor",
				"extraArguments does not have a spec descriptor",
				"imagePullSecrets does not have a spec descriptor",
				"internal does not have a spec descriptor",
				"userDatabase does not have a spec descriptor",
				"worker does not have a spec descriptor",
				"starbursthives.charts.starburstdata.com does not have a status descriptor",
				"starburstprestoes.charts.starburstdata.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `image` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `deploymentAnnotations` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `heapSizePercentage` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `imagePullSecrets` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `initFile` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `podAnnotations` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `tolerations` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `env` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `expose` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `hdfs` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `objectStorage` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `registryCredentials` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `starburst-charts-common` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `additionalVolumes` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `affinity` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `database` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `envFrom` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `extraArguments` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `nodeSelector` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `resources` in StarburstHive/v1alpha1",
				"Add CRD validation for spec field `readinessProbe` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `cache` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `coordinator` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `externalSecrets` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `extraArguments` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `initImage` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `internal` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `query` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `registryCredentials` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `securityContext` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `spilling` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `starburst-charts-common` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `image` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `imagePullSecrets` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `sharedSecret` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `usageMetrics` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `additionalVolumes` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `catalogs` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `expose` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `livenessProbe` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `userDatabase` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `worker` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `environment` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `extraSecret` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `initFile` in StarburstPresto/v1alpha1",
				"Add CRD validation for spec field `prometheus` in StarburstPresto/v1alpha1",
				"Add a spec descriptor for env",
				"Add a spec descriptor for podAnnotations",
				"Add a spec descriptor for deploymentAnnotations",
				"Add a spec descriptor for affinity",
				"Add a spec descriptor for initFile",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for objectStorage",
				"Add a spec descriptor for registryCredentials",
				"Add a spec descriptor for starburst-charts-common",
				"Add a spec descriptor for tolerations",
				"Add a spec descriptor for additionalVolumes",
				"Add a spec descriptor for expose",
				"Add a spec descriptor for extraArguments",
				"Add a spec descriptor for hdfs",
				"Add a spec descriptor for heapSizePercentage",
				"Add a spec descriptor for imagePullSecrets",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for database",
				"Add a spec descriptor for image",
				"Add a spec descriptor for envFrom",
				"Add a spec descriptor for image",
				"Add a spec descriptor for initFile",
				"Add a spec descriptor for initImage",
				"Add a spec descriptor for query",
				"Add a spec descriptor for readinessProbe",
				"Add a spec descriptor for usageMetrics",
				"Add a spec descriptor for catalogs",
				"Add a spec descriptor for extraSecret",
				"Add a spec descriptor for prometheus",
				"Add a spec descriptor for registryCredentials",
				"Add a spec descriptor for securityContext",
				"Add a spec descriptor for spilling",
				"Add a spec descriptor for starburst-charts-common",
				"Add a spec descriptor for cache",
				"Add a spec descriptor for environment",
				"Add a spec descriptor for livenessProbe",
				"Add a spec descriptor for sharedSecret",
				"Add a spec descriptor for additionalVolumes",
				"Add a spec descriptor for coordinator",
				"Add a spec descriptor for expose",
				"Add a spec descriptor for externalSecrets",
				"Add a spec descriptor for extraArguments",
				"Add a spec descriptor for imagePullSecrets",
				"Add a spec descriptor for internal",
				"Add a spec descriptor for userDatabase",
				"Add a spec descriptor for worker"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "prisma-cloud-compute-console-operator.v2.0.1",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(prisma-cloud-compute-console-operator.v1.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"twistlockconsoles.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"HIGH_AVAILABILITY_PORT does not have a spec descriptor",
				"READ_ONLY_FS does not have a spec descriptor",
				"DEFENDER_CN does not have a spec descriptor",
				"HIGH_AVAILABILITY_STATE does not have a spec descriptor",
				"DATA_RECOVERY_ENABLED does not have a spec descriptor",
				"DATA_RECOVERY_VOLUME does not have a spec descriptor",
				"MANAGEMENT_PORT_HTTP does not have a spec descriptor",
				"persistentVolumeStorage does not have a spec descriptor",
				"privileged does not have a spec descriptor",
				"serviceType does not have a spec descriptor",
				"DOCKER_SOCKET does not have a spec descriptor",
				"DOCKER_TWISTLOCK_TAG does not have a spec descriptor",
				"SCAP_ENABLED does not have a spec descriptor",
				"twistlock_cfg does not have a spec descriptor",
				"COMMUNICATION_PORT does not have a spec descriptor",
				"DATA_FOLDER does not have a spec descriptor",
				"SELINUX_LABEL does not have a spec descriptor",
				"SYSTEMD_ENABLED does not have a spec descriptor",
				"persistentVolumeDataRecoveryFolder does not have a spec descriptor",
				"secrets does not have a spec descriptor",
				"selinux-type does not have a spec descriptor",
				"DEFENDER_LISTENER_TYPE does not have a spec descriptor",
				"RUN_CONSOLE_AS_ROOT does not have a spec descriptor",
				"namespace does not have a spec descriptor",
				"openshift does not have a spec descriptor",
				"persistentVolumeDataFolder does not have a spec descriptor",
				"CONSOLE_CN does not have a spec descriptor",
				"MANAGEMENT_PORT_HTTPS does not have a spec descriptor",
				"HIGH_AVAILABILITY_ENABLED does not have a spec descriptor",
				"consoleImageName does not have a spec descriptor",
				"twistlockconsoles.charts.helm.k8s.io does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for HIGH_AVAILABILITY_PORT",
				"Add a spec descriptor for READ_ONLY_FS",
				"Add a spec descriptor for DEFENDER_CN",
				"Add a spec descriptor for HIGH_AVAILABILITY_STATE",
				"Add a spec descriptor for DATA_RECOVERY_ENABLED",
				"Add a spec descriptor for DATA_RECOVERY_VOLUME",
				"Add a spec descriptor for MANAGEMENT_PORT_HTTP",
				"Add a spec descriptor for persistentVolumeStorage",
				"Add a spec descriptor for privileged",
				"Add a spec descriptor for serviceType",
				"Add a spec descriptor for DOCKER_SOCKET",
				"Add a spec descriptor for DOCKER_TWISTLOCK_TAG",
				"Add a spec descriptor for SCAP_ENABLED",
				"Add a spec descriptor for twistlock_cfg",
				"Add a spec descriptor for COMMUNICATION_PORT",
				"Add a spec descriptor for DATA_FOLDER",
				"Add a spec descriptor for SELINUX_LABEL",
				"Add a spec descriptor for SYSTEMD_ENABLED",
				"Add a spec descriptor for persistentVolumeDataRecoveryFolder",
				"Add a spec descriptor for secrets",
				"Add a spec descriptor for selinux-type",
				"Add a spec descriptor for DEFENDER_LISTENER_TYPE",
				"Add a spec descriptor for RUN_CONSOLE_AS_ROOT",
				"Add a spec descriptor for namespace",
				"Add a spec descriptor for openshift",
				"Add a spec descriptor for persistentVolumeDataFolder",
				"Add a spec descriptor for CONSOLE_CN",
				"Add a spec descriptor for MANAGEMENT_PORT_HTTPS",
				"Add a spec descriptor for HIGH_AVAILABILITY_ENABLED",
				"Add a spec descriptor for consoleImageName",
				"Add CRD validation for TwistlockConsole/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "rapidbiz-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"rapidbizs.api.rapidbiz.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "redhat-marketplace-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(redhat-marketplace-operator.v1.0.6) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"marketplaceconfigs.marketplace.redhat.com\" \"meterbases.marketplace.redhat.com\" \"meterdefinitions.marketplace.redhat.com\" \"meterreports.marketplace.redhat.com\" \"razeedeployments.marketplace.redhat.com\" \"remoteresources3s.marketplace.redhat.com\"])"
			],
			"scorecardErrors": [
				"remoteresources3s.marketplace.redhat.com does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "redis-enterprise-operator-cert",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(redis-enterprise-operator-preview.v6.0.8-20) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"redisenterpriseclusters.app.redislabs.com\" \"redisenterprisedatabases.app.redislabs.com\"])"
			],
			"scorecardErrors": [
				"redisenterprisedatabases.app.redislabs.com does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"persistentSpec does not have a spec descriptor",
				"uiServiceType does not have a spec descriptor",
				"redisEnterpriseNodeResources does not have a spec descriptor",
				"redisEnterpriseImageSpec does not have a spec descriptor",
				"redisEnterpriseCluster does not have a spec descriptor",
				"Bundle validation errors: Expecting annotation \"operators.operatorframework.io.bundle.channel.default.v1\" to have non-empty value"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for persistentSpec",
				"Add a spec descriptor for uiServiceType",
				"Add a spec descriptor for redisEnterpriseNodeResources",
				"Add a spec descriptor for redisEnterpriseImageSpec",
				"Add a spec descriptor for redisEnterpriseCluster"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors",
				"olm-bundle-validation"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "rocketchat-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(rocketchat-operator.v0.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"rocketchats.open.rocket.chat\"])"
			],
			"scorecardErrors": [
				"rocketchats.open.rocket.chat does not have a status descriptor",
				"Owned CRDs do not have resources specified",
				"mongodbSecretName does not have a spec descriptor",
				"rocketchatReplicas does not have a spec descriptor",
				"volumeCapacity does not have a spec descriptor",
				"labels does not have a spec descriptor",
				"memoryLimit does not have a spec descriptor",
				"mongodbDatabase does not have a spec descriptor",
				"mongodbReplicaName does not have a spec descriptor",
				"mongodbReplicas does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `volumeCapacity` in RocketChat/v1alpha1",
				"Add CRD validation for spec field `labels` in RocketChat/v1alpha1",
				"Add CRD validation for spec field `memoryLimit` in RocketChat/v1alpha1",
				"Add CRD validation for spec field `mongodbDatabase` in RocketChat/v1alpha1",
				"Add CRD validation for spec field `mongodbReplicaName` in RocketChat/v1alpha1",
				"Add CRD validation for spec field `mongodbReplicas` in RocketChat/v1alpha1",
				"Add CRD validation for spec field `mongodbSecretName` in RocketChat/v1alpha1",
				"Add CRD validation for spec field `rocketchatReplicas` in RocketChat/v1alpha1",
				"Add a spec descriptor for mongodbSecretName",
				"Add a spec descriptor for rocketchatReplicas",
				"Add a spec descriptor for volumeCapacity",
				"Add a spec descriptor for labels",
				"Add a spec descriptor for memoryLimit",
				"Add a spec descriptor for mongodbDatabase",
				"Add a spec descriptor for mongodbReplicaName",
				"Add a spec descriptor for mongodbReplicas"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "runtime-component-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(runtime-component-operator.v0.7.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"runtimecomponents.app.stacks\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "sanstoragecsi-operator-bundle",
			"hasValidatorErrors": true,
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorErrors": [
				"(sanstoragecsi-operator-bundle.v1.0.0) csv.Spec.Maintainers elements should contain both name and email"
			],
			"validatorWarnings": [
				"(sanstoragecsi-operator-bundle.v1.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"sanstoragecsis.csi.nec.com does not have a status descriptor"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true,
			"hasInfraAnnotation": true
		},
		{
			"packageName": "seldon-deploy-operator",
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(seldon-deploy-operator.v1.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects."
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"seldondeploys.machinelearning.seldon.io does not have a status descriptor",
				"fullnameOverride does not have a spec descriptor",
				"affinity does not have a spec descriptor",
				"enableAppAnalytics does not have a spec descriptor",
				"external does not have a spec descriptor",
				"ingressGateway does not have a spec descriptor",
				"requestLogger does not have a spec descriptor",
				"resources does not have a spec descriptor",
				"virtualService does not have a spec descriptor",
				"alibidetect does not have a spec descriptor",
				"enableAppAuth does not have a spec descriptor",
				"skipVerifyHttpCalls does not have a spec descriptor",
				"env does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"nameOverride does not have a spec descriptor",
				"replicaCount does not have a spec descriptor",
				"service does not have a spec descriptor",
				"serviceAccountName does not have a spec descriptor",
				"ingress does not have a spec descriptor",
				"loadtest does not have a spec descriptor",
				"tolerations does not have a spec descriptor",
				"elasticsearch does not have a spec descriptor",
				"seldon does not have a spec descriptor",
				"image does not have a spec descriptor",
				"prometheus does not have a spec descriptor",
				"rbac does not have a spec descriptor",
				"serviceAccount does not have a spec descriptor",
				"gitops does not have a spec descriptor",
				"openshiftMarketplace does not have a spec descriptor",
				"kfserving does not have a spec descriptor",
				"batchjobs does not have a spec descriptor",
				"docker does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `ingressGateway` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `tolerations` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `alibidetect` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `enableAppAuth` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `serviceAccountName` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `affinity` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `kfserving` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `service` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `skipVerifyHttpCalls` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `gitops` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `nodeSelector` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `prometheus` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `rbac` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `external` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `ingress` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `seldon` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `serviceAccount` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `virtualService` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `nameOverride` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `resources` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `image` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `batchjobs` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `elasticsearch` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `env` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `fullnameOverride` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `loadtest` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `openshiftMarketplace` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `replicaCount` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `requestLogger` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `docker` in SeldonDeploy/v1alpha1",
				"Add CRD validation for spec field `enableAppAnalytics` in SeldonDeploy/v1alpha1",
				"Add a spec descriptor for fullnameOverride",
				"Add a spec descriptor for affinity",
				"Add a spec descriptor for enableAppAnalytics",
				"Add a spec descriptor for external",
				"Add a spec descriptor for ingressGateway",
				"Add a spec descriptor for requestLogger",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for virtualService",
				"Add a spec descriptor for alibidetect",
				"Add a spec descriptor for enableAppAuth",
				"Add a spec descriptor for skipVerifyHttpCalls",
				"Add a spec descriptor for env",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for nameOverride",
				"Add a spec descriptor for replicaCount",
				"Add a spec descriptor for service",
				"Add a spec descriptor for serviceAccountName",
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for loadtest",
				"Add a spec descriptor for tolerations",
				"Add a spec descriptor for elasticsearch",
				"Add a spec descriptor for seldon",
				"Add a spec descriptor for image",
				"Add a spec descriptor for prometheus",
				"Add a spec descriptor for rbac",
				"Add a spec descriptor for serviceAccount",
				"Add a spec descriptor for gitops",
				"Add a spec descriptor for openshiftMarketplace",
				"Add a spec descriptor for kfserving",
				"Add a spec descriptor for batchjobs",
				"Add a spec descriptor for docker"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NOT REQUIRED",
			"hasSupportForAllNamespaces": true
		},
		{
			"packageName": "seldon-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"seldondeployments.machinelearning.seldon.io\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "sematext",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(sematext-operator.v1.0.9) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"sematextagents.sematext.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"sematextagents.sematext.com does not have a status descriptor",
				"region does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for region",
				"Add CRD validation for SematextAgent/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "snyk-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD",
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(snyk-operator-certified.v1.40.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for ClusterRole: ([\"snyk-monitor-metrics-reader\"]),CRD: ([\"snykmonitors.charts.snyk.io\"]),"
			],
			"scorecardErrors": [
				"pvc does not have a spec descriptor",
				"initContainerImage does not have a spec descriptor",
				"image does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for pvc",
				"Add a spec descriptor for initContainerImage",
				"Add a spec descriptor for image"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "splunk-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"indexerclusters.enterprise.splunk.com\" \"licensemasters.enterprise.splunk.com\" \"searchheadclusters.enterprise.splunk.com\" \"sparks.enterprise.splunk.com\" \"standalones.enterprise.splunk.com\"])"
			],
			"scorecardErrors": [
				"indexerclusters.enterprise.splunk.com does not have a status descriptor",
				"licensemasters.enterprise.splunk.com does not have a status descriptor",
				"searchheadclusters.enterprise.splunk.com does not have a status descriptor",
				"sparks.enterprise.splunk.com does not have a status descriptor",
				"standalones.enterprise.splunk.com does not have a status descriptor",
				"replicas does not have a spec descriptor",
				"replicas does not have a spec descriptor",
				"replicas does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for replicas",
				"Add a spec descriptor for replicas",
				"Add a spec descriptor for replicas"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "stonebranch-universalagent-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(universalagent-operator.v1.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"stonebranches.agent.stonebranch.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"stonebranches.agent.stonebranch.com does not have a status descriptor",
				"resources does not have a spec descriptor",
				"serviceAccount does not have a spec descriptor",
				"configmap does not have a spec descriptor",
				"image does not have a spec descriptor",
				"tolerations does not have a spec descriptor",
				"udmlicense does not have a spec descriptor",
				"ingress does not have a spec descriptor",
				"securityContext does not have a spec descriptor",
				"namespace does not have a spec descriptor",
				"nodeSelector does not have a spec descriptor",
				"service does not have a spec descriptor",
				"affinity does not have a spec descriptor",
				"fullnameOverride does not have a spec descriptor",
				"replicaCount does not have a spec descriptor",
				"nameOverride does not have a spec descriptor",
				"podSecurityContext does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `udmlicense` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `ingress` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `nameOverride` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `namespace` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `podSecurityContext` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `replicaCount` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `affinity` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `serviceAccount` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `tolerations` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `nodeSelector` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `resources` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `service` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `configmap` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `fullnameOverride` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `image` in Stonebranch/v1alpha1",
				"Add CRD validation for spec field `securityContext` in Stonebranch/v1alpha1",
				"Add a spec descriptor for resources",
				"Add a spec descriptor for serviceAccount",
				"Add a spec descriptor for configmap",
				"Add a spec descriptor for image",
				"Add a spec descriptor for tolerations",
				"Add a spec descriptor for udmlicense",
				"Add a spec descriptor for ingress",
				"Add a spec descriptor for securityContext",
				"Add a spec descriptor for namespace",
				"Add a spec descriptor for nodeSelector",
				"Add a spec descriptor for service",
				"Add a spec descriptor for affinity",
				"Add a spec descriptor for fullnameOverride",
				"Add a spec descriptor for replicaCount",
				"Add a spec descriptor for nameOverride",
				"Add a spec descriptor for podSecurityContext"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "storageos2",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"jobs.storageos.com\" \"nfsservers.storageos.com\" \"storageosclusters.storageos.com\" \"storageosupgrades.storageos.com\"])",
				"provided API should have an example annotation",
				"provided API should have an example annotation",
				"provided API should have an example annotation"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Warning: Value storageos.com/v1, Kind=Job: provided API should have an example annotation",
				"Warning: Value storageos.com/v1, Kind=NFSServer: provided API should have an example annotation",
				"Warning: Value storageos.com/v1, Kind=StorageOSUpgrade: provided API should have an example annotation"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "synopsys-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(synopsys-operator.2019.8.4) csv.metadata.Name synopsys-operator.2019.8.4 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"alerts.synopsys.com\" \"blackducks.synopsys.com\" \"opssights.synopsys.com\"])"
			],
			"scorecardErrors": [
				"secretName does not have a spec descriptor",
				"alertMemory does not have a spec descriptor",
				"pvcStorageClass does not have a spec descriptor",
				"encryptionPassword does not have a spec descriptor",
				"encryptionGlobalSalt does not have a spec descriptor",
				"cfsslMemory does not have a spec descriptor",
				"persistentStorage does not have a spec descriptor",
				"exposeService does not have a spec descriptor",
				"pvcSize does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for OpsSight/v1",
				"Add CRD validation for Blackduck/v1",
				"Add CRD validation for Alert/v1",
				"Add a spec descriptor for secretName",
				"Add a spec descriptor for alertMemory",
				"Add a spec descriptor for pvcStorageClass",
				"Add a spec descriptor for encryptionPassword",
				"Add a spec descriptor for encryptionGlobalSalt",
				"Add a spec descriptor for cfsslMemory",
				"Add a spec descriptor for persistentStorage",
				"Add a spec descriptor for exposeService",
				"Add a spec descriptor for pvcSize"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "sysdig-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(sysdig-operator.v1.8.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"sysdigagents.sysdig.com\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"sysdigagents.sysdig.com does not have a status descriptor",
				"sysdigagents.sysdig.com does not have a status descriptor",
				"scc does not have a spec descriptor",
				"sysdig does not have a spec descriptor",
				"daemonset does not have a spec descriptor",
				"ebpf does not have a spec descriptor",
				"daemonset does not have a spec descriptor",
				"scc does not have a spec descriptor",
				"sysdig does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for scc",
				"Add a spec descriptor for sysdig",
				"Add a spec descriptor for daemonset",
				"Add a spec descriptor for ebpf",
				"Add a spec descriptor for daemonset",
				"Add a spec descriptor for scc",
				"Add a spec descriptor for sysdig",
				"Add CRD validation for spec field `scc` in SysdigAgent/v1",
				"Add CRD validation for spec field `sysdig` in SysdigAgent/v1",
				"Add CRD validation for spec field `daemonset` in SysdigAgent/v1",
				"Add CRD validation for spec field `scc` in SysdigAgent/v1",
				"Add CRD validation for spec field `sysdig` in SysdigAgent/v1",
				"Add CRD validation for spec field `ebpf` in SysdigAgent/v1",
				"Add CRD validation for spec field `daemonset` in SysdigAgent/v1"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "t8c-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(t8c-operator.v8.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"xls.charts.helm.k8s.io\"])"
			],
			"scorecardErrors": [
				"Owned CRDs do not have resources specified",
				"xls.charts.helm.k8s.io does not have a status descriptor",
				"global does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for global"
			],
			"scorecardFailingTests": [
				"olm-crds-have-resources",
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "tf-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"sdns.tungsten.atsgen.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "tigera-operator",
			"kindsDeprecateAPIs": [
				"UNKNOWN"
			],
			"hasValidatorWarnings": false,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true,
			"errors": [
				"unable to check the removed API(s) for 1 of 1 head bundles of this package"
			]
		},
		{
			"packageName": "timemachine-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(time-machine-operator4.v0.0.4) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"timemachines.tm.solution-soft.com\"])"
			],
			"scorecardErrors": [
				"size does not have a spec descriptor",
				"timemachines.tm.solution-soft.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `size` in TimeMachine/v1alpha1",
				"Add a spec descriptor for size"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "traefikee-redhat-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(traefikee-redhat-certified.v2.0.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"traefikees.containo.us\"])"
			],
			"scorecardErrors": [
				"traefikees.containo.us does not have a status descriptor",
				"cluster does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for Traefikee/v1alpha1",
				"Add a spec descriptor for cluster"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "transform-adv-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(ta-operator.v2.3.4) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"transadvs.charts.ta.cloud.ibm.com\"])"
			],
			"scorecardErrors": [
				"tls does not have a spec descriptor",
				"authentication does not have a spec descriptor",
				"commonServices does not have a spec descriptor",
				"demo does not have a spec descriptor",
				"route does not have a spec descriptor",
				"fips does not have a spec descriptor",
				"couchdb does not have a spec descriptor",
				"transadv does not have a spec descriptor",
				"transadvui does not have a spec descriptor",
				"license does not have a spec descriptor",
				"networkPolicy does not have a spec descriptor",
				"nodePortConfig does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for tls",
				"Add a spec descriptor for authentication",
				"Add a spec descriptor for commonServices",
				"Add a spec descriptor for demo",
				"Add a spec descriptor for route",
				"Add a spec descriptor for fips",
				"Add a spec descriptor for couchdb",
				"Add a spec descriptor for transadv",
				"Add a spec descriptor for transadvui",
				"Add a spec descriptor for license",
				"Add a spec descriptor for networkPolicy",
				"Add a spec descriptor for nodePortConfig",
				"Add CRD validation for spec field `demo` in TransAdv/v1",
				"Add CRD validation for spec field `route` in TransAdv/v1",
				"Add CRD validation for spec field `tls` in TransAdv/v1",
				"Add CRD validation for spec field `couchdb` in TransAdv/v1",
				"Add CRD validation for spec field `transadvui` in TransAdv/v1",
				"Add CRD validation for spec field `commonServices` in TransAdv/v1",
				"Add CRD validation for spec field `networkPolicy` in TransAdv/v1",
				"Add CRD validation for spec field `nodePortConfig` in TransAdv/v1",
				"Add CRD validation for spec field `authentication` in TransAdv/v1",
				"Add CRD validation for spec field `fips` in TransAdv/v1",
				"Add CRD validation for spec field `transadv` in TransAdv/v1"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "uma-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(uma-operator.v3.0.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"universalmonitoringagents.ca.broadcom.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "vfunction-server-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(vfunction-server-operator.v1.1.18243) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"vfunctionservers.vfunction.com\"])"
			],
			"scorecardErrors": [
				"measurements does not have a spec descriptor",
				"smtp does not have a spec descriptor",
				"tls does not have a spec descriptor",
				"admin does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for measurements",
				"Add a spec descriptor for smtp",
				"Add a spec descriptor for tls",
				"Add a spec descriptor for admin"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "vprotect-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(vprotect-operator.v0.0.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"vprotectdbservernodes.vprotect.storware.com\"])"
			],
			"scorecardErrors": [
				"vprotectdbservernodes.vprotect.storware.com does not have a status descriptor",
				"mariadb does not have a spec descriptor",
				"server does not have a spec descriptor",
				"node does not have a spec descriptor",
				"useImagePullSecret does not have a spec descriptor",
				"imagePullSecretsName does not have a spec descriptor",
				"initcontainerimage does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for mariadb",
				"Add a spec descriptor for server",
				"Add a spec descriptor for node",
				"Add a spec descriptor for useImagePullSecret",
				"Add a spec descriptor for imagePullSecretsName",
				"Add a spec descriptor for initcontainerimage",
				"Add CRD validation for spec field `useImagePullSecret` in VProtectDBServerNode/v1alpha1",
				"Add CRD validation for spec field `imagePullSecretsName` in VProtectDBServerNode/v1alpha1",
				"Add CRD validation for spec field `initcontainerimage` in VProtectDBServerNode/v1alpha1",
				"Add CRD validation for spec field `mariadb` in VProtectDBServerNode/v1alpha1",
				"Add CRD validation for spec field `server` in VProtectDBServerNode/v1alpha1",
				"Add CRD validation for spec field `node` in VProtectDBServerNode/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "wavefront-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(wavefront-operator.v0.1.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"wavefrontcollectors.wavefront.com\" \"wavefrontproxies.wavefront.com\"])"
			],
			"scorecardErrors": [
				"openshift does not have a spec descriptor",
				"storageClaimName does not have a spec descriptor",
				"enableAutoUpgrade does not have a spec descriptor",
				"token does not have a spec descriptor",
				"url does not have a spec descriptor",
				"image does not have a spec descriptor",
				"enableAutoUpgrade does not have a spec descriptor",
				"env does not have a spec descriptor",
				"image does not have a spec descriptor",
				"tolerations does not have a spec descriptor",
				"daemon does not have a spec descriptor",
				"openshift does not have a spec descriptor",
				"useOpenshiftDefaultConfig does not have a spec descriptor",
				"wavefrontproxies.wavefront.com does not have a status descriptor",
				"wavefrontcollectors.wavefront.com does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for openshift",
				"Add a spec descriptor for storageClaimName",
				"Add a spec descriptor for enableAutoUpgrade",
				"Add a spec descriptor for token",
				"Add a spec descriptor for url",
				"Add a spec descriptor for image",
				"Add a spec descriptor for enableAutoUpgrade",
				"Add a spec descriptor for env",
				"Add a spec descriptor for image",
				"Add a spec descriptor for tolerations",
				"Add a spec descriptor for daemon",
				"Add a spec descriptor for openshift",
				"Add a spec descriptor for useOpenshiftDefaultConfig"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "xcrypt-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(zts-xcrypt-operator.v0.0.13) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"xcrypts.xcrypt.zettaset.com\"])"
			],
			"scorecardErrors": [
				"xcrypts.xcrypt.zettaset.com does not have a status descriptor",
				"status does not have a spec descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardSuggestions": [
				"Add a spec descriptor for status",
				"Add CRD validation for spec field `status` in XCrypt/v1alpha1"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-spec-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "xspc-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(xspc-operator.1.5.0) csv.metadata.Name xspc-operator.1.5.0 is not following the recommended naming convention: \u003coperator-name\u003e.v\u003csemver\u003e e.g. memcached-operator.v0.0.1",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"xspcs.csi.hpe.com\"])"
			],
			"scorecardErrors": [
				"xspcs.csi.hpe.com does not have a status descriptor",
				"Owned CRDs do not have resources specified"
			],
			"scorecardFailingTests": [
				"olm-status-descriptors",
				"olm-crds-have-resources"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "yugabyte-operator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorErrors": true,
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorErrors": [
				"(yugabyte-operator.v0.9.0) csv.Spec.Maintainers elements should contain both name and email"
			],
			"validatorWarnings": [
				"(yugabyte-operator.v0.9.0) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"ybclusters.yugabyte.com\"])"
			],
			"scorecardErrors": [
				"subresources does not have a spec descriptor",
				"ybclusters.yugabyte.com does not have a status descriptor",
				"ybclusters.yugabyte.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `subresources` in YBCluster/v1alpha1",
				"Add a spec descriptor for subresources"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "yugabyte-platform-operator-bundle",
			"kindsDeprecateAPIs": [
				"CRD",
				"ClusterRole"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(yugabyte-platform-operator.v0.0.3) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"ybplatforms.yugabyte.com\"]),ClusterRole: ([\"yugabyte-platform-operator-metrics-reader\"]),"
			],
			"scorecardErrors": [
				"ocpCompatibility does not have a spec descriptor",
				"rbac does not have a spec descriptor",
				"securityContext does not have a spec descriptor",
				"tls does not have a spec descriptor",
				"domainName does not have a spec descriptor",
				"helm does not have a spec descriptor",
				"image does not have a spec descriptor",
				"ip_version_support does not have a spec descriptor",
				"yugaware does not have a spec descriptor",
				"helm2Legacy does not have a spec descriptor",
				"ybplatforms.yugabyte.com does not have a status descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `helm` in YBPlatform/v1alpha1",
				"Add CRD validation for spec field `helm2Legacy` in YBPlatform/v1alpha1",
				"Add CRD validation for spec field `ip_version_support` in YBPlatform/v1alpha1",
				"Add CRD validation for spec field `ocpCompatibility` in YBPlatform/v1alpha1",
				"Add CRD validation for spec field `rbac` in YBPlatform/v1alpha1",
				"Add CRD validation for spec field `securityContext` in YBPlatform/v1alpha1",
				"Add CRD validation for spec field `yugaware` in YBPlatform/v1alpha1",
				"Add CRD validation for spec field `domainName` in YBPlatform/v1alpha1",
				"Add CRD validation for spec field `tls` in YBPlatform/v1alpha1",
				"Add CRD validation for spec field `image` in YBPlatform/v1alpha1",
				"Add a spec descriptor for ocpCompatibility",
				"Add a spec descriptor for rbac",
				"Add a spec descriptor for securityContext",
				"Add a spec descriptor for tls",
				"Add a spec descriptor for domainName",
				"Add a spec descriptor for helm",
				"Add a spec descriptor for image",
				"Add a spec descriptor for ip_version_support",
				"Add a spec descriptor for yugaware",
				"Add a spec descriptor for helm2Legacy"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors",
				"olm-status-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForMultiNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "zabbix-operator-certified",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": true,
			"hasScorecardSuggestions": true,
			"validatorWarnings": [
				"(zabbix-operator-certified.v0.0.2) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"zabbixagents.kubernetes.zabbix.com\" \"zabbixappliances.kubernetes.zabbix.com\" \"zabbixfulls.kubernetes.zabbix.com\" \"zabbixproxymysqls.kubernetes.zabbix.com\" \"zabbixproxysqlites.kubernetes.zabbix.com\" \"zabbixservers.kubernetes.zabbix.com\"])"
			],
			"scorecardErrors": [
				"hostname does not have a spec descriptor",
				"tlscipherpsk13 does not have a spec descriptor",
				"java_gateway does not have a spec descriptor",
				"server does not have a spec descriptor",
				"web does not have a spec descriptor",
				"web does not have a spec descriptor",
				"java_gateway does not have a spec descriptor",
				"server does not have a spec descriptor",
				"java_gateway does not have a spec descriptor",
				"proxy does not have a spec descriptor",
				"java_gateway does not have a spec descriptor",
				"proxy does not have a spec descriptor",
				"java_gateway does not have a spec descriptor",
				"server does not have a spec descriptor",
				"web does not have a spec descriptor",
				"tlscipherpsk13 does not have a spec descriptor",
				"hostname does not have a spec descriptor",
				"java_gateway does not have a spec descriptor",
				"server does not have a spec descriptor",
				"web does not have a spec descriptor",
				"java_gateway does not have a spec descriptor",
				"proxy does not have a spec descriptor",
				"java_gateway does not have a spec descriptor",
				"proxy does not have a spec descriptor",
				"server does not have a spec descriptor",
				"java_gateway does not have a spec descriptor",
				"web does not have a spec descriptor",
				"java_gateway does not have a spec descriptor",
				"server does not have a spec descriptor",
				"web does not have a spec descriptor"
			],
			"scorecardSuggestions": [
				"Add CRD validation for spec field `hostname` in ZabbixAgent/v1alpha1",
				"Add CRD validation for spec field `tlscipherpsk13` in ZabbixAgent/v1alpha1",
				"Add CRD validation for spec field `tlscipherpsk13` in ZabbixAgent/v1alpha1",
				"Add CRD validation for spec field `hostname` in ZabbixAgent/v1alpha1",
				"Add a spec descriptor for hostname",
				"Add a spec descriptor for tlscipherpsk13",
				"Add a spec descriptor for java_gateway",
				"Add a spec descriptor for server",
				"Add a spec descriptor for web",
				"Add a spec descriptor for web",
				"Add a spec descriptor for java_gateway",
				"Add a spec descriptor for server",
				"Add a spec descriptor for java_gateway",
				"Add a spec descriptor for proxy",
				"Add a spec descriptor for java_gateway",
				"Add a spec descriptor for proxy",
				"Add a spec descriptor for java_gateway",
				"Add a spec descriptor for server",
				"Add a spec descriptor for web",
				"Add a spec descriptor for tlscipherpsk13",
				"Add a spec descriptor for hostname",
				"Add a spec descriptor for java_gateway",
				"Add a spec descriptor for server",
				"Add a spec descriptor for web",
				"Add a spec descriptor for java_gateway",
				"Add a spec descriptor for proxy",
				"Add a spec descriptor for java_gateway",
				"Add a spec descriptor for proxy",
				"Add a spec descriptor for server",
				"Add a spec descriptor for java_gateway",
				"Add a spec descriptor for web",
				"Add a spec descriptor for java_gateway",
				"Add a spec descriptor for server",
				"Add a spec descriptor for web"
			],
			"scorecardFailingTests": [
				"olm-spec-descriptors"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		},
		{
			"packageName": "zoperator",
			"kindsDeprecateAPIs": [
				"CRD"
			],
			"hasValidatorWarnings": true,
			"hasScorecardFailingTests": false,
			"hasScorecardSuggestions": false,
			"validatorWarnings": [
				"(zoperator.v0.3.6) csv.Spec.minKubeVersion is not informed. It is recommended you provide this information. Otherwise, it would mean that your operator project can be distributed and installed in any cluster version available, which is not necessarily the case for all projects.",
				"this bundle is using APIs which were deprecated and removed in v1.22. More info: https://kubernetes.io/docs/reference/using-api/deprecation-guide/#v1-22. Migrate the API(s) for CRD: ([\"appdefinitions.zadara.com\" \"applicationclones.zadara.com\" \"applicationsnapshots.zadara.com\" \"cloneconfigurations.zadara.com\" \"invokers.zadara.com\" \"snapshotconfigurations.zadara.com\" \"snapshotpolicies.zadara.com\" \"vpsas.zadara.com\"])"
			],
			"hasDeprecateAPIsSuggestionsSet": "NO",
			"hasSupportForAllNamespaces": true,
			"hasSupportForSingleNamespaces": true,
			"hasSupportForOwnNamespaces": true
		}
	],
	"flags": {
		"index-image": "registry.redhat.io/redhat/certified-operator-index:v4.8",
		"limit": 0,
		"filter": "",
		"label": "",
		"labelValue": "",
		"outputPath": "/Users/camilamacedo/go/src/github.com/operator-framework/audit-1/testdata/reports/redhat_certified_operator_index",
		"outputFormat": "all",
		"disableScorecard": false,
		"disableValidators": false
	},
	"IndexImageInspect": {
		"ID": "sha256:414ec051c4eec31a9f8e0e51eb4e0aa92653ca6b1d1c3da6cef92cb4bd21d0ed",
		"Created": "2021-04-27T21:39:54.614373596Z",
		"Config": {
			"Labels": {
				"License": "GPLv2+",
				"architecture": "x86_64",
				"build-date": "2021-03-27T03:46:48.681338",
				"com.redhat.build-host": "cpt-1004.osbs.prod.upshift.rdu2.redhat.com",
				"com.redhat.component": "operator-registry-container",
				"com.redhat.index.delivery.distribution_scope": "prod",
				"com.redhat.index.delivery.version": "v4.8",
				"com.redhat.license_terms": "https://www.redhat.com/agreements",
				"description": "This is a component of OpenShift Operator Lifecycle Manager and is the base for operator catalog API containers.",
				"distribution-scope": "public",
				"io.buildah.version": "1.16.7",
				"io.k8s.description": "This is a component of OpenShift Operator Lifecycle Manager and is the base for operator catalog API containers.",
				"io.k8s.display-name": "OpenShift Operator Registry",
				"io.openshift.build.commit.id": "bc4c9f8f967736a6ff774c52845e8a3ed28e7072",
				"io.openshift.build.commit.url": "https://github.com/operator-framework/operator-registry/commit/bc4c9f8f967736a6ff774c52845e8a3ed28e7072",
				"io.openshift.build.source-location": "https://github.com/operator-framework/operator-registry",
				"io.openshift.maintainer.component": "OLM",
				"io.openshift.maintainer.product": "OpenShift Container Platform",
				"io.openshift.tags": "openshift,base",
				"maintainer": "Odin Team \u003caos-odin@redhat.com\u003e",
				"name": "openshift/ose-operator-registry",
				"operators.operatorframework.io.index.database.v1": "/database/index.db",
				"release": "202103270246.p0",
				"summary": "Operator Registry runs in a Kubernetes or OpenShift cluster to provide operator catalog data to Operator Lifecycle Manager.",
				"url": "https://access.redhat.com/containers/#/registry.access.redhat.com/openshift/ose-operator-registry/images/v4.5.0-202103270246.p0",
				"vcs-ref": "35e04a390e2ca45f9ef267a5ab9e7bec47cb331a",
				"vcs-type": "git",
				"vendor": "Red Hat, Inc.",
				"version": "v4.5.0"
			}
		}
	}
}